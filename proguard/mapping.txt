android.content.pm.IPackageDataObserver -> android.a.a.a:
    void onRemoveCompleted(java.lang.String,boolean) -> a
android.content.pm.IPackageDataObserver$Stub -> android.a.a.a$a:
    40:40:android.os.IBinder asBinder() -> asBinder
    44:62:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.content.pm.IPackageStatsObserver -> android.a.a.b:
    void onGetStatsCompleted(android.content.pm.PackageStats,boolean) -> a
android.content.pm.IPackageStatsObserver$Stub -> android.a.a.b$a:
    40:40:android.os.IBinder asBinder() -> asBinder
    44:67:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    29:30:void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    221:233:java.lang.String toString() -> toString
    237:238:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    241:331:void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    364:376:void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    389:390:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    394:418:void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    421:421:android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    425:430:android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    461:466:android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    470:475:android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    549:571:void bumpBackStackNesting(int) -> a
    574:574:int commit() -> a
    582:596:int commitInternal(boolean) -> a
    600:688:void run() -> run
    691:772:void popFromBackStack(boolean) -> b
    775:775:java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b$a:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    96:138:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    142:142:int describeContents() -> describeContents
    146:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    160:160:android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    164:164:android.support.v4.app.BackStackState[] newArray(int) -> a
    158:158:java.lang.Object[] newArray(int) -> newArray
    158:158:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    369:369:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    388:409:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    416:426:void restoreViewState(android.os.Bundle) -> a
    429:435:void setIndex(int,android.support.v4.app.Fragment) -> a
    438:438:boolean isInBackStack() -> a
    445:445:boolean equals(java.lang.Object) -> equals
    452:452:int hashCode() -> hashCode
    457:472:java.lang.String toString() -> toString
    563:563:android.support.v4.app.FragmentActivity getActivity() -> b
    570:573:android.content.res.Resources getResources() -> c
    664:664:boolean isDetached() -> d
    724:724:void onHiddenChanged(boolean) -> a
    867:867:void onActivityResult(int,int,android.content.Intent) -> a
    875:875:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    921:922:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    929:930:void onAttach(android.app.Activity) -> a
    936:936:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    954:955:void onCreate(android.os.Bundle) -> c
    978:978:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    992:992:void onViewCreated(android.view.View,android.os.Bundle) -> a
    1018:1019:void onActivityCreated(android.os.Bundle) -> d
    1033:1034:void onViewStateRestored(android.os.Bundle) -> e
    1042:1054:void onStart() -> e
    1063:1064:void onResume() -> f
    1086:1086:void onSaveInstanceState(android.os.Bundle) -> f
    1089:1090:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1098:1099:void onPause() -> g
    1107:1108:void onStop() -> h
    1111:1112:void onLowMemory() -> onLowMemory
    1124:1125:void onDestroyView() -> i
    1132:1142:void onDestroy() -> j
    1151:1171:void initState() -> k
    1178:1179:void onDetach() -> l
    1195:1195:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1212:1212:void onPrepareOptionsMenu(android.view.Menu) -> a
    1222:1222:void onDestroyOptionsMenu() -> m
    1243:1243:boolean onOptionsItemSelected(android.view.MenuItem) -> a
    1254:1254:void onOptionsMenuClosed(android.view.Menu) -> b
    1274:1275:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1320:1320:boolean onContextItemSelected(android.view.MenuItem) -> b
    1333:1407:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    1420:1430:void instantiateChildFragmentManager() -> n
    1433:1453:void performCreate(android.os.Bundle) -> g
    1457:1460:android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    1464:1476:void performActivityCreated(android.os.Bundle) -> h
    1479:1495:void performStart() -> o
    1498:1512:void performResume() -> p
    1515:1519:void performConfigurationChanged(android.content.res.Configuration) -> a
    1522:1526:void performLowMemory() -> q
    1538:1548:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    1552:1562:boolean performPrepareOptionsMenu(android.view.Menu) -> c
    1566:1578:boolean performOptionsItemSelected(android.view.MenuItem) -> c
    1582:1592:boolean performContextItemSelected(android.view.MenuItem) -> d
    1596:1604:void performOptionsMenuClosed(android.view.Menu) -> d
    1607:1614:void performSaveInstanceState(android.os.Bundle) -> i
    1617:1626:void performPause() -> r
    1629:1638:void performStop() -> s
    1641:1658:void performReallyStop() -> t
    1661:1673:void performDestroyView() -> u
    1676:1685:void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> a
    1424:1427:android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$a:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    314:314:int describeContents() -> describeContents
    319:320:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    325:325:android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    329:329:android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    323:323:java.lang.Object[] newArray(int) -> newArray
    323:323:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.c:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    147:167:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    174:177:void onBackPressed() -> onBackPressed
    184:186:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    193:211:void onCreate(android.os.Bundle) -> onCreate
    218:229:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    237:312:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    320:328:void onDestroy() -> onDestroy
    335:344:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    352:354:void onLowMemory() -> onLowMemory
    361:373:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    382:388:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    395:402:void onPause() -> onPause
    416:418:void onNewIntent(android.content.Intent) -> onNewIntent
    431:435:void onResume() -> onResume
    442:446:void onPostResume() -> onPostResume
    455:456:void onResumeFragments() -> a
    463:473:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    483:518:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    526:531:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    539:580:void onStart() -> onStart
    587:593:void onStop() -> onStop
    604:604:java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    623:633:void supportInvalidateOptionsMenu() -> c
    646:670:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    673:735:java.lang.String viewToString(android.view.View) -> a
    739:757:void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    760:766:void doReallyStop(boolean) -> a
    776:788:void onReallyStop() -> d
    798:798:void onAttachFragment(android.support.v4.app.Fragment) -> a
    805:805:android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    814:818:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    837:844:void invalidateSupportFragment(java.lang.String) -> a
    863:875:android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.c$1:
    android.support.v4.app.FragmentActivity this$0 -> a
    84:97:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.c$2:
    android.support.v4.app.FragmentActivity this$0 -> a
    104:104:android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.c$a:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.c$b:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.d:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.e:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.e$a:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.f:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    434:451:void throwException(java.lang.RuntimeException) -> a
    456:456:android.support.v4.app.FragmentTransaction beginTransaction() -> a
    461:461:boolean executePendingTransactions() -> b
    475:477:boolean popBackStackImmediate() -> c
    545:550:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    554:567:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    585:595:java.lang.String toString() -> toString
    600:709:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    720:730:android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    734:737:android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    742:796:android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    800:809:void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    814:1063:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    1066:1067:void moveToState(android.support.v4.app.Fragment) -> b
    1070:1071:void moveToState(int,boolean) -> a
    1074:1104:void moveToState(int,int,int,boolean) -> a
    1107:1115:void startPendingDeferredFragments() -> d
    1118:1134:void makeActive(android.support.v4.app.Fragment) -> c
    1137:1149:void makeInactive(android.support.v4.app.Fragment) -> d
    1152:1171:void addFragment(android.support.v4.app.Fragment,boolean) -> a
    1174:1188:void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    1191:1207:void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    1210:1226:void showFragment(android.support.v4.app.Fragment,int,int) -> c
    1229:1245:void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    1248:1267:void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    1270:1288:android.support.v4.app.Fragment findFragmentById(int) -> a
    1292:1310:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    1326:1334:void checkStateLoss() -> t
    1337:1353:void enqueueAction(java.lang.Runnable,boolean) -> a
    1356:1372:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    1376:1398:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    1401:1409:void freeBackStackIndex(int) -> b
    1415:1464:boolean execPendingActions() -> e
    1468:1473:void reportBackStackChanged() -> f
    1476:1481:void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    1484:1543:boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    1547:1562:java.util.ArrayList retainNonConfig() -> g
    1566:1579:void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    1582:1611:android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    1617:1727:android.os.Parcelable saveAllState() -> h
    1733:1840:void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    1844:1848:void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    1851:1852:void noteStateNotSaved() -> i
    1855:1857:void dispatchCreate() -> j
    1860:1862:void dispatchActivityCreated() -> k
    1865:1867:void dispatchStart() -> l
    1870:1872:void dispatchResume() -> m
    1875:1876:void dispatchPause() -> n
    1882:1885:void dispatchStop() -> o
    1888:1889:void dispatchReallyStop() -> p
    1892:1893:void dispatchDestroyView() -> q
    1896:1902:void dispatchDestroy() -> r
    1905:1913:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    1916:1924:void dispatchLowMemory() -> s
    1927:1955:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1959:1970:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    1974:1984:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    1988:1998:boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    2002:2010:void dispatchOptionsMenuClosed(android.view.Menu) -> b
    2013:2025:int reverseTransit(int) -> c
    2037:2049:int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.f$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    429:430:void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.f$2:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    994:999:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1002:1002:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1005:1005:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    353:353:int describeContents() -> describeContents
    357:360:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    365:365:android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    369:369:android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    363:363:java.lang.Object[] newArray(int) -> newArray
    363:363:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    89:116:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    120:120:int describeContents() -> describeContents
    124:134:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    139:139:android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    143:143:android.support.v4.app.FragmentState[] newArray(int) -> a
    137:137:java.lang.Object[] newArray(int) -> newArray
    137:137:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    181:181:void setup() -> setup
    219:220:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    246:281:void onAttachedToWindow() -> onAttachedToWindow
    285:287:void onDetachedFromWindow() -> onDetachedFromWindow
    291:294:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    299:302:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    306:315:void onTabChanged(java.lang.String) -> onTabChanged
    318:349:android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    104:106:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    110:110:java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    118:118:android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    122:122:android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    116:116:java.lang.Object[] newArray(int) -> newArray
    116:116:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$a:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    61:61:android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    61:61:android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    61:61:java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    61:61:java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    61:61:android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.g:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.h:
    184:184:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.h$a:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.i:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    484:485:void updateActivity(android.support.v4.app.FragmentActivity) -> a
    701:716:void doStart() -> b
    719:731:void doStop() -> c
    734:747:void doRetain() -> d
    750:758:void finishRetain() -> e
    761:764:void doReportNextStart() -> f
    767:770:void doReportStart() -> g
    773:785:void doDestroy() -> h
    789:795:java.lang.String toString() -> toString
    800:820:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    824:830:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.i$a:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    235:267:void start() -> a
    270:275:void retain() -> b
    278:300:void finishRetain() -> c
    303:311:void reportStart() -> d
    314:324:void stop() -> e
    327:359:void destroy() -> f
    418:435:void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    439:447:java.lang.String toString() -> toString
    451:474:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.j:
    32:41:android.view.ViewGroup wrap(android.view.View) -> a
    53:54:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    61:62:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.k:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    129:134:void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    142:149:void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    194:198:void startLoading() -> a
    206:206:void onStartLoading() -> b
    242:244:void stopLoading() -> c
    253:253:void onStopLoading() -> d
    290:295:void reset() -> e
    304:304:void onReset() -> f
    341:344:java.lang.String dataToString(java.lang.Object) -> a
    349:354:java.lang.String toString() -> toString
    366:372:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.a$a:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    36:39:android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.a$a:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    51:51:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    56:56:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.b:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.c:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    40:40:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    44:44:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.d:
    24:24:android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    28:43:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    44:45:void close() -> close
    48:49:void flush() -> flush
    52:61:void write(char[],int,int) -> write
    64:68:void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    116:138:void gc() -> c
    197:201:int size() -> a
    210:214:int keyAt(int) -> a
    223:227:java.lang.Object valueAt(int) -> b
    280:289:void clear() -> b
    346:350:int idealByteArraySize(int) -> c
    354:354:int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    139:139:boolean hasModifiers(android.view.KeyEvent,int) -> a
    143:143:boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.a$a:
    49:61:int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    67:73:int normalizeMetaState(int) -> a
    78:83:boolean metaStateHasModifiers(int,int) -> a
    88:88:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.a$b:
    103:103:boolean metaStateHasModifiers(int,int) -> a
    108:108:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.a$c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.b:
    30:30:boolean metaStateHasModifiers(int,int) -> a
    34:34:boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.c:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    191:191:int getActionIndex(android.view.MotionEvent) -> a
    201:201:int findPointerIndex(android.view.MotionEvent,int) -> a
    210:210:int getPointerId(android.view.MotionEvent,int) -> b
    219:219:float getX(android.view.MotionEvent,int) -> c
    228:228:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.c$a:
    43:47:int findPointerIndex(android.view.MotionEvent,int) -> a
    51:55:int getPointerId(android.view.MotionEvent,int) -> b
    59:62:float getX(android.view.MotionEvent,int) -> c
    66:69:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.c$b:
    83:83:int findPointerIndex(android.view.MotionEvent,int) -> a
    87:87:int getPointerId(android.view.MotionEvent,int) -> b
    91:91:float getX(android.view.MotionEvent,int) -> c
    95:95:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.c$c:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.d:
    26:26:int findPointerIndex(android.view.MotionEvent,int) -> a
    29:29:int getPointerId(android.view.MotionEvent,int) -> b
    32:32:float getX(android.view.MotionEvent,int) -> c
    35:35:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.e:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    95:96:void startUpdate(android.view.ViewGroup) -> a
    110:110:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    124:125:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    137:138:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    148:149:void finishUpdate(android.view.ViewGroup) -> b
    159:159:void startUpdate(android.view.View) -> a
    175:175:java.lang.Object instantiateItem(android.view.View,int) -> a
    192:192:void destroyItem(android.view.View,int,java.lang.Object) -> a
    207:207:void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    219:219:void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    239:239:android.os.Parcelable saveState() -> b
    250:250:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    268:268:int getItemPosition(java.lang.Object) -> a
    280:281:void registerDataSetObserver(android.database.DataSetObserver) -> a
    284:285:void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    308:308:float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.f:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    82:82:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.f$a:
    40:40:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.f$b:
    54:54:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.f$c:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.g:
    26:26:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.h:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    347:347:boolean canScrollHorizontally(android.view.View,int) -> a
    371:371:int getOverScrollMode(android.view.View) -> a
    544:545:void postInvalidateOnAnimation(android.view.View) -> b
    576:577:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    713:714:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.h$a:
    141:141:boolean canScrollHorizontally(android.view.View,int) -> a
    147:147:int getOverScrollMode(android.view.View) -> a
    172:173:void postInvalidateOnAnimation(android.view.View) -> b
    178:179:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    184:184:long getFrameTime() -> a
    199:199:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.h$b:
    214:214:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.h$c:
    224:224:long getFrameTime() -> a
    227:228:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.h$d:
    237:237:boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.h$e:
    272:273:void postInvalidateOnAnimation(android.view.View) -> b
    280:281:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.h$f:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.h$g:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.i:
    23:23:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.j:
    25:25:long getFrameTime() -> a
    29:30:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.k:
    30:30:boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.l:
    36:37:void postInvalidateOnAnimation(android.view.View) -> a
    45:46:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    375:377:void onDetachedFromWindow() -> onDetachedFromWindow
    380:395:void setScrollState(int) -> setScrollState
    403:441:void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    444:452:void removeNonDecorViews() -> f
    460:460:android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    464:465:void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    475:477:void setCurrentItem(int) -> setCurrentItem
    486:488:void setCurrentItem(int,boolean) -> a
    491:491:int getCurrentItem() -> getCurrentItem
    495:496:void setCurrentItemInternal(int,boolean,boolean) -> a
    499:525:void setCurrentItemInternal(int,boolean,boolean,int) -> a
    529:554:void scrollToItem(int,boolean,int,boolean) -> a
    563:564:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    594:607:void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    611:613:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    636:636:int getOffscreenPageLimit() -> getOffscreenPageLimit
    657:666:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    677:684:void setPageMargin(int) -> setPageMargin
    692:692:int getPageMargin() -> getPageMargin
    701:705:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    713:714:void setPageMarginDrawable(int) -> setPageMarginDrawable
    718:718:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    723:728:void drawableStateChanged() -> drawableStateChanged
    735:737:float distanceInfluenceForSnapDuration(float) -> a
    758:796:void smoothScrollTo(int,int,int) -> a
    799:808:android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    814:878:void dataSetChanged() -> a
    881:882:void populate() -> b
    885:1058:void populate(int) -> a
    1061:1144:void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    1200:1206:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1211:1227:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1231:1253:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1256:1262:android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    1267:1273:android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    1277:1283:android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    1288:1290:void onAttachedToWindow() -> onAttachedToWindow
    1299:1385:void onMeasure(int,int) -> onMeasure
    1389:1395:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1398:1422:void recomputeScrollPosition(int,int,int,int) -> a
    1426:1530:void onLayout(boolean,int,int,int,int) -> onLayout
    1534:1555:void computeScroll() -> computeScroll
    1558:1582:boolean pageScrolled(int) -> d
    1599:1667:void onPageScrolled(int,float,int) -> a
    1670:1698:void completeScroll(boolean) -> a
    1701:1701:boolean isGutterDrag(float,float) -> a
    1705:1711:void enableLayers(boolean) -> b
    1721:1853:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1858:1972:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1976:2019:boolean performDrag(float) -> b
    2027:2065:android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    2070:2089:int determineTargetPage(int,float,int,int) -> a
    2094:2132:void draw(android.graphics.Canvas) -> draw
    2136:2176:void onDraw(android.graphics.Canvas) -> onDraw
    2307:2319:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    2322:2329:void endDrag() -> h
    2332:2344:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    2358:2377:boolean canScroll(android.view.View,boolean,int,int,int) -> a
    2383:2383:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2395:2417:boolean executeKeyEvent(android.view.KeyEvent) -> a
    2421:2460:boolean arrowScroll(int) -> c
    2464:2486:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    2490:2494:boolean pageLeft() -> c
    2498:2502:boolean pageRight() -> d
    2510:2547:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2557:2566:void addTouchables(java.util.ArrayList) -> addTouchables
    2577:2598:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2608:2620:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2625:2625:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2630:2630:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2635:2635:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2640:2640:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    84:84:int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    111:111:int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    108:108:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    117:118:float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$a:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$b:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$c:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$d:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$e:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$f:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$g:
    android.support.v4.view.ViewPager this$0 -> a
    2690:2691:void onChanged() -> onChanged
    2694:2695:void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    1163:1166:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1170:1170:java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    1179:1179:android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    1183:1183:android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    1176:1176:java.lang.Object[] newArray(int) -> a
    1176:1176:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$h:
    2753:2758:int compare(android.view.View,android.view.View) -> a
    2750:2750:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    143:144:void setSize(int,int) -> a
    154:154:boolean isFinished() -> a
    162:163:void finish() -> b
    177:177:boolean onPull(float) -> a
    189:189:boolean onRelease() -> c
    218:218:boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.a$a:
    64:64:void setSize(java.lang.Object,int,int) -> a
    67:67:boolean isFinished(java.lang.Object) -> a
    71:71:void finish(java.lang.Object) -> b
    74:74:boolean onPull(java.lang.Object,float) -> a
    78:78:boolean onRelease(java.lang.Object) -> c
    86:86:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.a$b:
    96:97:void setSize(java.lang.Object,int,int) -> a
    100:100:boolean isFinished(java.lang.Object) -> a
    104:105:void finish(java.lang.Object) -> b
    108:108:boolean onPull(java.lang.Object,float) -> a
    112:112:boolean onRelease(java.lang.Object) -> c
    120:120:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.a$c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.b:
    34:35:void setSize(java.lang.Object,int,int) -> a
    38:38:boolean isFinished(java.lang.Object) -> a
    42:43:void finish(java.lang.Object) -> b
    46:47:boolean onPull(java.lang.Object,float) -> a
    51:53:boolean onRelease(java.lang.Object) -> c
    62:62:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.android.internal.telephony.ITelephony -> com.a.a.a.a:
    void dial(java.lang.String) -> a
    void call(java.lang.String) -> b
    boolean showCallScreen() -> a
    boolean showCallScreenWithDialpad(boolean) -> a
    boolean endCall() -> b
    void answerRingingCall() -> c
    void silenceRinger() -> d
    boolean isOffhook() -> e
    boolean isRinging() -> f
    boolean isIdle() -> g
    boolean isRadioOn() -> h
    boolean isSimPinEnabled() -> i
    void cancelMissedCallsNotification() -> j
    boolean supplyPin(java.lang.String) -> c
    boolean handlePinMmi(java.lang.String) -> d
    void toggleRadioOnOff() -> k
    boolean setRadio(boolean) -> b
    void updateServiceLocation() -> l
    void enableLocationUpdates() -> m
    void disableLocationUpdates() -> n
    int enableApnType(java.lang.String) -> e
    int disableApnType(java.lang.String) -> f
    boolean enableDataConnectivity() -> o
    boolean disableDataConnectivity() -> p
    boolean isDataConnectivityPossible() -> q
    android.os.Bundle getCellLocation() -> r
    java.util.List getNeighboringCellInfo() -> s
    int getCallState() -> t
    int getDataActivity() -> u
    int getDataState() -> v
    int getActivePhoneType() -> w
    int getCdmaEriIconIndex() -> x
    int getCdmaEriIconMode() -> y
    java.lang.String getCdmaEriText() -> z
    boolean getCdmaNeedsProvisioning() -> A
    int getVoiceMessageCount() -> B
    int getNetworkType() -> C
    boolean hasIccCard() -> D
com.android.internal.telephony.ITelephony$Stub -> com.a.a.a.a$a:
    30:37:com.android.internal.telephony.ITelephony asInterface(android.os.IBinder) -> a
    45:370:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.internal.telephony.ITelephony$Stub$Proxy -> com.a.a.a.a$a$a:
    android.os.IBinder mRemote -> a
    381:381:android.os.IBinder asBinder() -> asBinder
    395:407:void dial(java.lang.String) -> a
    414:426:void call(java.lang.String) -> b
    436:449:boolean showCallScreen() -> a
    464:478:boolean showCallScreenWithDialpad(boolean) -> a
    487:500:boolean endCall() -> b
    519:530:void answerRingingCall() -> c
    544:555:void silenceRinger() -> d
    562:575:boolean isOffhook() -> e
    583:596:boolean isRinging() -> f
    604:617:boolean isIdle() -> g
    625:638:boolean isRadioOn() -> h
    646:659:boolean isSimPinEnabled() -> i
    666:677:void cancelMissedCallsNotification() -> j
    685:699:boolean supplyPin(java.lang.String) -> c
    710:724:boolean handlePinMmi(java.lang.String) -> d
    731:742:void toggleRadioOnOff() -> k
    748:762:boolean setRadio(boolean) -> b
    769:780:void updateServiceLocation() -> l
    786:797:void enableLocationUpdates() -> m
    803:814:void disableLocationUpdates() -> n
    820:834:int enableApnType(java.lang.String) -> e
    841:855:int disableApnType(java.lang.String) -> f
    862:875:boolean enableDataConnectivity() -> o
    882:895:boolean disableDataConnectivity() -> p
    902:915:boolean isDataConnectivityPossible() -> q
    919:937:android.os.Bundle getCellLocation() -> r
    944:957:java.util.List getNeighboringCellInfo() -> s
    961:974:int getCallState() -> t
    978:991:int getDataActivity() -> u
    995:1008:int getDataState() -> v
    1017:1030:int getActivePhoneType() -> w
    1037:1050:int getCdmaEriIconIndex() -> x
    1059:1072:int getCdmaEriIconMode() -> y
    1079:1092:java.lang.String getCdmaEriText() -> z
    1099:1112:boolean getCdmaNeedsProvisioning() -> A
    1119:1132:int getVoiceMessageCount() -> B
    1139:1152:int getNetworkType() -> C
    1159:1172:boolean hasIccCard() -> D
com.itheima.mobileguard.MobileGuardAppliation -> com.itheima.mobileguard.MobileGuardAppliation:
    32:34:void onCreate() -> onCreate
com.itheima.mobileguard.MobileGuardAppliation$MyExecptionHandler -> com.itheima.mobileguard.MobileGuardAppliation$a:
    com.itheima.mobileguard.MobileGuardAppliation this$0 -> a
    43:64:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.itheima.mobileguard.activities.AntiVirusActivity -> com.itheima.mobileguard.activities.AntiVirusActivity:
    android.widget.ImageView iv_scan -> a
    android.widget.ProgressBar progressBar1 -> b
    android.widget.TextView tv_scan_status -> c
    android.widget.LinearLayout ll_container -> d
    android.content.pm.PackageManager pm -> e
    boolean flag -> f
    android.os.Handler handler -> g
    64:80:void onCreate(android.os.Bundle) -> onCreate
    83:131:void scanVirus() -> a
    135:137:void onDestroy() -> onDestroy
    31:31:android.widget.TextView access$0(com.itheima.mobileguard.activities.AntiVirusActivity) -> a
    32:32:android.widget.LinearLayout access$1(com.itheima.mobileguard.activities.AntiVirusActivity) -> b
    29:29:android.widget.ImageView access$2(com.itheima.mobileguard.activities.AntiVirusActivity) -> c
    35:35:android.os.Handler access$3(com.itheima.mobileguard.activities.AntiVirusActivity) -> d
    33:33:android.content.pm.PackageManager access$4(com.itheima.mobileguard.activities.AntiVirusActivity) -> e
    30:30:android.widget.ProgressBar access$5(com.itheima.mobileguard.activities.AntiVirusActivity) -> f
    34:34:boolean access$6(com.itheima.mobileguard.activities.AntiVirusActivity) -> g
com.itheima.mobileguard.activities.AntiVirusActivity$1 -> com.itheima.mobileguard.activities.AntiVirusActivity$1:
    com.itheima.mobileguard.activities.AntiVirusActivity this$0 -> a
    37:59:void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobileguard.activities.AntiVirusActivity$2 -> com.itheima.mobileguard.activities.AntiVirusActivity$2:
    com.itheima.mobileguard.activities.AntiVirusActivity this$0 -> a
    86:129:void run() -> run
com.itheima.mobileguard.activities.AntiVirusActivity$ScanInfo -> com.itheima.mobileguard.activities.AntiVirusActivity$a:
    java.lang.String appname -> a
    boolean isVirus -> b
    java.lang.String desc -> c
    java.lang.String packname -> d
    com.itheima.mobileguard.activities.AntiVirusActivity this$0 -> e
com.itheima.mobileguard.activities.AppLockActivity -> com.itheima.mobileguard.activities.AppLockActivity:
    android.widget.TextView tv_locked -> n
    android.widget.TextView tv_unlock -> o
    android.support.v4.app.FragmentManager fm -> p
    com.itheima.mobileguard.fragments.UnlockFragment unlockFragment -> q
    com.itheima.mobileguard.fragments.LockedFragment lockedFragment -> r
    28:42:void onCreate(android.os.Bundle) -> onCreate
    47:63:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.AppManagerActivity -> com.itheima.mobileguard.activities.AppManagerActivity:
    android.widget.TextView tv_avail_rom -> a
    android.widget.TextView tv_avail_sd -> b
    android.widget.LinearLayout ll_loading -> c
    java.util.List infos -> d
    java.util.List userAppInfos -> e
    java.util.List systemAppInfos -> f
    android.widget.TextView tv_appsize_lable -> g
    android.widget.ListView lv_appmanger -> h
    android.widget.LinearLayout ll_start -> i
    android.widget.LinearLayout ll_share -> j
    android.widget.LinearLayout ll_uninstall -> k
    android.widget.LinearLayout ll_setting -> l
    com.itheima.mobileguard.domain.AppInfo clickedAppInfo -> m
    android.widget.PopupWindow popupwindow -> n
    com.itheima.mobileguard.activities.AppManagerActivity$UninstallReceiver receiver -> o
    android.os.Handler handler -> p
    97:194:void onCreate(android.os.Bundle) -> onCreate
    198:217:void fillData() -> a
    220:224:void dismissPopupWindow() -> b
    328:332:void onDestroy() -> onDestroy
    336:355:void onClick(android.view.View) -> onClick
    358:364:void viewAppDetail() -> c
    370:393:void uninstallApplication() -> d
    400:408:void startApplication() -> e
    414:422:void shareApplication() -> f
    51:51:android.widget.LinearLayout access$0(com.itheima.mobileguard.activities.AppManagerActivity) -> a
    68:68:android.widget.ListView access$1(com.itheima.mobileguard.activities.AppManagerActivity) -> b
    59:59:java.util.List access$2(com.itheima.mobileguard.activities.AppManagerActivity) -> c
    64:64:java.util.List access$3(com.itheima.mobileguard.activities.AppManagerActivity) -> d
    197:197:void access$4(com.itheima.mobileguard.activities.AppManagerActivity) -> e
    219:219:void access$5(com.itheima.mobileguard.activities.AppManagerActivity) -> f
    66:66:android.widget.TextView access$6(com.itheima.mobileguard.activities.AppManagerActivity) -> g
    78:78:void access$7(com.itheima.mobileguard.activities.AppManagerActivity,com.itheima.mobileguard.domain.AppInfo) -> a
    72:72:void access$8(com.itheima.mobileguard.activities.AppManagerActivity,android.widget.LinearLayout) -> a
    70:70:void access$9(com.itheima.mobileguard.activities.AppManagerActivity,android.widget.LinearLayout) -> b
    71:71:void access$10(com.itheima.mobileguard.activities.AppManagerActivity,android.widget.LinearLayout) -> c
    73:73:void access$11(com.itheima.mobileguard.activities.AppManagerActivity,android.widget.LinearLayout) -> d
    71:71:android.widget.LinearLayout access$12(com.itheima.mobileguard.activities.AppManagerActivity) -> h
    70:70:android.widget.LinearLayout access$13(com.itheima.mobileguard.activities.AppManagerActivity) -> i
    72:72:android.widget.LinearLayout access$14(com.itheima.mobileguard.activities.AppManagerActivity) -> j
    73:73:android.widget.LinearLayout access$15(com.itheima.mobileguard.activities.AppManagerActivity) -> k
    83:83:void access$16(com.itheima.mobileguard.activities.AppManagerActivity,android.widget.PopupWindow) -> a
    83:83:android.widget.PopupWindow access$17(com.itheima.mobileguard.activities.AppManagerActivity) -> l
    55:55:void access$18(com.itheima.mobileguard.activities.AppManagerActivity,java.util.List) -> a
    59:59:void access$19(com.itheima.mobileguard.activities.AppManagerActivity,java.util.List) -> b
    64:64:void access$20(com.itheima.mobileguard.activities.AppManagerActivity,java.util.List) -> c
    55:55:java.util.List access$21(com.itheima.mobileguard.activities.AppManagerActivity) -> m
    87:87:android.os.Handler access$22(com.itheima.mobileguard.activities.AppManagerActivity) -> n
com.itheima.mobileguard.activities.AppManagerActivity$1 -> com.itheima.mobileguard.activities.AppManagerActivity$1:
    com.itheima.mobileguard.activities.AppManagerActivity this$0 -> a
    90:92:void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobileguard.activities.AppManagerActivity$2 -> com.itheima.mobileguard.activities.AppManagerActivity$2:
    com.itheima.mobileguard.activities.AppManagerActivity this$0 -> a
    118:118:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    124:134:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.itheima.mobileguard.activities.AppManagerActivity$3 -> com.itheima.mobileguard.activities.AppManagerActivity$3:
    com.itheima.mobileguard.activities.AppManagerActivity this$0 -> a
    142:186:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itheima.mobileguard.activities.AppManagerActivity$4 -> com.itheima.mobileguard.activities.AppManagerActivity$4:
    com.itheima.mobileguard.activities.AppManagerActivity this$0 -> a
    201:215:void run() -> run
com.itheima.mobileguard.activities.AppManagerActivity$AppManagerAdapter -> com.itheima.mobileguard.activities.AppManagerActivity$a:
    com.itheima.mobileguard.activities.AppManagerActivity this$0 -> a
    238:238:int getCount() -> getCount
    243:296:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    301:317:java.lang.Object getItem(int) -> getItem
    322:322:long getItemId(int) -> getItemId
com.itheima.mobileguard.activities.AppManagerActivity$UninstallReceiver -> com.itheima.mobileguard.activities.AppManagerActivity$b:
    com.itheima.mobileguard.activities.AppManagerActivity this$0 -> a
    427:430:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobileguard.activities.AppManagerActivity$ViewHolder -> com.itheima.mobileguard.activities.AppManagerActivity$c:
    android.widget.ImageView iv_app_icon -> a
    android.widget.TextView tv_app_name -> b
    android.widget.TextView tv_app_size -> c
    android.widget.TextView tv_app_location -> d
com.itheima.mobileguard.activities.AtoolsActivity -> com.itheima.mobileguard.activities.AtoolsActivity:
    android.app.ProgressDialog pd -> a
    25:27:void onCreate(android.os.Bundle) -> onCreate
    31:33:void numberAddressQuery(android.view.View) -> numberAddressQuery
    40:76:void smsBackup(android.view.View) -> smsBackup
    83:83:void smsRestore(android.view.View) -> smsRestore
    89:91:void openAppLock(android.view.View) -> openAppLock
    21:21:android.app.ProgressDialog access$0(com.itheima.mobileguard.activities.AtoolsActivity) -> a
com.itheima.mobileguard.activities.AtoolsActivity$1 -> com.itheima.mobileguard.activities.AtoolsActivity$1:
    com.itheima.mobileguard.activities.AtoolsActivity this$0 -> a
    48:74:void run() -> run
    45:45:com.itheima.mobileguard.activities.AtoolsActivity access$0(com.itheima.mobileguard.activities.AtoolsActivity$1) -> a
com.itheima.mobileguard.activities.AtoolsActivity$1$1 -> com.itheima.mobileguard.activities.AtoolsActivity$1$1:
    com.itheima.mobileguard.activities.AtoolsActivity$1 this$1 -> a
    51:52:void onSmsBackup(int) -> a
    56:57:void beforeSmsBackup(int) -> b
com.itheima.mobileguard.activities.BaseSetupActivity -> com.itheima.mobileguard.activities.a:
    android.content.SharedPreferences sp -> a
    android.view.GestureDetector mGestureDetector -> b
    20:56:void onCreate(android.os.Bundle) -> onCreate
    62:63:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    73:75:void next(android.view.View) -> next
    void showNext() -> a
    85:87:void pre(android.view.View) -> pre
    void showPre() -> b
    94:97:void startActivityAndFinishSelf(java.lang.Class) -> a
com.itheima.mobileguard.activities.BaseSetupActivity$1 -> com.itheima.mobileguard.activities.a$1:
    com.itheima.mobileguard.activities.BaseSetupActivity this$0 -> a
    32:50:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.itheima.mobileguard.activities.CallSmsSafeActivity -> com.itheima.mobileguard.activities.CallSmsSafeActivity:
    android.widget.ListView lv_callsms_safe -> a
    android.widget.LinearLayout ll_add_number_tips -> b
    android.widget.LinearLayout ll_loading -> c
    com.itheima.mobileguard.db.dao.BlackNumberDao dao -> d
    java.util.List infos -> e
    com.itheima.mobileguard.activities.CallSmsSafeActivity$CallSmsSafeAdapter adapter -> f
    int startIndex -> g
    int maxCount -> h
    int totalCount -> i
    android.os.Handler handler -> j
    74:77:void onCreate(android.os.Bundle) -> onCreate
    83:99:void fillData() -> a
    105:144:void initUI() -> b
    237:300:void addBlackNumber(android.view.View) -> addBlackNumber
    32:32:android.widget.LinearLayout access$0(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> a
    35:35:java.util.List access$1(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> b
    31:31:android.widget.LinearLayout access$2(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> c
    37:37:com.itheima.mobileguard.activities.CallSmsSafeActivity$CallSmsSafeAdapter access$3(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> d
    37:37:void access$4(com.itheima.mobileguard.activities.CallSmsSafeActivity,com.itheima.mobileguard.activities.CallSmsSafeActivity$CallSmsSafeAdapter) -> a
    30:30:android.widget.ListView access$5(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> e
    34:34:com.itheima.mobileguard.db.dao.BlackNumberDao access$6(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> f
    42:42:int access$7(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> g
    47:47:int access$8(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> h
    35:35:void access$9(com.itheima.mobileguard.activities.CallSmsSafeActivity,java.util.List) -> a
    54:54:android.os.Handler access$10(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> i
    42:42:void access$11(com.itheima.mobileguard.activities.CallSmsSafeActivity,int) -> a
    49:49:int access$12(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> j
    82:82:void access$13(com.itheima.mobileguard.activities.CallSmsSafeActivity) -> k
com.itheima.mobileguard.activities.CallSmsSafeActivity$1 -> com.itheima.mobileguard.activities.CallSmsSafeActivity$1:
    com.itheima.mobileguard.activities.CallSmsSafeActivity this$0 -> a
    56:69:void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobileguard.activities.CallSmsSafeActivity$2 -> com.itheima.mobileguard.activities.CallSmsSafeActivity$2:
    com.itheima.mobileguard.activities.CallSmsSafeActivity this$0 -> a
    90:97:void run() -> run
com.itheima.mobileguard.activities.CallSmsSafeActivity$3 -> com.itheima.mobileguard.activities.CallSmsSafeActivity$3:
    com.itheima.mobileguard.activities.CallSmsSafeActivity this$0 -> a
    117:134:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    141:141:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.itheima.mobileguard.activities.CallSmsSafeActivity$4 -> com.itheima.mobileguard.activities.CallSmsSafeActivity$4:
    com.itheima.mobileguard.activities.CallSmsSafeActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    250:251:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.CallSmsSafeActivity$5 -> com.itheima.mobileguard.activities.CallSmsSafeActivity$5:
    com.itheima.mobileguard.activities.CallSmsSafeActivity this$0 -> a
    android.widget.EditText val$et_black_number -> b
    android.widget.CheckBox val$cb_phone -> c
    android.widget.CheckBox val$cb_sms -> d
    android.app.AlertDialog val$dialog -> e
    257:295:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.CallSmsSafeActivity$CallSmsSafeAdapter -> com.itheima.mobileguard.activities.CallSmsSafeActivity$a:
    com.itheima.mobileguard.activities.CallSmsSafeActivity this$0 -> a
    150:150:int getCount() -> getCount
    158:205:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    210:210:java.lang.Object getItem(int) -> getItem
    215:215:long getItemId(int) -> getItemId
    146:146:com.itheima.mobileguard.activities.CallSmsSafeActivity access$1(com.itheima.mobileguard.activities.CallSmsSafeActivity$CallSmsSafeAdapter) -> a
com.itheima.mobileguard.activities.CallSmsSafeActivity$CallSmsSafeAdapter$1 -> com.itheima.mobileguard.activities.CallSmsSafeActivity$a$1:
    com.itheima.mobileguard.activities.CallSmsSafeActivity$CallSmsSafeAdapter this$1 -> a
    com.itheima.mobileguard.domain.BlackNumberInfo val$info -> b
    179:193:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.CallSmsSafeActivity$ViewHolder -> com.itheima.mobileguard.activities.CallSmsSafeActivity$b:
    android.widget.TextView tv_phone -> a
    android.widget.TextView tv_mode -> b
    android.widget.ImageView iv_delete -> c
    com.itheima.mobileguard.activities.CallSmsSafeActivity this$0 -> d
com.itheima.mobileguard.activities.CleanCacheActivity -> com.itheima.mobileguard.activities.CleanCacheActivity:
    android.content.pm.PackageManager pm -> a
    android.widget.TextView tv_scan_status -> b
    android.widget.LinearLayout ll_loading -> c
    android.widget.LinearLayout ll_container -> d
    java.util.List cacheInfos -> e
    android.os.Handler handler -> f
    92:122:void onCreate(android.os.Bundle) -> onCreate
    132:139:void getCacheSize(android.content.pm.PackageInfo) -> a
    180:193:void cleanAll(android.view.View) -> cleanAll
    31:31:android.widget.TextView access$0(com.itheima.mobileguard.activities.CleanCacheActivity) -> a
    30:30:android.content.pm.PackageManager access$1(com.itheima.mobileguard.activities.CleanCacheActivity) -> b
    32:32:android.widget.LinearLayout access$2(com.itheima.mobileguard.activities.CleanCacheActivity) -> c
    35:35:java.util.List access$3(com.itheima.mobileguard.activities.CleanCacheActivity) -> d
    33:33:android.widget.LinearLayout access$4(com.itheima.mobileguard.activities.CleanCacheActivity) -> e
    35:35:void access$5(com.itheima.mobileguard.activities.CleanCacheActivity,java.util.List) -> a
    30:30:void access$6(com.itheima.mobileguard.activities.CleanCacheActivity,android.content.pm.PackageManager) -> a
    37:37:android.os.Handler access$7(com.itheima.mobileguard.activities.CleanCacheActivity) -> f
com.itheima.mobileguard.activities.CleanCacheActivity$1 -> com.itheima.mobileguard.activities.CleanCacheActivity$1:
    com.itheima.mobileguard.activities.CleanCacheActivity this$0 -> a
    39:81:void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobileguard.activities.CleanCacheActivity$2 -> com.itheima.mobileguard.activities.CleanCacheActivity$2:
    com.itheima.mobileguard.activities.CleanCacheActivity this$0 -> a
    99:119:void run() -> run
com.itheima.mobileguard.activities.CleanCacheActivity$CacheInfo -> com.itheima.mobileguard.activities.CleanCacheActivity$a:
    java.lang.String packname -> a
    java.lang.String appname -> b
    long cachesize -> c
    android.graphics.drawable.Drawable icon -> d
    com.itheima.mobileguard.activities.CleanCacheActivity this$0 -> e
com.itheima.mobileguard.activities.CleanCacheActivity$ClearCacheObserver -> com.itheima.mobileguard.activities.CleanCacheActivity$b:
    com.itheima.mobileguard.activities.CleanCacheActivity this$0 -> a
    86:87:void onRemoveCompleted(java.lang.String,boolean) -> a
com.itheima.mobileguard.activities.CleanCacheActivity$MyPackObserver -> com.itheima.mobileguard.activities.CleanCacheActivity$c:
    android.content.pm.PackageInfo info -> b
    com.itheima.mobileguard.activities.CleanCacheActivity this$0 -> a
    152:166:void onGetStatsCompleted(android.content.pm.PackageStats,boolean) -> a
com.itheima.mobileguard.activities.EnterPwdActivity -> com.itheima.mobileguard.activities.EnterPwdActivity:
    android.widget.EditText et_password -> a
    java.lang.String packname -> b
    android.widget.ImageView iv_lock_appicon -> c
    android.widget.TextView tv_lock_appname -> d
    25:40:void onCreate(android.os.Bundle) -> onCreate
    43:57:void click(android.view.View) -> click
    63:70:void onBackPressed() -> onBackPressed
com.itheima.mobileguard.activities.HomeActivity -> com.itheima.mobileguard.activities.HomeActivity:
    android.widget.GridView gv_home -> a
    android.content.SharedPreferences sp -> b
    java.lang.String[] names -> c
    int[] icons -> d
    android.widget.EditText et_pwd -> e
    android.widget.EditText et_pwd_confirm -> f
    android.widget.Button bt_ok -> g
    android.widget.Button bt_cancel -> h
    android.app.AlertDialog dialog -> i
    android.widget.EditText et_enter_pwd -> j
    44:101:void onCreate(android.os.Bundle) -> onCreate
    105:107:void onStart() -> onStart
    120:154:void showSetupPwdDialog() -> a
    162:199:void showEnterPwdDialog() -> b
    206:210:boolean isSetupPwd() -> c
    260:263:void onBackPressed() -> onBackPressed
    35:35:java.lang.String[] access$0(com.itheima.mobileguard.activities.HomeActivity) -> a
    37:37:int[] access$1(com.itheima.mobileguard.activities.HomeActivity) -> b
    205:205:boolean access$2(com.itheima.mobileguard.activities.HomeActivity) -> c
    114:114:android.app.AlertDialog access$3(com.itheima.mobileguard.activities.HomeActivity) -> d
    109:109:android.widget.EditText access$4(com.itheima.mobileguard.activities.HomeActivity) -> e
    110:110:android.widget.EditText access$5(com.itheima.mobileguard.activities.HomeActivity) -> f
    33:33:android.content.SharedPreferences access$6(com.itheima.mobileguard.activities.HomeActivity) -> g
    157:157:android.widget.EditText access$7(com.itheima.mobileguard.activities.HomeActivity) -> h
com.itheima.mobileguard.activities.HomeActivity$1 -> com.itheima.mobileguard.activities.HomeActivity$1:
    com.itheima.mobileguard.activities.HomeActivity this$0 -> a
    55:99:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itheima.mobileguard.activities.HomeActivity$2 -> com.itheima.mobileguard.activities.HomeActivity$2:
    com.itheima.mobileguard.activities.HomeActivity this$0 -> a
    130:131:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.HomeActivity$3 -> com.itheima.mobileguard.activities.HomeActivity$3:
    com.itheima.mobileguard.activities.HomeActivity this$0 -> a
    136:150:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.HomeActivity$4 -> com.itheima.mobileguard.activities.HomeActivity$4:
    com.itheima.mobileguard.activities.HomeActivity this$0 -> a
    171:172:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.HomeActivity$5 -> com.itheima.mobileguard.activities.HomeActivity$5:
    com.itheima.mobileguard.activities.HomeActivity this$0 -> a
    178:195:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.HomeActivity$HomeAdapter -> com.itheima.mobileguard.activities.HomeActivity$a:
    com.itheima.mobileguard.activities.HomeActivity this$0 -> a
    219:219:int getCount() -> getCount
    225:243:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    248:248:java.lang.Object getItem(int) -> getItem
    253:253:long getItemId(int) -> getItemId
com.itheima.mobileguard.activities.LostFindActivity -> com.itheima.mobileguard.activities.LostFindActivity:
    android.content.SharedPreferences sp -> a
    android.widget.TextView tv_lostfind_number -> b
    android.widget.ImageView iv_lostfind_status -> c
    android.widget.RelativeLayout rl_menu -> d
    34:64:void onCreate(android.os.Bundle) -> onCreate
    72:72:boolean isFinishSetup() -> a
    76:80:void reEntrySetup(android.view.View) -> reEntrySetup
    84:85:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    101:117:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    27:27:android.content.SharedPreferences access$0(com.itheima.mobileguard.activities.LostFindActivity) -> a
com.itheima.mobileguard.activities.LostFindActivity$1 -> com.itheima.mobileguard.activities.LostFindActivity$1:
    com.itheima.mobileguard.activities.LostFindActivity this$0 -> a
    android.widget.EditText val$et -> b
    109:113:void onClick(android.content.DialogInterface,int) -> onClick
com.itheima.mobileguard.activities.NumberAddressQueryActivity -> com.itheima.mobileguard.activities.NumberAddressQueryActivity:
    android.widget.EditText et_phone_number -> a
    android.widget.TextView tv_address_info -> b
    android.os.Vibrator vibrator -> c
    27:54:void onCreate(android.os.Bundle) -> onCreate
    57:67:void query(android.view.View) -> query
    21:21:android.widget.TextView access$0(com.itheima.mobileguard.activities.NumberAddressQueryActivity) -> a
com.itheima.mobileguard.activities.NumberAddressQueryActivity$1 -> com.itheima.mobileguard.activities.NumberAddressQueryActivity$1:
    com.itheima.mobileguard.activities.NumberAddressQueryActivity this$0 -> a
    38:38:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    44:44:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    48:51:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.itheima.mobileguard.activities.SelectContactActivity -> com.itheima.mobileguard.activities.SelectContactActivity:
    java.util.List infos -> a
    android.widget.ListView lv -> b
    26:42:void onCreate(android.os.Bundle) -> onCreate
    21:21:java.util.List access$0(com.itheima.mobileguard.activities.SelectContactActivity) -> a
com.itheima.mobileguard.activities.SelectContactActivity$1 -> com.itheima.mobileguard.activities.SelectContactActivity$1:
    com.itheima.mobileguard.activities.SelectContactActivity this$0 -> a
    36:40:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itheima.mobileguard.activities.SelectContactActivity$ContactsAdapter -> com.itheima.mobileguard.activities.SelectContactActivity$a:
    com.itheima.mobileguard.activities.SelectContactActivity this$0 -> a
    48:48:int getCount() -> getCount
    54:65:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    70:70:java.lang.Object getItem(int) -> getItem
    75:75:long getItemId(int) -> getItemId
com.itheima.mobileguard.activities.SettingCenterActivity -> com.itheima.mobileguard.activities.SettingCenterActivity:
    java.lang.String[] items -> a
    android.content.SharedPreferences sp -> b
    com.itheima.mobileguard.ui.SettingView sv_autoupdate -> c
    com.itheima.mobileguard.ui.SettingView sv_blacknumber -> d
    android.content.Intent callSmsSafeIntent -> e
    com.itheima.mobileguard.ui.SettingView sv_showaddress -> f
    android.content.Intent showAddressIntent -> g
    com.itheima.mobileguard.ui.SettingView sv_watchdog -> h
    android.content.Intent watchDogIntent -> i
    java.lang.String s -> j
    android.widget.TextView tv_title_style -> k
    50:127:void onCreate(android.os.Bundle) -> onCreate
    132:153:void onStart() -> onStart
    162:183:void changeBgStyle(android.view.View) -> changeBgStyle
    27:27:android.content.SharedPreferences access$0(com.itheima.mobileguard.activities.SettingCenterActivity) -> a
    28:28:com.itheima.mobileguard.ui.SettingView access$1(com.itheima.mobileguard.activities.SettingCenterActivity) -> b
    32:32:com.itheima.mobileguard.ui.SettingView access$2(com.itheima.mobileguard.activities.SettingCenterActivity) -> c
    33:33:android.content.Intent access$3(com.itheima.mobileguard.activities.SettingCenterActivity) -> d
    37:37:com.itheima.mobileguard.ui.SettingView access$4(com.itheima.mobileguard.activities.SettingCenterActivity) -> e
    38:38:android.content.Intent access$5(com.itheima.mobileguard.activities.SettingCenterActivity) -> f
    43:43:com.itheima.mobileguard.ui.SettingView access$6(com.itheima.mobileguard.activities.SettingCenterActivity) -> g
    44:44:android.content.Intent access$7(com.itheima.mobileguard.activities.SettingCenterActivity) -> h
    156:156:android.widget.TextView access$8(com.itheima.mobileguard.activities.SettingCenterActivity) -> i
    25:25:java.lang.String[] access$9() -> a
    46:46:java.lang.String access$10(com.itheima.mobileguard.activities.SettingCenterActivity) -> j
com.itheima.mobileguard.activities.SettingCenterActivity$1 -> com.itheima.mobileguard.activities.SettingCenterActivity$1:
    com.itheima.mobileguard.activities.SettingCenterActivity this$0 -> a
    63:74:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.SettingCenterActivity$2 -> com.itheima.mobileguard.activities.SettingCenterActivity$2:
    com.itheima.mobileguard.activities.SettingCenterActivity this$0 -> a
    82:91:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.SettingCenterActivity$3 -> com.itheima.mobileguard.activities.SettingCenterActivity$3:
    com.itheima.mobileguard.activities.SettingCenterActivity this$0 -> a
    99:108:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.SettingCenterActivity$4 -> com.itheima.mobileguard.activities.SettingCenterActivity$4:
    com.itheima.mobileguard.activities.SettingCenterActivity this$0 -> a
    116:125:void onClick(android.view.View) -> onClick
com.itheima.mobileguard.activities.SettingCenterActivity$5 -> com.itheima.mobileguard.activities.SettingCenterActivity$5:
    com.itheima.mobileguard.activities.SettingCenterActivity this$0 -> a
    167:172:void onClick(android.content.DialogInterface,int) -> onClick
com.itheima.mobileguard.activities.SettingCenterActivity$6 -> com.itheima.mobileguard.activities.SettingCenterActivity$6:
    com.itheima.mobileguard.activities.SettingCenterActivity this$0 -> a
    179:180:void onCancel(android.content.DialogInterface) -> onCancel
com.itheima.mobileguard.activities.Setup1Activity -> com.itheima.mobileguard.activities.Setup1Activity:
    11:13:void onCreate(android.os.Bundle) -> onCreate
    17:18:void showNext() -> a
    23:23:void showPre() -> b
com.itheima.mobileguard.activities.Setup2Activity -> com.itheima.mobileguard.activities.Setup2Activity:
    android.telephony.TelephonyManager tm -> c
    android.widget.ImageView iv_setup2_status -> d
    21:32:void onCreate(android.os.Bundle) -> onCreate
    41:57:void bindUnbindSim(android.view.View) -> bindUnbindSim
    62:68:void showNext() -> a
    72:73:void showPre() -> b
com.itheima.mobileguard.activities.Setup3Activity -> com.itheima.mobileguard.activities.Setup3Activity:
    android.widget.EditText et_setup3_phone -> c
    18:22:void onCreate(android.os.Bundle) -> onCreate
    25:35:void showNext() -> a
    39:40:void showPre() -> b
    43:45:void selectContact(android.view.View) -> selectContact
    49:55:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.itheima.mobileguard.activities.Setup4Activity -> com.itheima.mobileguard.activities.Setup4Activity:
    android.widget.TextView tv_setup4_status -> c
    android.widget.CheckBox cb_setup4_protect -> d
    22:50:void onCreate(android.os.Bundle) -> onCreate
    54:58:void showNext() -> a
    61:62:void showPre() -> b
    17:17:android.widget.TextView access$0(com.itheima.mobileguard.activities.Setup4Activity) -> a
com.itheima.mobileguard.activities.Setup4Activity$1 -> com.itheima.mobileguard.activities.Setup4Activity$1:
    com.itheima.mobileguard.activities.Setup4Activity this$0 -> a
    31:39:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.itheima.mobileguard.activities.SplashActivity -> com.itheima.mobileguard.activities.SplashActivity:
    android.widget.TextView tv_splash_version -> a
    android.widget.TextView tv_info -> b
    android.content.pm.PackageManager packageManager -> c
    int clientVersionCode -> d
    java.lang.String desc -> e
    java.lang.String downloadurl -> f
    android.os.Handler handler -> g
    110:152:void download(java.lang.String) -> a
    156:158:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    162:212:void onCreate(android.os.Bundle) -> onCreate
    219:250:void updateVirusDB() -> a
    256:267:void createShortCut() -> b
    274:296:void copyDB(java.lang.String) -> b
    302:383:void checkVersion() -> c
    386:389:void loadMainUI() -> d
    385:385:void access$0(com.itheima.mobileguard.activities.SplashActivity) -> a
    60:60:java.lang.String access$1(com.itheima.mobileguard.activities.SplashActivity) -> b
    62:62:java.lang.String access$2(com.itheima.mobileguard.activities.SplashActivity) -> c
    108:108:void access$3(com.itheima.mobileguard.activities.SplashActivity,java.lang.String) -> a
    54:54:android.widget.TextView access$4(com.itheima.mobileguard.activities.SplashActivity) -> d
    65:65:android.os.Handler access$5(com.itheima.mobileguard.activities.SplashActivity) -> e
    62:62:void access$6(com.itheima.mobileguard.activities.SplashActivity,java.lang.String) -> b
    60:60:void access$7(com.itheima.mobileguard.activities.SplashActivity,java.lang.String) -> c
    57:57:int access$8(com.itheima.mobileguard.activities.SplashActivity) -> f
com.itheima.mobileguard.activities.SplashActivity$1 -> com.itheima.mobileguard.activities.SplashActivity$1:
    com.itheima.mobileguard.activities.SplashActivity this$0 -> a
    67:100:void handleMessage(android.os.Message) -> handleMessage
    65:65:com.itheima.mobileguard.activities.SplashActivity access$0(com.itheima.mobileguard.activities.SplashActivity$1) -> a
com.itheima.mobileguard.activities.SplashActivity$1$1 -> com.itheima.mobileguard.activities.SplashActivity$1$1:
    com.itheima.mobileguard.activities.SplashActivity$1 this$1 -> a
    80:81:void onCancel(android.content.DialogInterface) -> onCancel
com.itheima.mobileguard.activities.SplashActivity$1$2 -> com.itheima.mobileguard.activities.SplashActivity$1$2:
    com.itheima.mobileguard.activities.SplashActivity$1 this$1 -> a
    86:87:void onClick(android.content.DialogInterface,int) -> onClick
com.itheima.mobileguard.activities.SplashActivity$1$3 -> com.itheima.mobileguard.activities.SplashActivity$1$3:
    com.itheima.mobileguard.activities.SplashActivity$1 this$1 -> a
    92:94:void onClick(android.content.DialogInterface,int) -> onClick
com.itheima.mobileguard.activities.SplashActivity$2 -> com.itheima.mobileguard.activities.SplashActivity$2:
    com.itheima.mobileguard.activities.SplashActivity this$0 -> a
    115:135:void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
    139:143:void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
    148:150:void onLoading(long,long,boolean) -> a
com.itheima.mobileguard.activities.SplashActivity$3 -> com.itheima.mobileguard.activities.SplashActivity$3:
    com.itheima.mobileguard.activities.SplashActivity this$0 -> a
    198:203:void run() -> run
com.itheima.mobileguard.activities.SplashActivity$4 -> com.itheima.mobileguard.activities.SplashActivity$4:
    com.itheima.mobileguard.activities.SplashActivity this$0 -> a
    221:248:void run() -> run
com.itheima.mobileguard.activities.SplashActivity$4$1 -> com.itheima.mobileguard.activities.SplashActivity$4$1:
    com.itheima.mobileguard.activities.SplashActivity$4 this$1 -> a
    230:230:void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
    234:245:void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
com.itheima.mobileguard.activities.SplashActivity$5 -> com.itheima.mobileguard.activities.SplashActivity$5:
    com.itheima.mobileguard.activities.SplashActivity this$0 -> a
    java.lang.String val$dbname -> b
    277:294:void run() -> run
com.itheima.mobileguard.activities.SplashActivity$6 -> com.itheima.mobileguard.activities.SplashActivity$6:
    com.itheima.mobileguard.activities.SplashActivity this$0 -> a
    304:380:void run() -> run
com.itheima.mobileguard.activities.TaskManagerActivity -> com.itheima.mobileguard.activities.TaskManagerActivity:
    android.widget.TextView tv_running_prcesscount -> a
    android.widget.TextView tv_ram_info -> b
    android.widget.ListView lv_taskmanger -> c
    java.util.List infos -> d
    java.util.List userTaskInfos -> e
    java.util.List systemTaskInfos -> f
    android.widget.LinearLayout ll_loading -> g
    int runningProcessCount -> h
    long totalAvailMem -> i
    com.itheima.mobileguard.activities.TaskManagerActivity$TaskManagerAdapter adapter -> j
    57:98:void onCreate(android.os.Bundle) -> onCreate
    101:126:void fillData() -> a
    130:135:void onStart() -> onStart
    239:250:void selectAll(android.view.View) -> selectAll
    258:269:void selectOpposite(android.view.View) -> selectOpposite
    277:325:void killProcess(android.view.View) -> killProcess
    328:330:void openSetting(android.view.View) -> openSetting
    40:40:java.util.List access$0(com.itheima.mobileguard.activities.TaskManagerActivity) -> a
    41:41:java.util.List access$1(com.itheima.mobileguard.activities.TaskManagerActivity) -> b
    34:34:android.widget.ListView access$2(com.itheima.mobileguard.activities.TaskManagerActivity) -> c
    38:38:void access$3(com.itheima.mobileguard.activities.TaskManagerActivity,java.util.List) -> a
    40:40:void access$4(com.itheima.mobileguard.activities.TaskManagerActivity,java.util.List) -> b
    41:41:void access$5(com.itheima.mobileguard.activities.TaskManagerActivity,java.util.List) -> c
    38:38:java.util.List access$6(com.itheima.mobileguard.activities.TaskManagerActivity) -> d
    42:42:android.widget.LinearLayout access$7(com.itheima.mobileguard.activities.TaskManagerActivity) -> e
    53:53:void access$8(com.itheima.mobileguard.activities.TaskManagerActivity,com.itheima.mobileguard.activities.TaskManagerActivity$TaskManagerAdapter) -> a
    53:53:com.itheima.mobileguard.activities.TaskManagerActivity$TaskManagerAdapter access$9(com.itheima.mobileguard.activities.TaskManagerActivity) -> f
com.itheima.mobileguard.activities.TaskManagerActivity$1 -> com.itheima.mobileguard.activities.TaskManagerActivity$1:
    com.itheima.mobileguard.activities.TaskManagerActivity this$0 -> a
    79:95:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itheima.mobileguard.activities.TaskManagerActivity$2 -> com.itheima.mobileguard.activities.TaskManagerActivity$2:
    com.itheima.mobileguard.activities.TaskManagerActivity this$0 -> a
    104:123:void run() -> run
    102:102:com.itheima.mobileguard.activities.TaskManagerActivity access$0(com.itheima.mobileguard.activities.TaskManagerActivity$2) -> a
com.itheima.mobileguard.activities.TaskManagerActivity$2$1 -> com.itheima.mobileguard.activities.TaskManagerActivity$2$1:
    com.itheima.mobileguard.activities.TaskManagerActivity$2 this$1 -> a
    118:121:void run() -> run
com.itheima.mobileguard.activities.TaskManagerActivity$TaskManagerAdapter -> com.itheima.mobileguard.activities.TaskManagerActivity$a:
    com.itheima.mobileguard.activities.TaskManagerActivity this$0 -> a
    147:152:int getCount() -> getCount
    159:208:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    214:224:java.lang.Object getItem(int) -> getItem
    229:229:long getItemId(int) -> getItemId
com.itheima.mobileguard.activities.TaskManagerActivity$ViewHolder -> com.itheima.mobileguard.activities.TaskManagerActivity$b:
    android.widget.ImageView iv_icon -> a
    android.widget.TextView tv_name -> b
    android.widget.TextView tv_size -> c
    android.widget.CheckBox cb_status -> d
com.itheima.mobileguard.activities.TaskManagerSettingActivity -> com.itheima.mobileguard.activities.TaskManagerSettingActivity:
    android.widget.CheckBox cb_show_system -> a
    android.content.SharedPreferences sp -> b
    android.widget.CheckBox cb_lock_autokill -> c
    23:48:void onCreate(android.os.Bundle) -> onCreate
    53:59:void onStart() -> onStart
    18:18:android.content.SharedPreferences access$0(com.itheima.mobileguard.activities.TaskManagerSettingActivity) -> a
com.itheima.mobileguard.activities.TaskManagerSettingActivity$1 -> com.itheima.mobileguard.activities.TaskManagerSettingActivity$1:
    com.itheima.mobileguard.activities.TaskManagerSettingActivity this$0 -> a
    31:34:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.itheima.mobileguard.activities.TaskManagerSettingActivity$2 -> com.itheima.mobileguard.activities.TaskManagerSettingActivity$2:
    com.itheima.mobileguard.activities.TaskManagerSettingActivity this$0 -> a
    android.content.Intent val$intent -> b
    41:46:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.itheima.mobileguard.activities.TrafficManagerActivity -> com.itheima.mobileguard.activities.TrafficManagerActivity:
    13:40:void onCreate(android.os.Bundle) -> onCreate
com.itheima.mobileguard.db.ApplockDBOpenHelper -> com.itheima.mobileguard.a.a:
    22:23:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    28:28:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.itheima.mobileguard.db.BlackNumberDBOpenHelper -> com.itheima.mobileguard.a.b:
    22:23:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    28:28:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.itheima.mobileguard.db.dao.AntiVirusDao -> com.itheima.mobileguard.a.a.a:
    20:32:java.lang.String checkVirus(java.lang.String) -> a
    41:43:boolean isDBExit() -> a
    53:62:java.lang.String getDBVersionNum() -> b
    70:77:void updateDBVersion(int) -> a
    85:94:void add(java.lang.String,java.lang.String) -> a
com.itheima.mobileguard.db.dao.ApplockDao -> com.itheima.mobileguard.a.a.b:
    com.itheima.mobileguard.db.ApplockDBOpenHelper helper -> a
    android.content.Context context -> b
    28:36:boolean find(java.lang.String) -> a
    44:52:java.util.List findAll() -> a
    60:67:void add(java.lang.String) -> b
    74:79:void delete(java.lang.String) -> c
com.itheima.mobileguard.db.dao.BlackNumberDao -> com.itheima.mobileguard.a.a.c:
    com.itheima.mobileguard.db.BlackNumberDBOpenHelper helper -> a
    39:47:boolean add(java.lang.String,java.lang.String) -> a
    60:66:boolean delete(java.lang.String) -> a
    97:106:java.lang.String findBlockMode(java.lang.String) -> b
    166:182:java.util.List findPart2(int,int) -> a
    193:199:int getTotalNumber() -> a
com.itheima.mobileguard.db.dao.NumberAddressDao -> com.itheima.mobileguard.a.a.d:
    17:87:java.lang.String getLocation(java.lang.String) -> a
com.itheima.mobileguard.domain.AppInfo -> com.itheima.mobileguard.domain.AppInfo:
    java.lang.String apkpath -> a
    android.graphics.drawable.Drawable icon -> b
    java.lang.String name -> c
    boolean inRom -> d
    long appSize -> e
    boolean userApp -> f
    java.lang.String packname -> g
    16:16:java.lang.String getApkpath() -> a
    20:21:void setApkpath(java.lang.String) -> a
    54:54:android.graphics.drawable.Drawable getIcon() -> b
    58:59:void setIcon(android.graphics.drawable.Drawable) -> a
    62:62:java.lang.String getName() -> c
    66:67:void setName(java.lang.String) -> b
    70:70:boolean isInRom() -> d
    74:75:void setInRom(boolean) -> a
    78:78:long getAppSize() -> e
    82:83:void setAppSize(long) -> a
    86:86:boolean isUserApp() -> f
    90:91:void setUserApp(boolean) -> b
    94:94:java.lang.String getPackname() -> g
    98:99:void setPackname(java.lang.String) -> c
    103:103:java.lang.String toString() -> toString
com.itheima.mobileguard.domain.BlackNumberInfo -> com.itheima.mobileguard.domain.a:
    java.lang.String number -> a
    java.lang.String mode -> b
    14:14:java.lang.String getNumber() -> a
    18:19:void setNumber(java.lang.String) -> a
    22:22:java.lang.String getMode() -> b
    26:31:void setMode(java.lang.String) -> b
com.itheima.mobileguard.domain.ContactInfo -> com.itheima.mobileguard.domain.b:
    java.lang.String name -> a
    java.lang.String id -> b
    java.lang.String phone -> c
    java.lang.String email -> d
    java.lang.String qq -> e
    13:13:java.lang.String toString() -> toString
    17:17:java.lang.String getName() -> a
    20:21:void setName(java.lang.String) -> a
    26:27:void setId(java.lang.String) -> b
    29:29:java.lang.String getPhone() -> b
    32:33:void setPhone(java.lang.String) -> c
    38:39:void setEmail(java.lang.String) -> d
    44:45:void setQq(java.lang.String) -> e
com.itheima.mobileguard.domain.TaskInfo -> com.itheima.mobileguard.domain.c:
    android.graphics.drawable.Drawable icon -> a
    java.lang.String appname -> b
    java.lang.String packname -> c
    boolean usertask -> d
    long memsize -> e
    boolean checked -> f
    19:19:boolean isChecked() -> a
    22:23:void setChecked(boolean) -> a
    25:25:android.graphics.drawable.Drawable getIcon() -> b
    28:29:void setIcon(android.graphics.drawable.Drawable) -> a
    31:31:java.lang.String getAppname() -> c
    34:35:void setAppname(java.lang.String) -> a
    37:37:java.lang.String getPackname() -> d
    40:41:void setPackname(java.lang.String) -> b
    43:43:boolean isUsertask() -> e
    46:47:void setUsertask(boolean) -> b
    49:49:long getMemsize() -> f
    52:53:void setMemsize(long) -> a
    56:56:java.lang.String toString() -> toString
com.itheima.mobileguard.engine.AppInfoParser -> com.itheima.mobileguard.b.a:
    23:59:java.util.List getAppInfos(android.content.Context) -> a
com.itheima.mobileguard.engine.ContactInfoParser -> com.itheima.mobileguard.b.b:
    22:65:java.util.List findAll(android.content.Context) -> a
com.itheima.mobileguard.engine.TaskInfoParser -> com.itheima.mobileguard.b.c:
    35:67:java.util.List getRunningTaskInfos(android.content.Context) -> a
com.itheima.mobileguard.fragments.LockedFragment -> com.itheima.mobileguard.c.a:
    android.widget.ListView lv_locked -> P
    android.widget.TextView tv_status -> Q
    com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter adapter -> R
    java.util.List lockeappInfos -> S
    com.itheima.mobileguard.db.dao.ApplockDao dao -> T
    37:40:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    45:60:void onStart() -> e
    28:28:android.widget.TextView access$0(com.itheima.mobileguard.fragments.LockedFragment) -> a
    31:31:java.util.List access$1(com.itheima.mobileguard.fragments.LockedFragment) -> b
    32:32:com.itheima.mobileguard.db.dao.ApplockDao access$2(com.itheima.mobileguard.fragments.LockedFragment) -> c
    29:29:com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter access$3(com.itheima.mobileguard.fragments.LockedFragment) -> d
com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter -> com.itheima.mobileguard.c.a$a:
    com.itheima.mobileguard.fragments.LockedFragment this$0 -> a
    66:67:int getCount() -> getCount
    74:119:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    124:124:java.lang.Object getItem(int) -> getItem
    129:129:long getItemId(int) -> getItemId
    63:63:com.itheima.mobileguard.fragments.LockedFragment access$1(com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter) -> a
com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter$1 -> com.itheima.mobileguard.c.a$a$1:
    com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter this$1 -> a
    android.view.View val$view -> b
    int val$position -> c
    94:117:void onClick(android.view.View) -> onClick
    90:90:com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter access$0(com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter$1) -> a
com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter$1$1 -> com.itheima.mobileguard.c.a$a$1$1:
    com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter$1 this$2 -> a
    int val$position -> b
    101:115:void run() -> run
    98:98:com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter$1 access$0(com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter$1$1) -> a
com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter$1$1$1 -> com.itheima.mobileguard.c.a$a$1$1$1:
    com.itheima.mobileguard.fragments.LockedFragment$LockedAdapter$1$1 this$3 -> a
    int val$position -> b
    109:113:void run() -> run
com.itheima.mobileguard.fragments.UnlockFragment -> com.itheima.mobileguard.c.b:
    android.widget.TextView tv_status -> P
    android.widget.ListView lv_unlock -> Q
    java.util.List unlockappInfos -> R
    com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter adapter -> S
    com.itheima.mobileguard.db.dao.ApplockDao dao -> T
    38:41:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    46:61:void onStart() -> e
    26:26:android.widget.TextView access$0(com.itheima.mobileguard.fragments.UnlockFragment) -> a
    31:31:java.util.List access$1(com.itheima.mobileguard.fragments.UnlockFragment) -> b
    33:33:com.itheima.mobileguard.db.dao.ApplockDao access$2(com.itheima.mobileguard.fragments.UnlockFragment) -> c
    32:32:com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter access$3(com.itheima.mobileguard.fragments.UnlockFragment) -> d
com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter -> com.itheima.mobileguard.c.b$a:
    com.itheima.mobileguard.fragments.UnlockFragment this$0 -> a
    72:73:int getCount() -> getCount
    80:124:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    129:129:java.lang.Object getItem(int) -> getItem
    134:134:long getItemId(int) -> getItemId
    69:69:com.itheima.mobileguard.fragments.UnlockFragment access$1(com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter) -> a
com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter$1 -> com.itheima.mobileguard.c.b$a$1:
    com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter this$1 -> a
    android.view.View val$view -> b
    int val$position -> c
    100:122:void onClick(android.view.View) -> onClick
    96:96:com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter access$0(com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter$1) -> a
com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter$1$1 -> com.itheima.mobileguard.c.b$a$1$1:
    com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter$1 this$2 -> a
    int val$position -> b
    107:120:void run() -> run
    104:104:com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter$1 access$0(com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter$1$1) -> a
com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter$1$1$1 -> com.itheima.mobileguard.c.b$a$1$1$1:
    com.itheima.mobileguard.fragments.UnlockFragment$UnlockAdapter$1$1 this$3 -> a
    int val$position -> b
    115:118:void run() -> run
com.itheima.mobileguard.fragments.UnlockFragment$ViewHolder -> com.itheima.mobileguard.c.b$b:
    android.widget.ImageView iv_icon -> a
    android.widget.TextView tv_name -> b
    android.widget.ImageView iv_lock -> c
com.itheima.mobileguard.receivers.BootCompleteReceiver -> com.itheima.mobileguard.receivers.BootCompleteReceiver:
    17:42:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobileguard.receivers.KillAllRecevier -> com.itheima.mobileguard.receivers.KillAllRecevier:
    14:19:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobileguard.receivers.MyDeviceAdmin -> com.itheima.mobileguard.receivers.MyDeviceAdmin:
com.itheima.mobileguard.receivers.MyWidget -> com.itheima.mobileguard.receivers.MyWidget:
    19:22:void onEnabled(android.content.Context) -> onEnabled
    27:30:void onDisabled(android.content.Context) -> onDisabled
com.itheima.mobileguard.receivers.SmsReceiver -> com.itheima.mobileguard.receivers.SmsReceiver:
    20:53:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobileguard.services.AutoKillService -> com.itheima.mobileguard.services.AutoKillService:
    com.itheima.mobileguard.services.AutoKillService$ScreenLockReceiver receiver -> a
    36:60:void onCreate() -> onCreate
    64:67:void onDestroy() -> onDestroy
    71:71:android.os.IBinder onBind(android.content.Intent) -> onBind
com.itheima.mobileguard.services.AutoKillService$ScreenLockReceiver -> com.itheima.mobileguard.services.AutoKillService$a:
    com.itheima.mobileguard.services.AutoKillService this$0 -> a
    26:32:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobileguard.services.CallSmsSafeService -> com.itheima.mobileguard.services.CallSmsSafeService:
    com.itheima.mobileguard.services.CallSmsSafeService$InnerSmsReceiver receiver -> a
    com.itheima.mobileguard.db.dao.BlackNumberDao dao -> b
    android.telephony.TelephonyManager tm -> c
    com.itheima.mobileguard.services.CallSmsSafeService$MyPhoneListener listener -> d
    35:35:android.os.IBinder onBind(android.content.Intent) -> onBind
    40:49:void onCreate() -> onCreate
    98:103:void onDestroy() -> onDestroy
    110:113:void deleteCallLog(java.lang.String) -> a
    120:129:void endCall() -> a
    28:28:com.itheima.mobileguard.db.dao.BlackNumberDao access$0(com.itheima.mobileguard.services.CallSmsSafeService) -> a
com.itheima.mobileguard.services.CallSmsSafeService$CallLogObserver -> com.itheima.mobileguard.services.CallSmsSafeService$a:
    java.lang.String incomingNumber -> b
    com.itheima.mobileguard.services.CallSmsSafeService this$0 -> a
    89:93:void onChange(boolean) -> onChange
com.itheima.mobileguard.services.CallSmsSafeService$InnerSmsReceiver -> com.itheima.mobileguard.services.CallSmsSafeService$b:
    com.itheima.mobileguard.services.CallSmsSafeService this$0 -> a
    134:153:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobileguard.services.CallSmsSafeService$MyPhoneListener -> com.itheima.mobileguard.services.CallSmsSafeService$c:
    com.itheima.mobileguard.services.CallSmsSafeService this$0 -> a
    54:76:void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.itheima.mobileguard.services.LocationService -> com.itheima.mobileguard.services.LocationService:
    android.location.LocationManager lm -> a
    com.itheima.mobileguard.services.LocationService$MyListener listener -> b
    26:26:android.os.IBinder onBind(android.content.Intent) -> onBind
    32:43:void onCreate() -> onCreate
    84:87:void onDestroy() -> onDestroy
com.itheima.mobileguard.services.LocationService$MyListener -> com.itheima.mobileguard.services.LocationService$a:
    com.itheima.mobileguard.services.LocationService this$0 -> a
    49:63:void onLocationChanged(android.location.Location) -> onLocationChanged
    68:68:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    73:73:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    78:78:void onProviderDisabled(java.lang.String) -> onProviderDisabled
com.itheima.mobileguard.services.ShowLocationService -> com.itheima.mobileguard.services.ShowLocationService:
    android.telephony.TelephonyManager tm -> a
    com.itheima.mobileguard.services.ShowLocationService$MyPhoneListener listener -> b
    com.itheima.mobileguard.services.ShowLocationService$OutCallReceiver receiver -> c
    android.content.SharedPreferences sp -> d
    android.view.WindowManager windowManager -> e
    android.view.View view -> f
    int[] bgs -> g
    android.view.WindowManager$LayoutParams mParams -> h
    48:48:android.os.IBinder onBind(android.content.Intent) -> onBind
    69:89:void onCreate() -> onCreate
    93:98:void onDestroy() -> onDestroy
    114:190:void showMyToast(java.lang.String) -> a
    44:44:android.view.View access$0(com.itheima.mobileguard.services.ShowLocationService) -> a
    39:39:android.view.WindowManager access$1(com.itheima.mobileguard.services.ShowLocationService) -> b
    44:44:void access$2(com.itheima.mobileguard.services.ShowLocationService,android.view.View) -> a
    106:106:android.view.WindowManager$LayoutParams access$3(com.itheima.mobileguard.services.ShowLocationService) -> c
    34:34:android.content.SharedPreferences access$4(com.itheima.mobileguard.services.ShowLocationService) -> d
com.itheima.mobileguard.services.ShowLocationService$1 -> com.itheima.mobileguard.services.ShowLocationService$1:
    int startX -> a
    int startY -> b
    com.itheima.mobileguard.services.ShowLocationService this$0 -> c
    144:187:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.itheima.mobileguard.services.ShowLocationService$MyPhoneListener -> com.itheima.mobileguard.services.ShowLocationService$a:
    com.itheima.mobileguard.services.ShowLocationService this$0 -> a
    195:213:void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.itheima.mobileguard.services.ShowLocationService$OutCallReceiver -> com.itheima.mobileguard.services.ShowLocationService$b:
    com.itheima.mobileguard.services.ShowLocationService this$0 -> a
    60:64:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobileguard.services.UpdateWidgetService -> com.itheima.mobileguard.services.UpdateWidgetService:
    java.util.Timer timer -> a
    java.util.TimerTask task -> b
    android.appwidget.AppWidgetManager awm -> c
    29:29:android.os.IBinder onBind(android.content.Intent) -> onBind
    34:57:void onCreate() -> onCreate
    61:68:void onDestroy() -> onDestroy
    25:25:android.appwidget.AppWidgetManager access$0(com.itheima.mobileguard.services.UpdateWidgetService) -> a
com.itheima.mobileguard.services.UpdateWidgetService$1 -> com.itheima.mobileguard.services.UpdateWidgetService$1:
    com.itheima.mobileguard.services.UpdateWidgetService this$0 -> a
    39:53:void run() -> run
com.itheima.mobileguard.services.WatchDogService -> com.itheima.mobileguard.services.WatchDogService:
    boolean flag -> a
    android.app.ActivityManager am -> b
    com.itheima.mobileguard.services.WatchDogService$WatchDogReceiver receiver -> c
    com.itheima.mobileguard.db.dao.ApplockDao dao -> d
    java.lang.String tempStopProtectPackname -> e
    java.util.List taskInfos -> f
    android.app.ActivityManager$RunningTaskInfo taskInfo -> g
    java.lang.String packname -> h
    java.util.List lockedPacknames -> i
    android.content.Intent intent -> j
    com.itheima.mobileguard.services.WatchDogService$ApplockObserver observer -> k
    47:47:android.os.IBinder onBind(android.content.Intent) -> onBind
    71:90:void onCreate() -> onCreate
    94:128:void startWatchDog() -> a
    149:155:void onDestroy() -> onDestroy
    29:29:void access$0(com.itheima.mobileguard.services.WatchDogService,java.lang.String) -> a
    22:22:void access$1(com.itheima.mobileguard.services.WatchDogService,boolean) -> a
    22:22:boolean access$2(com.itheima.mobileguard.services.WatchDogService) -> a
    93:93:void access$3(com.itheima.mobileguard.services.WatchDogService) -> b
    25:25:com.itheima.mobileguard.db.dao.ApplockDao access$4(com.itheima.mobileguard.services.WatchDogService) -> c
    40:40:void access$5(com.itheima.mobileguard.services.WatchDogService,java.util.List) -> a
    23:23:android.app.ActivityManager access$6(com.itheima.mobileguard.services.WatchDogService) -> d
    31:31:void access$7(com.itheima.mobileguard.services.WatchDogService,java.util.List) -> b
    31:31:java.util.List access$8(com.itheima.mobileguard.services.WatchDogService) -> e
    33:33:void access$9(com.itheima.mobileguard.services.WatchDogService,android.app.ActivityManager$RunningTaskInfo) -> a
    33:33:android.app.ActivityManager$RunningTaskInfo access$10(com.itheima.mobileguard.services.WatchDogService) -> f
    35:35:void access$11(com.itheima.mobileguard.services.WatchDogService,java.lang.String) -> b
    35:35:java.lang.String access$12(com.itheima.mobileguard.services.WatchDogService) -> g
    40:40:java.util.List access$13(com.itheima.mobileguard.services.WatchDogService) -> h
    29:29:java.lang.String access$14(com.itheima.mobileguard.services.WatchDogService) -> i
    42:42:android.content.Intent access$15(com.itheima.mobileguard.services.WatchDogService) -> j
com.itheima.mobileguard.services.WatchDogService$1 -> com.itheima.mobileguard.services.WatchDogService$1:
    com.itheima.mobileguard.services.WatchDogService this$0 -> a
    96:126:void run() -> run
com.itheima.mobileguard.services.WatchDogService$ApplockObserver -> com.itheima.mobileguard.services.WatchDogService$a:
    com.itheima.mobileguard.services.WatchDogService this$0 -> a
    138:142:void onChange(boolean) -> onChange
com.itheima.mobileguard.services.WatchDogService$WatchDogReceiver -> com.itheima.mobileguard.services.WatchDogService$b:
    com.itheima.mobileguard.services.WatchDogService this$0 -> a
    53:66:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobileguard.ui.FocusedTextView -> com.itheima.mobileguard.ui.FocusedTextView:
    23:23:boolean isFocused() -> isFocused
com.itheima.mobileguard.ui.SettingView -> com.itheima.mobileguard.ui.SettingView:
    android.widget.CheckBox cb_status -> a
    android.widget.TextView tv_desc -> b
    android.widget.TextView tv_title -> c
    java.lang.String[] descs -> d
    54:60:void init(android.content.Context) -> a
    68:69:void setTitle(java.lang.String) -> setTitle
    77:83:void setDesc(java.lang.String[],boolean) -> a
    91:91:boolean isChecked() -> a
    100:112:void setChecked(boolean) -> setChecked
com.itheima.mobileguard.utils.Crypto -> com.itheima.mobileguard.d.a:
    22:24:java.lang.String encrypt(java.lang.String,java.lang.String) -> a
    44:50:byte[] getRawKey(byte[]) -> a
    54:58:byte[] encrypt(byte[],byte[]) -> a
com.itheima.mobileguard.utils.DensityUtil -> com.itheima.mobileguard.d.b:
    10:11:int dip2px(android.content.Context,float) -> a
com.itheima.mobileguard.utils.Md5Utils -> com.itheima.mobileguard.d.c:
    18:34:java.lang.String encode(java.lang.String) -> a
    45:67:java.lang.String getFileMd5(java.lang.String) -> b
com.itheima.mobileguard.utils.SmsUtils -> com.itheima.mobileguard.d.d:
    59:127:boolean backUpSms(android.content.Context,com.itheima.mobileguard.utils.SmsUtils$BackupStatusCallback) -> a
com.itheima.mobileguard.utils.SmsUtils$BackupStatusCallback -> com.itheima.mobileguard.d.d$a:
    void beforeSmsBackup(int) -> b
    void onSmsBackup(int) -> a
com.itheima.mobileguard.utils.StreamUtils -> com.itheima.mobileguard.d.e:
    15:25:java.lang.String readStream(java.io.InputStream) -> a
com.itheima.mobileguard.utils.SystemInfoUtils -> com.itheima.mobileguard.d.f:
    22:30:boolean isServiceRunning(android.content.Context,java.lang.String) -> a
    39:53:long getTotalMem() -> a
    63:68:long getAvailMem(android.content.Context) -> a
    76:79:int getRunningPocessCount(android.content.Context) -> b
com.itheima.mobileguard.utils.UIUtils -> com.itheima.mobileguard.d.g:
    8:18:void showToast(android.app.Activity,java.lang.String) -> a
com.itheima.mobileguard.utils.UIUtils$1 -> com.itheima.mobileguard.d.g$1:
    android.app.Activity val$context -> a
    java.lang.String val$msg -> b
    14:15:void run() -> run
com.lidroid.xutils.HttpUtils -> com.b.a.a:
    com.lidroid.xutils.http.HttpCache sHttpCache -> a
    org.apache.http.impl.client.DefaultHttpClient httpClient -> b
    org.apache.http.protocol.HttpContext httpContext -> c
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> d
    java.lang.String responseTextCharset -> e
    long currentRequestExpiry -> f
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> g
    227:227:com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    232:235:com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    253:253:com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    294:309:com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    315:325:com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> a
com.lidroid.xutils.HttpUtils$1 -> com.b.a.a$1:
    com.lidroid.xutils.HttpUtils this$0 -> a
    103:106:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.b.a.a$2:
    com.lidroid.xutils.HttpUtils this$0 -> a
    112:125:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.cache.KeyExpiryMap -> com.b.a.a.a:
    52:55:java.lang.Long get(java.lang.Object) -> a
    61:64:java.lang.Long put(java.lang.Object,java.lang.Long) -> a
    69:77:boolean containsKey(java.lang.Object) -> containsKey
    82:82:java.lang.Long remove(java.lang.Object) -> b
    87:88:void clear() -> clear
    1:1:java.lang.Object get(java.lang.Object) -> get
    1:1:java.lang.Object remove(java.lang.Object) -> remove
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.lidroid.xutils.cache.LruMemoryCache -> com.b.a.a.b:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> i
    68:117:java.lang.Object get(java.lang.Object) -> a
    139:159:java.lang.Object put(java.lang.Object,java.lang.Object,long) -> a
    170:186:void trimToSize(int) -> a
    194:211:java.lang.Object remove(java.lang.Object) -> b
    234:234:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    252:252:java.lang.Object create(java.lang.Object) -> c
    256:263:int safeSizeOf(java.lang.Object,java.lang.Object) -> b
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> a
    348:350:java.lang.String toString() -> toString
com.lidroid.xutils.exception.BaseException -> com.b.a.b.a:
com.lidroid.xutils.exception.HttpException -> com.b.a.b.b:
    int exceptionCode -> a
com.lidroid.xutils.http.HttpCache -> com.b.a.c.a:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> a
    int cacheSize -> b
    long defaultExpiryTime -> c
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> d
    73:73:long getDefaultExpiryTime() -> a
    81:84:void put(java.lang.String,java.lang.String,long) -> a
    87:87:java.lang.String get(java.lang.String) -> a
    102:105:boolean isEnabled(java.lang.String) -> b
com.lidroid.xutils.http.HttpCache$1 -> com.b.a.c.a$1:
    com.lidroid.xutils.http.HttpCache this$0 -> a
    58:59:int sizeOf(java.lang.String,java.lang.String) -> a
    1:1:int sizeOf(java.lang.Object,java.lang.Object) -> a
com.lidroid.xutils.http.HttpHandler -> com.b.a.c.b:
    org.apache.http.impl.client.AbstractHttpClient client -> b
    org.apache.http.protocol.HttpContext context -> c
    com.lidroid.xutils.http.callback.StringDownloadHandler mStringDownloadHandler -> d
    com.lidroid.xutils.http.callback.FileDownloadHandler mFileDownloadHandler -> e
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> f
    java.lang.String requestUrl -> g
    java.lang.String requestMethod -> h
    org.apache.http.client.methods.HttpRequestBase request -> i
    boolean isUploading -> j
    com.lidroid.xutils.http.callback.RequestCallBack callback -> k
    int retriedCount -> l
    java.lang.String fileSavePath -> m
    boolean isDownloadingFile -> n
    boolean autoResume -> o
    boolean autoRename -> p
    java.lang.String charset -> q
    com.lidroid.xutils.http.HttpHandler$State state -> r
    long expiry -> s
    long lastUpdateTime -> t
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> u
    51:54:void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> a
    86:87:void setExpiry(long) -> a
    101:150:com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> a
    157:188:java.lang.Void doInBackground(java.lang.Object[]) -> a
    199:226:void onProgressUpdate(java.lang.Object[]) -> b
    230:267:com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> a
    299:310:boolean updateProgress(long,long,boolean) -> a
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> c
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.b.a.c.b$a:
    350:350:boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    355:355:java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.lidroid.xutils.http.HttpHandler$State -> com.b.a.c.b$b:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> a
    com.lidroid.xutils.http.HttpHandler$State STARTED -> b
    com.lidroid.xutils.http.HttpHandler$State LOADING -> c
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> d
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> e
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> f
    int value -> g
    com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES -> h
    1:1:com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    1:1:com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.RequestParams -> com.b.a.c.c:
    java.lang.String charset -> a
    java.util.List headers -> b
    java.util.List queryStringParams -> c
    org.apache.http.HttpEntity bodyEntity -> d
    java.util.List bodyParams -> e
    java.util.HashMap fileParams -> f
    com.lidroid.xutils.task.Priority priority -> g
    67:67:com.lidroid.xutils.task.Priority getPriority() -> a
    75:75:java.lang.String getCharset() -> b
    278:307:org.apache.http.HttpEntity getEntity() -> c
    311:311:java.util.List getQueryStringParams() -> d
    315:315:java.util.List getHeaders() -> e
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.b.a.c.c$a:
    boolean overwrite -> a
    org.apache.http.Header header -> b
com.lidroid.xutils.http.ResponseInfo -> com.b.a.c.d:
    org.apache.http.HttpResponse response -> j
    java.lang.Object result -> a
    boolean resultFormCache -> b
    java.util.Locale locale -> c
    int statusCode -> d
    org.apache.http.ProtocolVersion protocolVersion -> e
    java.lang.String reasonPhrase -> f
    long contentLength -> g
    org.apache.http.Header contentType -> h
    org.apache.http.Header contentEncoding -> i
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.b.a.c.a.a:
    31:40:org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> a
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.b.a.c.a.b:
    31:90:java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> a
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.b.a.c.a.c:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> a
com.lidroid.xutils.http.callback.RequestCallBack -> com.b.a.c.a.d:
    java.lang.String requestUrl -> a
    int rate -> b
    53:56:int getRate() -> a
    76:77:void setRequestUrl(java.lang.String) -> a
    80:80:void onStart() -> b
    86:86:void onLoading(long,long,boolean) -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.b.a.c.a.e:
    boolean updateProgress(long,long,boolean) -> a
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.b.a.c.a.f:
    30:60:java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> a
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.b.a.c.b.a:
    javax.net.ssl.SSLContext sslContext -> a
    java.security.KeyStore trustStore -> b
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> c
    34:41:com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> a
    75:75:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    80:80:java.net.Socket createSocket() -> createSocket
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.b.a.c.b.a$1:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> a
    53:53:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    60:60:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    66:66:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.b.a.c.b.b:
    org.apache.http.HttpEntity entity -> a
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> b
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> c
    java.nio.charset.Charset uriCharset -> d
    80:85:com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> a
    109:132:void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    137:146:java.net.URI getURI() -> getURI
    152:153:void setURI(java.net.URI) -> setURI
    156:157:void setURI(java.lang.String) -> a
    161:161:java.lang.String getMethod() -> getMethod
    166:166:org.apache.http.HttpEntity getEntity() -> getEntity
    171:172:void setEntity(org.apache.http.HttpEntity) -> setEntity
    176:177:boolean expectContinue() -> expectContinue
    182:186:java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.b.a.c.b.b$a:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> a
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> b
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> c
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> d
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> e
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> f
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> g
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> h
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> i
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> j
    java.lang.String value -> k
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES -> l
    209:209:java.lang.String toString() -> toString
    1:1:com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    1:1:com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.RetryHandler -> com.b.a.c.b.c:
    java.util.HashSet exceptionWhiteList -> a
    java.util.HashSet exceptionBlackList -> b
    int maxRetries -> c
    59:103:boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.b.a.c.b.a.a:
    byte[] content -> a
    boolean dirty -> b
    java.lang.String charset -> c
    java.util.List params -> d
    84:92:void refreshContent() -> a
    95:95:boolean isRepeatable() -> isRepeatable
    99:100:long getContentLength() -> getContentLength
    104:105:java.io.InputStream getContent() -> getContent
    109:115:void writeTo(java.io.OutputStream) -> writeTo
    123:123:boolean isStreaming() -> isStreaming
    127:127:java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.b.a.c.b.a.b:
    java.io.InputStream content -> a
    long uncompressedLength -> b
    long uploadedSize -> c
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> d
    java.io.InputStream decorate(java.io.InputStream) -> a
    54:60:java.io.InputStream getDecompressingStream() -> a
    69:75:java.io.InputStream getContent() -> getContent
    84:84:long getContentLength() -> getContentLength
    94:119:void writeTo(java.io.OutputStream) -> writeTo
    125:126:void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.b.a.c.b.a.c:
    40:40:java.io.InputStream decorate(java.io.InputStream) -> a
    50:50:org.apache.http.Header getContentEncoding() -> getContentEncoding
    1:1:long getContentLength() -> getContentLength
    1:1:java.io.InputStream getContent() -> getContent
    1:1:void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    1:1:void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.entity.UploadEntity -> com.b.a.c.b.a.d:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.b.a.c.b.b.a:
    java.lang.String name -> a
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> b
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> c
    73:73:java.lang.String getName() -> a
    77:77:com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> b
    81:81:com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> c
    85:89:void addField(java.lang.String,java.lang.String) -> a
    92:102:void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> a
    105:112:void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> b
    115:116:void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> c
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.b.a.c.b.b.b:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> a
    org.apache.http.util.ByteArrayBuffer CR_LF -> b
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> c
    java.lang.String subType -> d
    java.nio.charset.Charset charset -> e
    java.lang.String boundary -> f
    java.util.List parts -> g
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> h
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> i
    42:45:org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> a
    50:52:void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> a
    56:58:void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> a
    62:64:void writeBytes(java.lang.String,java.io.OutputStream) -> a
    68:72:void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> a
    76:80:void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> a
    152:152:java.util.List getBodyParts() -> a
    156:160:void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> a
    163:163:java.lang.String getBoundary() -> b
    170:171:void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> a
    179:241:void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> a
    251:252:void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
    268:285:long getTotalLength() -> c
    38:38:int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode() -> d
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.b.a.c.b.b.c:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> a
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> b
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES -> c
    1:1:com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    1:1:com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.b.a.c.b.b.d:
    java.nio.charset.Charset DEFAULT_CHARSET -> a
com.lidroid.xutils.http.client.multipart.MinimalField -> com.b.a.c.b.b.e:
    java.lang.String name -> a
    java.lang.String value -> b
    35:35:java.lang.String getName() -> a
    39:39:java.lang.String getBody() -> b
    44:48:java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.b.a.c.b.b.f:
    java.util.List fields -> a
    java.util.Map fieldMap -> b
    35:46:void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> a
    53:61:com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> a
    117:117:java.util.Iterator iterator() -> iterator
    122:122:java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.b.a.c.b.b.g:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> a
    char[] MULTIPART_CHARS -> b
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> c
    org.apache.http.Header contentType -> d
    long length -> e
    boolean dirty -> f
    java.lang.String boundary -> g
    java.nio.charset.Charset charset -> h
    java.lang.String multipartSubtype -> i
    43:44:void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    144:151:java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> a
    155:161:java.lang.String generateBoundary() -> a
    165:167:void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> a
    170:171:void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> a
    178:184:boolean isRepeatable() -> isRepeatable
    188:188:boolean isChunked() -> isChunked
    192:192:boolean isStreaming() -> isStreaming
    196:200:long getContentLength() -> getContentLength
    204:204:org.apache.http.Header getContentType() -> getContentType
    208:208:org.apache.http.Header getContentEncoding() -> getContentEncoding
    213:217:void consumeContent() -> consumeContent
    220:220:java.io.InputStream getContent() -> getContent
    225:227:void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.b.a.c.b.b.g$a:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> a
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> b
    long totalLength -> c
    long pos -> d
    58:61:boolean doCallBack(boolean) -> a
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.b.a.c.b.b.a.a:
    java.lang.String mimeType -> b
    java.lang.String mediaType -> c
    java.lang.String subType -> d
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> a
    46:46:java.lang.String getMimeType() -> a
    61:62:void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.b.a.c.b.b.a.b:
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.b.a.c.b.b.a.c:
    java.lang.String getMimeType() -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.b.a.c.b.b.a.d:
    byte[] content -> b
    java.nio.charset.Charset charset -> c
    121:135:void writeTo(java.io.OutputStream) -> a
    138:138:java.lang.String getTransferEncoding() -> d
    142:142:java.lang.String getCharset() -> c
    146:146:long getContentLength() -> e
    150:150:java.lang.String getFilename() -> b
com.lidroid.xutils.http.client.util.URIBuilder -> com.b.a.c.b.c.a:
    java.lang.String scheme -> a
    java.lang.String encodedSchemeSpecificPart -> b
    java.lang.String encodedAuthority -> c
    java.lang.String userInfo -> d
    java.lang.String encodedUserInfo -> e
    java.lang.String host -> f
    int port -> g
    java.lang.String path -> h
    java.lang.String encodedPath -> i
    java.lang.String encodedQuery -> j
    java.util.List queryParams -> k
    java.lang.String fragment -> l
    java.lang.String encodedFragment -> m
    64:77:void digestURI(java.net.URI) -> a
    80:83:java.util.List parseQuery(java.lang.String) -> a
    92:92:java.net.URI build(java.nio.charset.Charset) -> a
    96:137:java.lang.String buildString(java.nio.charset.Charset) -> b
    141:141:java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> a
    145:145:java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> b
    149:149:java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> a
    153:153:java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> c
    231:237:com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> a
    305:317:java.lang.String normalizePath(java.lang.String) -> b
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.b.a.c.b.c.b:
    char[] DELIM -> a
    java.util.BitSet UNRESERVED -> b
    java.util.BitSet PUNCT -> c
    java.util.BitSet USERINFO -> d
    java.util.BitSet PATHSAFE -> e
    java.util.BitSet FRAGMENT -> f
    java.util.BitSet RESERVED -> g
    java.util.BitSet URLENCODER -> h
    124:138:java.util.List parse(java.lang.String) -> a
    151:164:java.lang.String format(java.util.List,java.lang.String) -> a
    178:191:java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> a
    308:327:java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> a
    411:414:java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> a
    430:433:java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> d
    446:446:java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> a
    459:459:java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> b
    472:472:java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> c
com.lidroid.xutils.task.Node -> com.b.a.d.a:
    boolean valueAsT -> b
    com.lidroid.xutils.task.PriorityObject value -> c
    com.lidroid.xutils.task.Node next -> a
    618:618:com.lidroid.xutils.task.Priority getPriority() -> a
    623:628:java.lang.Object getValue() -> b
    633:641:void setValue(java.lang.Object) -> a
com.lidroid.xutils.task.Priority -> com.b.a.d.b:
    com.lidroid.xutils.task.Priority UI_TOP -> a
    com.lidroid.xutils.task.Priority UI_NORMAL -> b
    com.lidroid.xutils.task.Priority UI_LOW -> c
    com.lidroid.xutils.task.Priority DEFAULT -> d
    com.lidroid.xutils.task.Priority BG_TOP -> e
    com.lidroid.xutils.task.Priority BG_NORMAL -> f
    com.lidroid.xutils.task.Priority BG_LOW -> g
    com.lidroid.xutils.task.Priority[] ENUM$VALUES -> h
    1:1:com.lidroid.xutils.task.Priority[] values() -> values
    1:1:com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.b.a.d.c:
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> b
    java.util.concurrent.Executor sDefaultExecutor -> a
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> c
    java.util.concurrent.FutureTask mFuture -> d
    boolean mExecuteInvoked -> e
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> f
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> g
    com.lidroid.xutils.task.Priority priority -> h
    54:55:void setPriority(com.lidroid.xutils.task.Priority) -> a
    89:93:void postResultIfNotInvoked(java.lang.Object) -> c
    97:100:java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> c
    126:126:void onPreExecute() -> a
    141:141:void onPostExecute(java.lang.Object) -> a
    153:153:void onProgressUpdate(java.lang.Object[]) -> b
    170:171:void onCancelled(java.lang.Object) -> b
    186:186:void onCancelled() -> b
    199:199:boolean isCancelled() -> c
    302:314:com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    355:359:void publishProgress(java.lang.Object[]) -> d
    362:367:void finish(java.lang.Object) -> e
    361:361:void access$0(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> a
    45:45:java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.task.PriorityAsyncTask) -> a
    95:95:java.lang.Object access$2(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> b
    88:88:void access$3(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> c
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.b.a.d.c$1:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> a
    63:67:java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.b.a.d.c$2:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> a
    75:84:void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.b.a.d.c$a:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.b.a.d.c$b:
    378:388:void handleMessage(android.os.Message) -> handleMessage
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.b.a.d.c$c:
    java.lang.Object[] mParams -> b
com.lidroid.xutils.task.PriorityExecutor -> com.b.a.d.d:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> b
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> c
    59:60:void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.b.a.d.d$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    22:22:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.b.a.d.e:
    com.lidroid.xutils.task.Priority priority -> a
    java.lang.Object obj -> b
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.b.a.d.f:
    int capacity -> b
    java.util.concurrent.atomic.AtomicInteger count -> c
    com.lidroid.xutils.task.Node head -> a
    com.lidroid.xutils.task.Node last -> d
    java.util.concurrent.locks.ReentrantLock takeLock -> e
    java.util.concurrent.locks.Condition notEmpty -> f
    java.util.concurrent.locks.ReentrantLock putLock -> g
    java.util.concurrent.locks.Condition notFull -> h
    70:77:void signalNotEmpty() -> c
    83:90:void signalNotFull() -> d
    93:97:java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> a
    103:122:void _enqueue(com.lidroid.xutils.task.Node) -> b
    128:134:java.lang.Object _dequeue() -> e
    141:143:void fullyLock() -> a
    149:151:void fullyUnlock() -> b
    184:184:int size() -> size
    188:188:int remainingCapacity() -> remainingCapacity
    192:213:void put(java.lang.Object) -> put
    218:239:boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    243:263:boolean offer(java.lang.Object) -> offer
    268:285:java.lang.Object take() -> take
    289:310:java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    314:333:java.lang.Object poll() -> poll
    337:349:java.lang.Object peek() -> peek
    359:365:void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> a
    368:382:boolean remove(java.lang.Object) -> remove
    386:395:boolean contains(java.lang.Object) -> contains
    399:409:java.lang.Object[] toArray() -> toArray
    414:429:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    433:446:void clear() -> clear
    449:449:int drainTo(java.util.Collection) -> drainTo
    453:489:int drainTo(java.util.Collection,int) -> drainTo
    493:493:java.util.Iterator iterator() -> iterator
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.b.a.d.f$a:
    com.lidroid.xutils.task.Node current -> b
    com.lidroid.xutils.task.Node lastRet -> c
    java.lang.Object currentElement -> d
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> a
    514:514:boolean hasNext() -> hasNext
    519:518:com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> a
    529:540:java.lang.Object next() -> next
    544:561:void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.b.a.d.g:
    16:17:void run() -> run
com.lidroid.xutils.util.CharsetUtils -> com.b.a.e.a:
    java.util.List SUPPORT_CHARSET -> a
    33:37:java.lang.String toCharset(java.lang.String,java.lang.String,int) -> a
    42:49:java.lang.String getEncoding(java.lang.String,int) -> a
    54:57:boolean isCharset(java.lang.String,java.lang.String,int) -> b
com.lidroid.xutils.util.IOUtils -> com.b.a.e.b:
    33:39:void closeQuietly(java.io.Closeable) -> a
com.lidroid.xutils.util.LogUtils -> com.b.a.e.c:
    java.lang.String customTagPrefix -> a
    boolean allowD -> b
    boolean allowE -> c
    boolean allowI -> d
    boolean allowV -> e
    boolean allowW -> f
    boolean allowWtf -> g
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> h
    45:50:java.lang.String generateTag(java.lang.StackTraceElement) -> a
    86:95:void d(java.lang.String) -> a
    110:119:void e(java.lang.String) -> b
    122:131:void e(java.lang.String,java.lang.Throwable) -> a
    206:215:void w(java.lang.Throwable) -> a
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.b.a.e.c$a:
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void w(java.lang.String,java.lang.Throwable) -> a
com.lidroid.xutils.util.OtherUtils -> com.b.a.e.d:
    51:101:java.lang.String getUserAgent(android.content.Context) -> a
    139:149:boolean isSupportRange(org.apache.http.HttpResponse) -> a
    153:167:java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> b
    171:192:java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> a
    198:212:long sizeOfString(java.lang.String,java.lang.String) -> a
    217:217:java.lang.String getSubString(java.lang.String,int,int) -> a
    225:225:java.lang.StackTraceElement getCallerStackTraceElement() -> a
com.startapp.android.publish.Ad -> com.startapp.android.publish.Ad:
    android.content.Context context -> context
    java.lang.Object extraData -> extraData
    com.startapp.android.publish.adinformation.b adInfoOverride -> adInfoOverride
    com.startapp.android.publish.model.AdPreferences$Placement placement -> placement
    java.lang.String errorMessage -> errorMessage
    com.startapp.android.publish.Ad$AdState state -> state
    boolean init -> init
    java.lang.Object getExtraData() -> getExtraData
    android.content.Context getContext() -> getContext
    void setExtraData(java.lang.Object) -> setExtraData
    com.startapp.android.publish.Ad$AdState getState() -> getState
    void setState(com.startapp.android.publish.Ad$AdState) -> setState
    java.lang.String getErrorMessage() -> getErrorMessage
    void setErrorMessage(java.lang.String) -> setErrorMessage
    com.startapp.android.publish.adinformation.b getAdInfoOverride() -> getAdInfoOverride
    void setAdInfoOverride(com.startapp.android.publish.adinformation.b) -> setAdInfoOverride
    boolean load() -> load
    boolean load(com.startapp.android.publish.AdEventListener) -> load
    boolean load(com.startapp.android.publish.model.AdPreferences) -> load
    boolean load(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> load
    boolean load(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener,boolean) -> load
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
    boolean isReady() -> isReady
    boolean show() -> show
com.startapp.android.publish.Ad$1 -> com.startapp.android.publish.Ad$1:
    com.startapp.android.publish.AdEventListener a -> a
    com.startapp.android.publish.Ad b -> b
    void run() -> run
com.startapp.android.publish.Ad$2 -> com.startapp.android.publish.Ad$2:
    com.startapp.android.publish.model.AdPreferences a -> a
    com.startapp.android.publish.AdEventListener b -> b
    com.startapp.android.publish.Ad c -> c
    void onFinishLoadingMeta() -> onFinishLoadingMeta
    void onFailedLoadingMeta() -> onFailedLoadingMeta
com.startapp.android.publish.Ad$AdState -> com.startapp.android.publish.Ad$AdState:
    com.startapp.android.publish.Ad$AdState UN_INITIALIZED -> UN_INITIALIZED
    com.startapp.android.publish.Ad$AdState PROCESSING -> PROCESSING
    com.startapp.android.publish.Ad$AdState READY -> READY
    com.startapp.android.publish.Ad$AdState[] $VALUES -> $VALUES
    com.startapp.android.publish.Ad$AdState[] values() -> values
    com.startapp.android.publish.Ad$AdState valueOf(java.lang.String) -> valueOf
com.startapp.android.publish.AdDisplayListener -> com.startapp.android.publish.AdDisplayListener:
    void adHidden(com.startapp.android.publish.Ad) -> adHidden
    void adDisplayed(com.startapp.android.publish.Ad) -> adDisplayed
    void adClicked(com.startapp.android.publish.Ad) -> adClicked
com.startapp.android.publish.AdEventListener -> com.startapp.android.publish.AdEventListener:
    void onReceiveAd(com.startapp.android.publish.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.startapp.android.publish.Ad) -> onFailedToReceiveAd
com.startapp.android.publish.AppWallActivity -> com.startapp.android.publish.AppWallActivity:
    com.startapp.android.publish.b.b a -> a
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
com.startapp.android.publish.AppWallDelegateActivity -> com.startapp.android.publish.AppWallDelegateActivity:
    boolean a -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean a(com.startapp.android.publish.AppWallDelegateActivity) -> a
com.startapp.android.publish.AppWallDelegateActivity$1 -> com.startapp.android.publish.AppWallDelegateActivity$1:
com.startapp.android.publish.AppWallDelegateActivity$a -> com.startapp.android.publish.AppWallDelegateActivity$a:
    com.startapp.android.publish.AppWallDelegateActivity a -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.startapp.android.publish.HtmlAd -> com.startapp.android.publish.HtmlAd:
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
com.startapp.android.publish.JsInterface -> com.startapp.android.publish.JsInterface:
    boolean processed -> processed
    java.lang.Runnable closeCallback -> closeCallback
    java.lang.Runnable clickCallback -> clickCallback
    android.content.Context mContext -> mContext
    void closeAd() -> closeAd
    void openApp(java.lang.String,java.lang.String,java.lang.String) -> openApp
com.startapp.android.publish.SDKAdPreferences -> com.startapp.android.publish.SDKAdPreferences:
    long serialVersionUID -> serialVersionUID
    com.startapp.android.publish.SDKAdPreferences$Gender gender -> gender
    java.lang.Integer age -> age
    com.startapp.android.publish.SDKAdPreferences$Gender getGender() -> getGender
    com.startapp.android.publish.SDKAdPreferences setGender(com.startapp.android.publish.SDKAdPreferences$Gender) -> setGender
    java.lang.Integer getAge() -> getAge
    com.startapp.android.publish.SDKAdPreferences setAge(int) -> setAge
    java.lang.String toString() -> toString
com.startapp.android.publish.SDKAdPreferences$Gender -> com.startapp.android.publish.SDKAdPreferences$Gender:
    com.startapp.android.publish.SDKAdPreferences$Gender MALE -> MALE
    com.startapp.android.publish.SDKAdPreferences$Gender FEMALE -> FEMALE
    java.lang.String gender -> gender
    com.startapp.android.publish.SDKAdPreferences$Gender[] $VALUES -> $VALUES
    com.startapp.android.publish.SDKAdPreferences$Gender[] values() -> values
    com.startapp.android.publish.SDKAdPreferences$Gender valueOf(java.lang.String) -> valueOf
    java.lang.String getGender() -> getGender
    java.lang.String toString() -> toString
    com.startapp.android.publish.SDKAdPreferences$Gender parseString(java.lang.String) -> parseString
com.startapp.android.publish.StartAppAd -> com.startapp.android.publish.StartAppAd:
    java.lang.String TAG -> TAG
    com.startapp.android.publish.c ad -> ad
    boolean forceOfferWall3D -> forceOfferWall3D
    boolean forceOfferWall2D -> forceOfferWall2D
    boolean forceFullpage -> forceFullpage
    boolean forceOverlay -> forceOverlay
    boolean testMode -> testMode
    com.startapp.android.publish.StartAppAd$AdMode adMode -> adMode
    com.startapp.android.publish.AdDisplayListener callback -> callback
    android.content.BroadcastReceiver callbackBroadcastReceiver -> callbackBroadcastReceiver
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    boolean load(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> load
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
    void createFullpageSelection() -> createFullpageSelection
    void createOfferwallSelection() -> createOfferwallSelection
    boolean show(com.startapp.android.publish.AdDisplayListener) -> show
    void registerBroadcastReceiver(java.lang.String) -> registerBroadcastReceiver
    boolean show() -> show
    void setAdMode(com.startapp.android.publish.StartAppAd$AdMode) -> setAdMode
    void loadAd() -> loadAd
    void loadAd(com.startapp.android.publish.model.AdPreferences) -> loadAd
    void loadAd(com.startapp.android.publish.AdEventListener) -> loadAd
    void loadAd(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAd
    void loadAd(com.startapp.android.publish.StartAppAd$AdMode) -> loadAd
    void loadAd(com.startapp.android.publish.StartAppAd$AdMode,com.startapp.android.publish.model.AdPreferences) -> loadAd
    void loadAd(com.startapp.android.publish.StartAppAd$AdMode,com.startapp.android.publish.AdEventListener) -> loadAd
    void loadAd(com.startapp.android.publish.StartAppAd$AdMode,com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAd
    boolean showAd() -> showAd
    boolean showAd(com.startapp.android.publish.AdDisplayListener) -> showAd
    void onResume() -> onResume
    void onPause() -> onPause
    void onBackPressed() -> onBackPressed
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void close() -> close
    boolean isReady() -> isReady
    void loadSplash(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadSplash
    void showSplash(android.app.Activity,android.os.Bundle) -> showSplash
    void showSplash(android.app.Activity,android.os.Bundle,com.startapp.android.publish.splash.SplashConfig) -> showSplash
    void showSplash(android.app.Activity,android.os.Bundle,com.startapp.android.publish.model.AdPreferences) -> showSplash
    void showSplash(android.app.Activity,android.os.Bundle,com.startapp.android.publish.splash.SplashConfig,com.startapp.android.publish.model.AdPreferences) -> showSplash
    void showSplash(android.app.Activity,android.os.Bundle,com.startapp.android.publish.splash.SplashConfig,com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.splash.SplashHideListener) -> showSplash
    void showSlider(android.app.Activity) -> showSlider
    void showSlider(android.app.Activity,com.startapp.android.publish.model.AdPreferences) -> showSlider
    java.lang.String getLauncherName() -> getLauncherName
    com.startapp.android.publish.Ad$AdState getState() -> getState
    com.startapp.android.publish.AdDisplayListener access$000(com.startapp.android.publish.StartAppAd) -> access$000
com.startapp.android.publish.StartAppAd$1 -> com.startapp.android.publish.StartAppAd$1:
    com.startapp.android.publish.StartAppAd a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.startapp.android.publish.StartAppAd$2 -> com.startapp.android.publish.StartAppAd$2:
    android.app.Activity a -> a
    com.startapp.android.publish.splash.SplashHideListener b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.startapp.android.publish.StartAppAd$3 -> com.startapp.android.publish.StartAppAd$3:
    int[] a -> a
com.startapp.android.publish.StartAppAd$AdMode -> com.startapp.android.publish.StartAppAd$AdMode:
    com.startapp.android.publish.StartAppAd$AdMode AUTOMATIC -> AUTOMATIC
    com.startapp.android.publish.StartAppAd$AdMode FULLPAGE -> FULLPAGE
    com.startapp.android.publish.StartAppAd$AdMode OFFERWALL -> OFFERWALL
    com.startapp.android.publish.StartAppAd$AdMode OVERLAY -> OVERLAY
    com.startapp.android.publish.StartAppAd$AdMode[] $VALUES -> $VALUES
    com.startapp.android.publish.StartAppAd$AdMode[] values() -> values
    com.startapp.android.publish.StartAppAd$AdMode valueOf(java.lang.String) -> valueOf
com.startapp.android.publish.StartAppAd$a -> com.startapp.android.publish.StartAppAd$a:
    boolean b -> b
    com.startapp.android.publish.AdEventListener c -> c
    boolean d -> d
    com.startapp.android.publish.StartAppAd a -> a
    void onReceiveAd(com.startapp.android.publish.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.startapp.android.publish.Ad) -> onFailedToReceiveAd
com.startapp.android.publish.StartAppSDK -> com.startapp.android.publish.StartAppSDK:
    com.startapp.android.publish.SDKAdPreferences a -> a
    boolean b -> b
    boolean c -> c
    long d -> d
    android.app.Application e -> e
    com.startapp.android.publish.a.k f -> f
    java.util.HashMap g -> g
    boolean h -> h
    java.lang.Object i -> i
    boolean j -> j
    com.startapp.android.publish.AdEventListener k -> k
    com.startapp.android.publish.StartAppSDK getInstance() -> getInstance
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String,java.lang.String,com.startapp.android.publish.SDKAdPreferences) -> init
    void init(android.content.Context,java.lang.String,java.lang.String,boolean) -> init
    void init(android.content.Context,java.lang.String,java.lang.String,com.startapp.android.publish.SDKAdPreferences,boolean) -> init
    void a(android.content.Context,java.lang.String,java.lang.String,com.startapp.android.publish.SDKAdPreferences,boolean) -> a
    void a(android.content.Context,boolean) -> a
    void a(android.content.Context) -> a
    void registerApplicationLifeCycle(android.app.Activity) -> registerApplicationLifeCycle
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    boolean isReturnAdsEnabled() -> isReturnAdsEnabled
    void a(boolean) -> a
    void onBackPressed() -> onBackPressed
    com.startapp.android.publish.SDKAdPreferences getSDKAdPrefs(android.content.Context) -> getSDKAdPrefs
    boolean a() -> a
    void loadReturnAd() -> loadReturnAd
    void loadReturnAd(com.startapp.android.publish.model.AdPreferences) -> loadReturnAd
    boolean a(com.startapp.android.publish.StartAppSDK,boolean) -> a
com.startapp.android.publish.StartAppSDK$1 -> com.startapp.android.publish.StartAppSDK$1:
    android.content.Context a -> a
    com.startapp.android.publish.StartAppSDK b -> b
    void run() -> run
com.startapp.android.publish.StartAppSDK$2 -> com.startapp.android.publish.StartAppSDK$2:
    com.startapp.android.publish.StartAppSDK a -> a
    void onReceiveAd(com.startapp.android.publish.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.startapp.android.publish.Ad) -> onFailedToReceiveAd
com.startapp.android.publish.StartAppSDK$a -> com.startapp.android.publish.StartAppSDK$a:
    com.startapp.android.publish.StartAppSDK a -> a
    com.startapp.android.publish.StartAppSDK a() -> a
com.startapp.android.publish.a -> com.startapp.android.publish.a:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    int e -> e
    int f -> f
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    boolean c() -> c
    void a(boolean) -> a
    boolean d() -> d
    void b(boolean) -> b
    int e() -> e
com.startapp.android.publish.a.a -> com.startapp.android.publish.a.a:
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
com.startapp.android.publish.a.b -> com.startapp.android.publish.a.b:
    int a -> a
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
com.startapp.android.publish.a.c -> com.startapp.android.publish.a.c:
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
com.startapp.android.publish.a.d -> com.startapp.android.publish.a.d:
    java.lang.String launcherName -> launcherName
    java.util.List apps -> apps
    java.lang.String html -> html
    int width -> width
    int height -> height
    java.lang.String adId -> adId
    boolean[] smartRedirect -> smartRedirect
    java.lang.String[] trackingUrl -> trackingUrl
    com.startapp.android.publish.model.AdPreferences$Placement getPlacement() -> getPlacement
    java.lang.String getHtml() -> getHtml
    void setWidth(int) -> setWidth
    int getWidth() -> getWidth
    void setHeight(int) -> setHeight
    int getHeight() -> getHeight
    void setPlacement(com.startapp.android.publish.model.AdPreferences$Placement) -> setPlacement
    void setSize(int,int) -> setSize
    java.lang.String gtAdId() -> gtAdId
    void initDefaultLauncherName() -> initDefaultLauncherName
    void setHtml(java.lang.String) -> setHtml
    void setSmartRedirect(java.lang.String) -> setSmartRedirect
    boolean getSmartRedirect(int) -> getSmartRedirect
    boolean[] getSmartRedirect() -> getSmartRedirect
    void setTrackingUrl(java.lang.String) -> setTrackingUrl
    java.lang.String[] getTrackingUrls() -> getTrackingUrls
    java.lang.String getTrackingUrls(int) -> getTrackingUrls
    java.util.List getApps() -> getApps
    void setApps(java.util.List) -> setApps
    void setAdInfoEnableOverride(java.lang.String) -> setAdInfoEnableOverride
    void setAdInfoPositionOverrid(java.lang.String) -> setAdInfoPositionOverrid
    java.lang.String getLauncherName() -> getLauncherName
com.startapp.android.publish.a.e -> com.startapp.android.publish.a.e:
    boolean show() -> show
    java.lang.String getLauncherName() -> getLauncherName
com.startapp.android.publish.a.f -> com.startapp.android.publish.a.f:
    java.util.List b -> b
    java.util.List a -> a
    void a(java.util.List) -> a
    java.util.List a() -> a
com.startapp.android.publish.a.g -> com.startapp.android.publish.a.g:
    com.startapp.android.publish.nativead.NativeAdPreferences b -> b
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
com.startapp.android.publish.a.h -> com.startapp.android.publish.a.h:
    java.lang.String b -> b
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
    boolean show() -> show
    void b() -> b
    java.lang.String getLauncherName() -> getLauncherName
com.startapp.android.publish.a.i -> com.startapp.android.publish.a.i:
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
com.startapp.android.publish.a.j -> com.startapp.android.publish.a.j:
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
com.startapp.android.publish.a.k -> com.startapp.android.publish.a.k:
    long a -> a
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
    boolean load(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> load
    boolean a() -> a
    boolean show() -> show
    long a(com.startapp.android.publish.a.k,long) -> a
com.startapp.android.publish.a.k$1 -> com.startapp.android.publish.a.k$1:
    com.startapp.android.publish.AdEventListener a -> a
    com.startapp.android.publish.a.k b -> b
    void onReceiveAd(com.startapp.android.publish.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.startapp.android.publish.Ad) -> onFailedToReceiveAd
com.startapp.android.publish.a.l -> com.startapp.android.publish.a.l:
    java.util.List b -> b
    boolean load(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> load
    void a(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> a
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
    void a(java.util.List) -> a
    java.util.List a() -> a
com.startapp.android.publish.a.m -> com.startapp.android.publish.a.m:
    boolean load(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> load
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
com.startapp.android.publish.adinformation.AdInformationConfig -> com.startapp.android.publish.adinformation.AdInformationConfig:
    long serialVersionUID -> serialVersionUID
    boolean enabled -> enabled
    float fatFingersFactor -> fatFingersFactor
    java.lang.String dialogUrl -> dialogUrl
    com.startapp.android.publish.adinformation.e SimpleToken -> SimpleToken
    java.util.HashMap Positions -> Positions
    java.util.HashMap a -> a
    java.util.List ImageResources -> ImageResources
    com.startapp.android.publish.adinformation.AdInformationConfig a() -> a
    void a(com.startapp.android.publish.adinformation.AdInformationConfig) -> a
    boolean b() -> b
    boolean a(android.content.Context) -> a
    void a(android.content.Context,boolean) -> a
    float c() -> c
    void a(com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType,com.startapp.android.publish.adinformation.d) -> a
    java.lang.String d() -> d
    com.startapp.android.publish.adinformation.e e() -> e
    com.startapp.android.publish.adinformation.AdInformationPositions$Position a(com.startapp.android.publish.model.AdPreferences$Placement) -> a
    com.startapp.android.publish.adinformation.d a(com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType) -> a
    void f() -> f
    void g() -> g
    void h() -> h
com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType -> com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType:
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType INFO_S -> INFO_S
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType INFO_EX_S -> INFO_EX_S
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType INFO_L -> INFO_L
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType INFO_EX_L -> INFO_EX_L
    int width -> width
    int height -> height
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType[] $VALUES -> $VALUES
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType[] values() -> values
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType valueOf(java.lang.String) -> valueOf
    int getDefaultWidth() -> getDefaultWidth
    int getDefaultHeight() -> getDefaultHeight
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType getByName(java.lang.String) -> getByName
com.startapp.android.publish.adinformation.AdInformationJsInterface -> com.startapp.android.publish.adinformation.AdInformationJsInterface:
    boolean processed -> processed
    java.lang.Runnable declineCallback -> declineCallback
    java.lang.Runnable acceptCallback -> acceptCallback
    void decline() -> decline
    void accept() -> accept
com.startapp.android.publish.adinformation.AdInformationPositions -> com.startapp.android.publish.adinformation.AdInformationPositions:
    java.lang.String a -> a
com.startapp.android.publish.adinformation.AdInformationPositions$Position -> com.startapp.android.publish.adinformation.AdInformationPositions$Position:
    com.startapp.android.publish.adinformation.AdInformationPositions$Position TOP_LEFT -> TOP_LEFT
    com.startapp.android.publish.adinformation.AdInformationPositions$Position TOP_RIGHT -> TOP_RIGHT
    com.startapp.android.publish.adinformation.AdInformationPositions$Position BOTTOM_LEFT -> BOTTOM_LEFT
    com.startapp.android.publish.adinformation.AdInformationPositions$Position BOTTOM_RIGHT -> BOTTOM_RIGHT
    int[] rules -> rules
    int animationMultiplier -> animationMultiplier
    int index -> index
    com.startapp.android.publish.adinformation.AdInformationPositions$Position[] $VALUES -> $VALUES
    com.startapp.android.publish.adinformation.AdInformationPositions$Position[] values() -> values
    com.startapp.android.publish.adinformation.AdInformationPositions$Position valueOf(java.lang.String) -> valueOf
    void addRules(android.widget.RelativeLayout$LayoutParams) -> addRules
    int getIndex() -> getIndex
    int getAnimationStartMultiplier() -> getAnimationStartMultiplier
    com.startapp.android.publish.adinformation.AdInformationPositions$Position getByName(java.lang.String) -> getByName
    com.startapp.android.publish.adinformation.AdInformationPositions$Position getByIndex(long) -> getByIndex
com.startapp.android.publish.adinformation.a -> com.startapp.android.publish.adinformation.a:
    android.content.Context a -> a
    com.startapp.android.publish.adinformation.c b -> b
    android.widget.RelativeLayout c -> c
    android.webkit.WebView d -> d
    android.app.Dialog e -> e
    com.startapp.android.publish.model.AdPreferences$Placement f -> f
    android.widget.RelativeLayout g -> g
    android.os.Handler h -> h
    com.startapp.android.publish.adinformation.a$a i -> i
    boolean j -> j
    com.startapp.android.publish.adinformation.b k -> k
    com.startapp.android.publish.adinformation.AdInformationConfig l -> l
    com.startapp.android.publish.adinformation.e m -> m
    java.lang.Runnable n -> n
    java.lang.Runnable o -> o
    void a(android.widget.RelativeLayout) -> a
    com.startapp.android.publish.adinformation.AdInformationConfig a(android.content.Context) -> a
    com.startapp.android.publish.adinformation.AdInformationConfig a() -> a
    com.startapp.android.publish.adinformation.b b() -> b
    void a(boolean) -> a
    void onClick(android.view.View) -> onClick
    void c() -> c
    void d() -> d
    void a(android.view.ViewGroup,android.graphics.Point) -> a
    void b(android.view.ViewGroup,android.graphics.Point) -> b
    void a(com.startapp.android.publish.adinformation.a) -> a
    android.content.Context b(com.startapp.android.publish.adinformation.a) -> b
    com.startapp.android.publish.adinformation.e c(com.startapp.android.publish.adinformation.a) -> c
    com.startapp.android.publish.adinformation.AdInformationConfig d(com.startapp.android.publish.adinformation.a) -> d
    void a(com.startapp.android.publish.adinformation.a,boolean) -> a
    android.widget.RelativeLayout e(com.startapp.android.publish.adinformation.a) -> e
    android.widget.RelativeLayout f(com.startapp.android.publish.adinformation.a) -> f
com.startapp.android.publish.adinformation.a$1 -> com.startapp.android.publish.adinformation.a$1:
    com.startapp.android.publish.adinformation.a a -> a
    void run() -> run
com.startapp.android.publish.adinformation.a$2 -> com.startapp.android.publish.adinformation.a$2:
    com.startapp.android.publish.adinformation.a a -> a
    void run() -> run
com.startapp.android.publish.adinformation.a$3 -> com.startapp.android.publish.adinformation.a$3:
    com.startapp.android.publish.adinformation.a a -> a
    void run() -> run
com.startapp.android.publish.adinformation.a$4 -> com.startapp.android.publish.adinformation.a$4:
    android.view.ViewGroup a -> a
    android.widget.RelativeLayout$LayoutParams b -> b
    com.startapp.android.publish.adinformation.a c -> c
    void run() -> run
com.startapp.android.publish.adinformation.a$5 -> com.startapp.android.publish.adinformation.a$5:
    int[] a -> a
com.startapp.android.publish.adinformation.a$a -> com.startapp.android.publish.adinformation.a$a:
    com.startapp.android.publish.adinformation.a$a a -> a
    com.startapp.android.publish.adinformation.a$a b -> b
    com.startapp.android.publish.adinformation.a$a[] c -> c
    com.startapp.android.publish.adinformation.a$a[] values() -> values
    com.startapp.android.publish.adinformation.a$a valueOf(java.lang.String) -> valueOf
com.startapp.android.publish.adinformation.a$b -> com.startapp.android.publish.adinformation.a$b:
    com.startapp.android.publish.adinformation.a$b a -> a
    com.startapp.android.publish.adinformation.a$b b -> b
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType infoType -> infoType
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType infoExtendedType -> infoExtendedType
    com.startapp.android.publish.adinformation.a$b[] c -> c
    com.startapp.android.publish.adinformation.a$b[] values() -> values
    com.startapp.android.publish.adinformation.a$b valueOf(java.lang.String) -> valueOf
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType a() -> a
    com.startapp.android.publish.adinformation.AdInformationConfig$ImageResourceType b() -> b
com.startapp.android.publish.adinformation.b -> com.startapp.android.publish.adinformation.b:
    long serialVersionUID -> serialVersionUID
    boolean enableOverride -> enableOverride
    boolean enable -> enable
    boolean positionOverride -> positionOverride
    com.startapp.android.publish.adinformation.AdInformationPositions$Position position -> position
    com.startapp.android.publish.adinformation.b a() -> a
    boolean b() -> b
    void a(boolean) -> a
    com.startapp.android.publish.adinformation.AdInformationPositions$Position c() -> c
    void a(com.startapp.android.publish.adinformation.AdInformationPositions$Position) -> a
    boolean d() -> d
    boolean e() -> e
com.startapp.android.publish.adinformation.c -> com.startapp.android.publish.adinformation.c:
    android.widget.ImageView a -> a
    android.widget.ImageView b -> b
    android.widget.RelativeLayout c -> c
    android.view.View$OnClickListener d -> d
    android.view.View$OnClickListener e -> e
    com.startapp.android.publish.adinformation.AdInformationConfig f -> f
    com.startapp.android.publish.adinformation.d g -> g
    com.startapp.android.publish.adinformation.d h -> h
    com.startapp.android.publish.adinformation.a$b i -> i
    com.startapp.android.publish.model.AdPreferences$Placement j -> j
    boolean k -> k
    android.os.Handler l -> l
    java.lang.Runnable m -> m
    com.startapp.android.publish.adinformation.AdInformationPositions$Position n -> n
    void a(com.startapp.android.publish.adinformation.a$b,com.startapp.android.publish.adinformation.b) -> a
    void a() -> a
    void b() -> b
    void setOnInfoClickListener(android.view.View$OnClickListener) -> setOnInfoClickListener
    void setSize(com.startapp.android.publish.adinformation.a$b) -> setSize
    void c() -> c
    void a(com.startapp.android.publish.adinformation.c) -> a
    boolean b(com.startapp.android.publish.adinformation.c) -> b
    boolean a(com.startapp.android.publish.adinformation.c,boolean) -> a
    void c(com.startapp.android.publish.adinformation.c) -> c
    java.lang.Runnable d(com.startapp.android.publish.adinformation.c) -> d
    android.os.Handler e(com.startapp.android.publish.adinformation.c) -> e
    void f(com.startapp.android.publish.adinformation.c) -> f
com.startapp.android.publish.adinformation.c$1 -> com.startapp.android.publish.adinformation.c$1:
    com.startapp.android.publish.adinformation.c a -> a
    void onClick(android.view.View) -> onClick
com.startapp.android.publish.adinformation.c$2 -> com.startapp.android.publish.adinformation.c$2:
    com.startapp.android.publish.adinformation.c a -> a
    void run() -> run
com.startapp.android.publish.adinformation.c$3 -> com.startapp.android.publish.adinformation.c$3:
    android.view.View$OnClickListener a -> a
    com.startapp.android.publish.adinformation.c b -> b
    void onClick(android.view.View) -> onClick
com.startapp.android.publish.adinformation.c$4 -> com.startapp.android.publish.adinformation.c$4:
    com.startapp.android.publish.adinformation.c a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.startapp.android.publish.adinformation.d -> com.startapp.android.publish.adinformation.d:
    long serialVersionUID -> serialVersionUID
    java.lang.String imageUrl -> imageUrl
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    java.lang.String imageFallbackUrl -> imageFallbackUrl
    android.graphics.Bitmap c -> c
    int width -> width
    int height -> height
    java.lang.String name -> name
    java.lang.String a() -> a
    android.graphics.Bitmap a(android.content.Context) -> a
    int b() -> b
    int c() -> c
    void a(int) -> a
    void b(int) -> b
    void d() -> d
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(android.graphics.Bitmap) -> a
    android.graphics.Bitmap e() -> e
    java.lang.String f() -> f
    android.graphics.Bitmap b(android.content.Context) -> b
    com.startapp.android.publish.adinformation.d c(java.lang.String) -> c
com.startapp.android.publish.adinformation.d$1 -> com.startapp.android.publish.adinformation.d$1:
    com.startapp.android.publish.adinformation.d a -> a
    void a(android.graphics.Bitmap,int) -> a
com.startapp.android.publish.adinformation.e -> com.startapp.android.publish.adinformation.e:
    long serialVersionUID -> serialVersionUID
    boolean enabled -> enabled
    boolean a() -> a
    boolean a(android.content.Context) -> a
    void a(android.content.Context,boolean) -> a
com.startapp.android.publish.b -> com.startapp.android.publish.b:
    java.lang.String NonHTML_URL -> NonHTML_URL
    java.lang.String HTML_URL -> HTML_URL
    java.lang.String META_DATA_URL -> META_DATA_URL
    java.lang.String DOWNLOAD_EVENT_URL -> DOWNLOAD_EVENT_URL
    java.lang.Boolean DEBUG -> DEBUG
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a(com.startapp.android.publish.b$a) -> a
    java.lang.Boolean a() -> a
com.startapp.android.publish.b$1 -> com.startapp.android.publish.b$1:
    int[] a -> a
com.startapp.android.publish.b$a -> com.startapp.android.publish.b$a:
    com.startapp.android.publish.b$a a -> a
    com.startapp.android.publish.b$a b -> b
    com.startapp.android.publish.b$a c -> c
    com.startapp.android.publish.b$a d -> d
    com.startapp.android.publish.b$a[] e -> e
    com.startapp.android.publish.b$a[] values() -> values
    com.startapp.android.publish.b$a valueOf(java.lang.String) -> valueOf
com.startapp.android.publish.b.a -> com.startapp.android.publish.b.a:
com.startapp.android.publish.b.b -> com.startapp.android.publish.b.b:
    android.content.Intent a -> a
    android.app.Activity b -> b
    boolean[] c -> c
    java.lang.String d -> d
    java.lang.String[] e -> e
    java.lang.String f -> f
    com.startapp.android.publish.model.AdPreferences$Placement g -> g
    boolean h -> h
    com.startapp.android.publish.adinformation.b i -> i
    int j -> j
    com.startapp.android.publish.b.b a(android.app.Activity,android.content.Intent,com.startapp.android.publish.model.AdPreferences$Placement) -> a
    void a(android.content.Intent) -> a
    void a(com.startapp.android.publish.model.AdPreferences$Placement) -> a
    void a(boolean) -> a
    void a(int) -> a
    android.content.Intent a() -> a
    void a(android.app.Activity) -> a
    void a(com.startapp.android.publish.adinformation.b) -> a
    android.app.Activity b() -> b
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void b(java.lang.String) -> b
    void a(boolean[]) -> a
    boolean[] c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String[] f() -> f
    com.startapp.android.publish.model.AdPreferences$Placement g() -> g
    com.startapp.android.publish.adinformation.b h() -> h
    int i() -> i
    void a(android.os.Bundle) -> a
    boolean a(int,android.view.KeyEvent) -> a
    void j() -> j
    void k() -> k
    void l() -> l
com.startapp.android.publish.b.b$1 -> com.startapp.android.publish.b.b$1:
    int[] a -> a
com.startapp.android.publish.b.c -> com.startapp.android.publish.b.c:
    int e -> e
    android.webkit.WebView a -> a
    com.startapp.android.publish.b.c$a f -> f
    com.startapp.android.publish.adinformation.a b -> b
    android.content.BroadcastReceiver c -> c
    java.lang.Runnable d -> d
    void a(android.os.Bundle) -> a
    void j() -> j
    void k() -> k
    boolean a(int,android.view.KeyEvent) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    void a(android.widget.RelativeLayout) -> a
    void n() -> n
    void l() -> l
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void m() -> m
    void a(com.startapp.android.publish.b.c,java.lang.String) -> a
    void b(com.startapp.android.publish.b.c,java.lang.String) -> b
com.startapp.android.publish.b.c$1 -> com.startapp.android.publish.b.c$1:
    com.startapp.android.publish.b.c a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.startapp.android.publish.b.c$2 -> com.startapp.android.publish.b.c$2:
    com.startapp.android.publish.b.c a -> a
    void run() -> run
com.startapp.android.publish.b.c$2$1 -> com.startapp.android.publish.b.c$2$1:
    com.startapp.android.publish.b.c$2 a -> a
    void run() -> run
com.startapp.android.publish.b.c$3 -> com.startapp.android.publish.b.c$3:
    com.startapp.android.publish.b.c a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.startapp.android.publish.b.c$4 -> com.startapp.android.publish.b.c$4:
    com.startapp.android.publish.b.c a -> a
    void run() -> run
com.startapp.android.publish.b.c$a -> com.startapp.android.publish.b.c$a:
    android.app.Activity a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.startapp.android.publish.b.c$b -> com.startapp.android.publish.b.c$b:
    com.startapp.android.publish.b.c a -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.startapp.android.publish.b.d -> com.startapp.android.publish.b.d:
    void a(android.webkit.WebView) -> a
com.startapp.android.publish.b.e -> com.startapp.android.publish.b.e:
    void a(android.webkit.WebView) -> a
    void j() -> j
    void b(android.webkit.WebView) -> b
com.startapp.android.publish.b.e$1 -> com.startapp.android.publish.b.e$1:
    android.webkit.WebView a -> a
    com.startapp.android.publish.b.e b -> b
    void run() -> run
com.startapp.android.publish.b.f -> com.startapp.android.publish.b.f:
    com.startapp.android.publish.splash.SplashConfig a -> a
    com.startapp.android.publish.splash.a b -> b
    boolean c -> c
    boolean d -> d
    void a(android.os.Bundle) -> a
    boolean a(int,android.view.KeyEvent) -> a
    void j() -> j
    void k() -> k
    void l() -> l
com.startapp.android.publish.banner.Banner -> com.startapp.android.publish.banner.Banner:
    java.lang.String TAG -> TAG
    int BANNER_3D_ID -> BANNER_3D_ID
    int BANNER_REG_ID -> BANNER_REG_ID
    com.startapp.android.publish.banner.banner3d.Banner3D banner3D -> banner3D
    com.startapp.android.publish.banner.bannerstandard.BannerStandard bannerHtml -> bannerHtml
    com.startapp.android.publish.banner.BannerOptions options -> options
    boolean bFirstTime -> bFirstTime
    com.startapp.android.publish.banner.Banner$BType type -> type
    boolean bVisible -> bVisible
    void init(com.startapp.android.publish.model.AdPreferences) -> init
    void init_step2() -> init_step2
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void showBanner() -> showBanner
    void hideBanner() -> hideBanner
    void access$000(com.startapp.android.publish.banner.Banner) -> access$000
    boolean access$100(com.startapp.android.publish.banner.Banner) -> access$100
    com.startapp.android.publish.banner.BannerOptions access$200(com.startapp.android.publish.banner.Banner) -> access$200
    com.startapp.android.publish.banner.Banner$BType access$302(com.startapp.android.publish.banner.Banner,com.startapp.android.publish.banner.Banner$BType) -> access$302
    com.startapp.android.publish.banner.Banner$BType access$300(com.startapp.android.publish.banner.Banner) -> access$300
    com.startapp.android.publish.banner.banner3d.Banner3D access$400(com.startapp.android.publish.banner.Banner) -> access$400
    com.startapp.android.publish.banner.bannerstandard.BannerStandard access$500(com.startapp.android.publish.banner.Banner) -> access$500
    boolean access$102(com.startapp.android.publish.banner.Banner,boolean) -> access$102
    boolean access$600(com.startapp.android.publish.banner.Banner) -> access$600
com.startapp.android.publish.banner.Banner$1 -> com.startapp.android.publish.banner.Banner$1:
    com.startapp.android.publish.banner.Banner this$0 -> this$0
    void onFinishLoadingMeta() -> onFinishLoadingMeta
    void onFailedLoadingMeta() -> onFailedLoadingMeta
com.startapp.android.publish.banner.Banner$2 -> com.startapp.android.publish.banner.Banner$2:
    com.startapp.android.publish.banner.Banner this$0 -> this$0
    void run() -> run
com.startapp.android.publish.banner.Banner$3 -> com.startapp.android.publish.banner.Banner$3:
    int[] $SwitchMap$com$startapp$android$publish$banner$Banner$BType -> $SwitchMap$com$startapp$android$publish$banner$Banner$BType
com.startapp.android.publish.banner.Banner$BType -> com.startapp.android.publish.banner.Banner$BType:
    com.startapp.android.publish.banner.Banner$BType THREED -> THREED
    com.startapp.android.publish.banner.Banner$BType REGULAR -> REGULAR
    com.startapp.android.publish.banner.Banner$BType[] $VALUES -> $VALUES
    com.startapp.android.publish.banner.Banner$BType[] values() -> values
    com.startapp.android.publish.banner.Banner$BType valueOf(java.lang.String) -> valueOf
com.startapp.android.publish.banner.Banner$SavedState -> com.startapp.android.publish.banner.Banner$SavedState:
    boolean bFirstTime -> bFirstTime
    com.startapp.android.publish.banner.Banner$BType type -> type
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.startapp.android.publish.banner.Banner$SavedState$1 -> com.startapp.android.publish.banner.Banner$SavedState$1:
    com.startapp.android.publish.banner.Banner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.startapp.android.publish.banner.Banner$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.startapp.android.publish.banner.BannerOptions -> com.startapp.android.publish.banner.BannerOptions:
    long serialVersionUID -> serialVersionUID
    com.startapp.android.publish.banner.BannerOptions$Effect a -> a
    int width -> width
    int height -> height
    int probability3D -> probability3D
    int timeBetweenFrames -> timeBetweenFrames
    int stepSize -> stepSize
    int delayFaceTime -> delayFaceTime
    int adsNumber -> adsNumber
    int htmlAdsNumber -> htmlAdsNumber
    float widthRatio -> widthRatio
    float heightRatio -> heightRatio
    float minScale -> minScale
    int scalePower -> scalePower
    com.startapp.android.publish.banner.BannerOptions$Effect effect -> effect
    boolean rotateThroughOnStart -> rotateThroughOnStart
    int rotateThroughSpeedMult -> rotateThroughSpeedMult
    int refreshRate -> refreshRate
    void a(int,int) -> a
    int a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
    int g() -> g
    int h() -> h
    int i() -> i
    float j() -> j
    float k() -> k
    float l() -> l
    int m() -> m
    com.startapp.android.publish.banner.BannerOptions$Effect n() -> n
    boolean o() -> o
    int p() -> p
    boolean equals(java.lang.Object) -> equals
com.startapp.android.publish.banner.BannerOptions$Effect -> com.startapp.android.publish.banner.BannerOptions$Effect:
    com.startapp.android.publish.banner.BannerOptions$Effect ROTATE_3D -> ROTATE_3D
    com.startapp.android.publish.banner.BannerOptions$Effect EXCHANGE -> EXCHANGE
    com.startapp.android.publish.banner.BannerOptions$Effect FLY_IN -> FLY_IN
    int index -> index
    com.startapp.android.publish.banner.BannerOptions$Effect[] $VALUES -> $VALUES
    com.startapp.android.publish.banner.BannerOptions$Effect[] values() -> values
    com.startapp.android.publish.banner.BannerOptions$Effect valueOf(java.lang.String) -> valueOf
    int getIndex() -> getIndex
    int getRotationMultiplier() -> getRotationMultiplier
    com.startapp.android.publish.banner.BannerOptions$Effect getByIndex(int) -> getByIndex
    com.startapp.android.publish.banner.BannerOptions$Effect getByName(java.lang.String) -> getByName
com.startapp.android.publish.banner.a -> com.startapp.android.publish.banner.a:
    android.graphics.Point a -> a
    void a(int) -> a
    void b(int) -> b
    void a(int,int) -> a
    int a() -> a
    int b() -> b
com.startapp.android.publish.banner.banner3d.Banner3D -> com.startapp.android.publish.banner.banner3d.Banner3D:
    java.lang.String TAG -> TAG
    int TIMEOUT_RESTORE -> TIMEOUT_RESTORE
    com.startapp.android.publish.banner.BannerOptions options -> options
    com.startapp.android.publish.a.a ads -> ads
    java.util.List adsItems -> adsItems
    com.startapp.android.publish.model.AdPreferences adPreferences -> adPreferences
    android.graphics.Camera camera -> camera
    android.graphics.Matrix matrix -> matrix
    android.graphics.Paint paint -> paint
    float rotation -> rotation
    float startY -> startY
    boolean rotating -> rotating
    boolean firstRotation -> firstRotation
    boolean firstRotationFinished -> firstRotationFinished
    boolean touchDown -> touchDown
    boolean animation -> animation
    boolean visible -> visible
    boolean defaultLoad -> defaultLoad
    boolean loaded -> loaded
    boolean loading -> loading
    boolean attachedToWindow -> attachedToWindow
    com.startapp.android.publish.adinformation.b overrides -> overrides
    java.util.List faces -> faces
    int currentBannerIndex -> currentBannerIndex
    java.lang.Runnable mAutoRotation -> mAutoRotation
    void hideBanner() -> hideBanner
    void showBanner() -> showBanner
    com.startapp.android.publish.banner.BannerOptions getBannerOptions() -> getBannerOptions
    void addAdInformationLayout() -> addAdInformationLayout
    void init() -> init
    void initRuntime() -> initRuntime
    void initDebug() -> initDebug
    void load() -> load
    void loadBanners(java.util.List) -> loadBanners
    void initFaces(java.util.List) -> initFaces
    boolean setBannerSize() -> setBannerSize
    android.graphics.Bitmap getCurrentBitmap() -> getCurrentBitmap
    android.graphics.Bitmap getPreviousBitmap() -> getPreviousBitmap
    int getCurrentBannerIndex() -> getCurrentBannerIndex
    int getNextBannerIndex() -> getNextBannerIndex
    int getTotalBaners() -> getTotalBaners
    void nextBanner() -> nextBanner
    void prevBanner() -> prevBanner
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawFrame(android.graphics.Canvas) -> drawFrame
    void drawFace(android.graphics.Canvas,android.graphics.Bitmap,int,int,int,int,float,float) -> drawFace
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void rotate(float) -> rotate
    void onReceiveAd(com.startapp.android.publish.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.startapp.android.publish.Ad) -> onFailedToReceiveAd
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void startRotation() -> startRotation
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean access$000(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$000
    java.util.List access$100(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$100
    boolean access$200(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$200
    int access$300(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$300
    boolean access$400(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$400
    com.startapp.android.publish.banner.BannerOptions access$500(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$500
    boolean access$600(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$600
    com.startapp.android.publish.banner.BannerOptions access$700(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$700
    void access$800(com.startapp.android.publish.banner.banner3d.Banner3D,float) -> access$800
    float access$900(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$900
    boolean access$1000(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$1000
    int access$1100(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$1100
    boolean access$1002(com.startapp.android.publish.banner.banner3d.Banner3D,boolean) -> access$1002
    boolean access$1200(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$1200
    boolean access$402(com.startapp.android.publish.banner.banner3d.Banner3D,boolean) -> access$402
    java.util.List access$1300(com.startapp.android.publish.banner.banner3d.Banner3D) -> access$1300
    void access$1400(com.startapp.android.publish.banner.banner3d.Banner3D,java.util.List) -> access$1400
com.startapp.android.publish.banner.banner3d.Banner3D$1 -> com.startapp.android.publish.banner.banner3d.Banner3D$1:
    com.startapp.android.publish.banner.banner3d.Banner3D this$0 -> this$0
    void run() -> run
com.startapp.android.publish.banner.banner3d.Banner3D$2 -> com.startapp.android.publish.banner.banner3d.Banner3D$2:
    com.startapp.android.publish.banner.banner3d.Banner3D this$0 -> this$0
    void run() -> run
com.startapp.android.publish.banner.banner3d.Banner3D$3 -> com.startapp.android.publish.banner.banner3d.Banner3D$3:
    com.startapp.android.publish.banner.banner3d.Banner3D this$0 -> this$0
    void run() -> run
com.startapp.android.publish.banner.banner3d.Banner3D$4 -> com.startapp.android.publish.banner.banner3d.Banner3D$4:
    com.startapp.android.publish.banner.banner3d.Banner3D this$0 -> this$0
    void run() -> run
com.startapp.android.publish.banner.banner3d.Banner3D$SavedState -> com.startapp.android.publish.banner.banner3d.Banner3D$SavedState:
    com.startapp.android.publish.model.AdDetails[] details -> details
    float rotation -> rotation
    int firstRotation -> firstRotation
    int currentImage -> currentImage
    boolean loaded -> loaded
    boolean loading -> loading
    boolean bDefaultLoad -> bDefaultLoad
    com.startapp.android.publish.adinformation.b overrides -> overrides
    com.startapp.android.publish.banner.BannerOptions options -> options
    com.startapp.android.publish.model.AdPreferences adPreferences -> adPreferences
    boolean bIsVisible -> bIsVisible
    com.startapp.android.publish.banner.banner3d.Banner3DFace[] faces -> faces
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setCurrentImage(int) -> setCurrentImage
    int getCurrentImage() -> getCurrentImage
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    boolean isFirstRotation() -> isFirstRotation
    void setFirstRotation(boolean) -> setFirstRotation
    void setDetails(java.util.List) -> setDetails
    java.util.List getDetails() -> getDetails
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.startapp.android.publish.banner.banner3d.Banner3D$SavedState$1 -> com.startapp.android.publish.banner.banner3d.Banner3D$SavedState$1:
    com.startapp.android.publish.banner.banner3d.Banner3D$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.startapp.android.publish.banner.banner3d.Banner3D$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.startapp.android.publish.banner.banner3d.Banner3DFace -> com.startapp.android.publish.banner.banner3d.Banner3DFace:
    com.startapp.android.publish.model.AdDetails a -> a
    android.graphics.Point b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    java.lang.Boolean e -> e
    com.startapp.android.publish.banner.banner3d.a f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.startapp.android.publish.model.AdDetails a() -> a
    android.graphics.Bitmap b() -> b
    void a(android.content.Context,com.startapp.android.publish.banner.BannerOptions,android.view.ViewGroup) -> a
    void c() -> c
    android.graphics.Bitmap a(android.view.View) -> a
    void a(android.graphics.Bitmap,int) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.startapp.android.publish.banner.banner3d.Banner3DFace$1 -> com.startapp.android.publish.banner.banner3d.Banner3DFace$1:
    com.startapp.android.publish.banner.banner3d.Banner3DFace a(android.os.Parcel) -> a
    com.startapp.android.publish.banner.banner3d.Banner3DFace[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.startapp.android.publish.banner.banner3d.Banner3DSize -> com.startapp.android.publish.banner.banner3d.Banner3DSize:
    boolean a(android.content.Context,android.view.ViewParent,com.startapp.android.publish.banner.BannerOptions) -> a
    com.startapp.android.publish.banner.a b(android.content.Context,android.view.ViewParent,com.startapp.android.publish.banner.BannerOptions) -> b
com.startapp.android.publish.banner.banner3d.Banner3DSize$Size -> com.startapp.android.publish.banner.banner3d.Banner3DSize$Size:
    com.startapp.android.publish.banner.banner3d.Banner3DSize$Size XXSMALL -> XXSMALL
    com.startapp.android.publish.banner.banner3d.Banner3DSize$Size XSMALL -> XSMALL
    com.startapp.android.publish.banner.banner3d.Banner3DSize$Size SMALL -> SMALL
    com.startapp.android.publish.banner.banner3d.Banner3DSize$Size MEDIUM -> MEDIUM
    com.startapp.android.publish.banner.banner3d.Banner3DSize$Size LARGE -> LARGE
    com.startapp.android.publish.banner.banner3d.Banner3DSize$Size XLARGE -> XLARGE
    com.startapp.android.publish.banner.a size -> size
    com.startapp.android.publish.banner.a convertedSize -> convertedSize
    com.startapp.android.publish.banner.banner3d.Banner3DSize$Size[] $VALUES -> $VALUES
    com.startapp.android.publish.banner.banner3d.Banner3DSize$Size[] values() -> values
    com.startapp.android.publish.banner.banner3d.Banner3DSize$Size valueOf(java.lang.String) -> valueOf
    com.startapp.android.publish.banner.a getSize() -> getSize
    com.startapp.android.publish.banner.a getConvertedSize(android.content.Context) -> getConvertedSize
com.startapp.android.publish.banner.banner3d.a -> com.startapp.android.publish.banner.banner3d.a:
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    android.widget.ImageView c -> c
    com.startapp.android.publish.f.j d -> d
    android.widget.TextView e -> e
    android.graphics.Point f -> f
    void a() -> a
    void setText(java.lang.String) -> setText
    void setImage(android.graphics.Bitmap) -> setImage
    void a(int,int,int) -> a
    void setRating(float) -> setRating
    void a(android.graphics.Bitmap,int,int) -> a
    void setDescription(java.lang.String) -> setDescription
    java.lang.String[] a(java.lang.String) -> a
    com.startapp.android.publish.banner.banner3d.a$a getTemplateBySize() -> getTemplateBySize
    void setButtonText(boolean) -> setButtonText
com.startapp.android.publish.banner.banner3d.a$1 -> com.startapp.android.publish.banner.banner3d.a$1:
    com.startapp.android.publish.banner.banner3d.a a -> a
    void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint) -> onDraw
com.startapp.android.publish.banner.banner3d.a$2 -> com.startapp.android.publish.banner.banner3d.a$2:
    int[] a -> a
com.startapp.android.publish.banner.banner3d.a$a -> com.startapp.android.publish.banner.banner3d.a$a:
    com.startapp.android.publish.banner.banner3d.a$a a -> a
    com.startapp.android.publish.banner.banner3d.a$a b -> b
    com.startapp.android.publish.banner.banner3d.a$a c -> c
    com.startapp.android.publish.banner.banner3d.a$a d -> d
    com.startapp.android.publish.banner.banner3d.a$a e -> e
    com.startapp.android.publish.banner.banner3d.a$a[] f -> f
    com.startapp.android.publish.banner.banner3d.a$a[] values() -> values
    com.startapp.android.publish.banner.banner3d.a$a valueOf(java.lang.String) -> valueOf
com.startapp.android.publish.banner.bannerstandard.BannerStandard -> com.startapp.android.publish.banner.bannerstandard.BannerStandard:
    java.lang.String TAG -> TAG
    int TIMEOUT_RESTART -> TIMEOUT_RESTART
    int TIMEOUT_SMART_REDIRECT -> TIMEOUT_SMART_REDIRECT
    int ID_WEBVIEW -> ID_WEBVIEW
    com.startapp.android.publish.a.b adHtml -> adHtml
    java.lang.String prevAdId -> prevAdId
    boolean loaded -> loaded
    boolean defaultLoad -> defaultLoad
    boolean visible -> visible
    boolean sentImpression -> sentImpression
    boolean attachedToWindow -> attachedToWindow
    android.webkit.WebView webView -> webView
    com.startapp.android.publish.banner.BannerOptions options -> options
    com.startapp.android.publish.model.AdPreferences adPreferences -> adPreferences
    com.startapp.android.publish.banner.a size -> size
    com.startapp.android.publish.adinformation.a adInformationLayout -> adInformationLayout
    android.widget.RelativeLayout adInformationContatiner -> adInformationContatiner
    java.util.Timer timer -> timer
    com.startapp.android.publish.banner.bannerstandard.BannerStandard$Task task -> task
    void addAdInformationLayout() -> addAdInformationLayout
    void hideBanner() -> hideBanner
    void showBanner() -> showBanner
    void init() -> init
    void reload() -> reload
    void load() -> load
    android.graphics.Point getAvailableSize() -> getAvailableSize
    void onReceiveAd(com.startapp.android.publish.Ad) -> onReceiveAd
    void loadHtml() -> loadHtml
    void makeImpression() -> makeImpression
    boolean setSize(int,int) -> setSize
    void onFailedToReceiveAd(com.startapp.android.publish.Ad) -> onFailedToReceiveAd
    void scheduleReloadTask() -> scheduleReloadTask
    void cancelReloadTask() -> cancelReloadTask
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void access$000(com.startapp.android.publish.banner.bannerstandard.BannerStandard) -> access$000
    com.startapp.android.publish.banner.a access$200(com.startapp.android.publish.banner.bannerstandard.BannerStandard) -> access$200
    android.webkit.WebView access$300(com.startapp.android.publish.banner.bannerstandard.BannerStandard) -> access$300
    boolean access$500(com.startapp.android.publish.banner.bannerstandard.BannerStandard) -> access$500
    boolean access$600(com.startapp.android.publish.banner.bannerstandard.BannerStandard) -> access$600
    com.startapp.android.publish.a.b access$700(com.startapp.android.publish.banner.bannerstandard.BannerStandard) -> access$700
com.startapp.android.publish.banner.bannerstandard.BannerStandard$1 -> com.startapp.android.publish.banner.bannerstandard.BannerStandard$1:
    com.startapp.android.publish.banner.bannerstandard.BannerStandard this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.startapp.android.publish.banner.bannerstandard.BannerStandard$2 -> com.startapp.android.publish.banner.bannerstandard.BannerStandard$2:
    com.startapp.android.publish.banner.bannerstandard.BannerStandard this$0 -> this$0
    void run() -> run
com.startapp.android.publish.banner.bannerstandard.BannerStandard$2$1 -> com.startapp.android.publish.banner.bannerstandard.BannerStandard$2$1:
    com.startapp.android.publish.banner.bannerstandard.BannerStandard$2 this$1 -> this$1
    void run() -> run
com.startapp.android.publish.banner.bannerstandard.BannerStandard$MyWebViewClient -> com.startapp.android.publish.banner.bannerstandard.BannerStandard$MyWebViewClient:
    com.startapp.android.publish.banner.bannerstandard.BannerStandard this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.startapp.android.publish.banner.bannerstandard.BannerStandard$Task -> com.startapp.android.publish.banner.bannerstandard.BannerStandard$Task:
    com.startapp.android.publish.banner.bannerstandard.BannerStandard this$0 -> this$0
    void run() -> run
com.startapp.android.publish.banner.bannerstandard.BannerStandard$Task$1 -> com.startapp.android.publish.banner.bannerstandard.BannerStandard$Task$1:
    com.startapp.android.publish.banner.bannerstandard.BannerStandard$Task this$1 -> this$1
    void run() -> run
com.startapp.android.publish.c -> com.startapp.android.publish.c:
    boolean show() -> show
    boolean load(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> load
    boolean isReady() -> isReady
    com.startapp.android.publish.Ad$AdState getState() -> getState
    java.lang.String getLauncherName() -> getLauncherName
com.startapp.android.publish.c.a -> com.startapp.android.publish.c.a:
    java.util.List a -> a
    android.content.Context b -> b
    java.util.List c -> c
    void a() -> a
    java.lang.Boolean b() -> b
    void c() -> c
    void d() -> d
    java.util.List a(java.util.List,java.lang.String,java.lang.String) -> a
com.startapp.android.publish.c.a$1 -> com.startapp.android.publish.c.a$1:
    com.startapp.android.publish.c.a a -> a
    void run() -> run
com.startapp.android.publish.c.b -> com.startapp.android.publish.c.b:
    java.util.Set g -> g
    java.util.List h -> h
    int i -> i
    boolean j -> j
    android.os.Handler k -> k
    java.lang.Object a() -> a
    boolean a(java.lang.Object) -> a
    java.util.List b(java.lang.String) -> b
    java.lang.Boolean a(java.util.List) -> a
    void a(java.lang.Boolean) -> a
    void a(boolean) -> a
    boolean a(java.lang.String) -> a
    boolean b() -> b
    android.os.Handler a(com.startapp.android.publish.c.b) -> a
com.startapp.android.publish.c.b$1 -> com.startapp.android.publish.c.b$1:
    com.startapp.android.publish.c.b a -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.startapp.android.publish.c.b$1$1 -> com.startapp.android.publish.c.b$1$1:
    com.startapp.android.publish.c.b$1 a -> a
    void run() -> run
com.startapp.android.publish.c.b$1$2 -> com.startapp.android.publish.c.b$1$2:
    android.webkit.WebView a -> a
    java.lang.String b -> b
    com.startapp.android.publish.c.b$1 c -> c
    void run() -> run
com.startapp.android.publish.c.b$2 -> com.startapp.android.publish.c.b$2:
    android.webkit.WebView a -> a
    com.startapp.android.publish.c.b b -> b
    void run() -> run
com.startapp.android.publish.c.c -> com.startapp.android.publish.c.c:
    int g -> g
    java.util.Set h -> h
    java.util.List i -> i
    java.util.ArrayList j -> j
    java.lang.Object a() -> a
    boolean a(java.lang.Object) -> a
    boolean b() -> b
    java.util.List a(java.util.List) -> a
    void f() -> f
    void a(java.lang.Boolean) -> a
    void a(com.startapp.android.publish.Ad) -> a
com.startapp.android.publish.c.d -> com.startapp.android.publish.c.d:
    android.content.Context a -> a
    com.startapp.android.publish.Ad b -> b
    com.startapp.android.publish.model.AdPreferences c -> c
    com.startapp.android.publish.AdEventListener d -> d
    com.startapp.android.publish.model.AdPreferences$Placement e -> e
    java.lang.String f -> f
    void c() -> c
    java.lang.Boolean d() -> d
    void a(java.lang.Boolean) -> a
    boolean a(android.content.Context,java.lang.String,int) -> a
    com.startapp.android.publish.model.GetAdRequest e() -> e
    java.lang.Object a() -> a
    boolean a(java.lang.Object) -> a
com.startapp.android.publish.c.d$1 -> com.startapp.android.publish.c.d$1:
    com.startapp.android.publish.c.d a -> a
    void run() -> run
com.startapp.android.publish.c.d$1$1 -> com.startapp.android.publish.c.d$1$1:
    java.lang.Boolean a -> a
    com.startapp.android.publish.c.d$1 b -> b
    void run() -> run
com.startapp.android.publish.c.e -> com.startapp.android.publish.c.e:
    com.startapp.android.publish.model.GetAdRequest e() -> e
    void a(com.startapp.android.publish.Ad) -> a
com.startapp.android.publish.c.f -> com.startapp.android.publish.c.f:
    int g -> g
    com.startapp.android.publish.model.GetAdRequest e() -> e
    boolean a(java.lang.String) -> a
    void a(java.lang.Boolean) -> a
com.startapp.android.publish.c.g -> com.startapp.android.publish.c.g:
com.startapp.android.publish.c.h -> com.startapp.android.publish.c.h:
    android.content.Context a -> a
    com.startapp.android.publish.model.AdPreferences b -> b
    com.startapp.android.publish.model.MetaData c -> c
    void a() -> a
    java.lang.Boolean b() -> b
    void a(java.lang.Boolean) -> a
com.startapp.android.publish.c.h$1 -> com.startapp.android.publish.c.h$1:
    com.startapp.android.publish.c.h a -> a
    void run() -> run
com.startapp.android.publish.c.h$1$1 -> com.startapp.android.publish.c.h$1$1:
    java.lang.Boolean a -> a
    com.startapp.android.publish.c.h$1 b -> b
    void run() -> run
com.startapp.android.publish.c.i -> com.startapp.android.publish.c.i:
    com.startapp.android.publish.nativead.NativeAdPreferences g -> g
    com.startapp.android.publish.model.GetAdRequest e() -> e
    void a(com.startapp.android.publish.Ad) -> a
com.startapp.android.publish.c.j -> com.startapp.android.publish.c.j:
    com.startapp.android.publish.model.GetAdRequest e() -> e
com.startapp.android.publish.c.k -> com.startapp.android.publish.c.k:
    com.startapp.android.publish.model.GetAdRequest e() -> e
    void a(com.startapp.android.publish.Ad) -> a
com.startapp.android.publish.c.l -> com.startapp.android.publish.c.l:
com.startapp.android.publish.c.m -> com.startapp.android.publish.c.m:
com.startapp.android.publish.c.n -> com.startapp.android.publish.c.n:
    android.app.Activity g -> g
    com.startapp.android.publish.model.BaseResponse b() -> b
    boolean a(java.lang.Object) -> a
    void a(java.lang.Boolean) -> a
    void a(com.startapp.android.publish.Ad) -> a
    java.lang.Object a() -> a
com.startapp.android.publish.c.o -> com.startapp.android.publish.c.o:
com.startapp.android.publish.c.p -> com.startapp.android.publish.c.p:
    void onFinishLoadingMeta() -> onFinishLoadingMeta
    void onFailedLoadingMeta() -> onFailedLoadingMeta
com.startapp.android.publish.d.a -> com.startapp.android.publish.d.a:
    com.startapp.android.publish.d.a.a.c a -> a
    java.lang.String a(java.util.List) -> a
com.startapp.android.publish.d.a.a.a -> com.startapp.android.publish.d.a.a.a:
    double[][] a -> a
    int[] c -> c
    boolean b -> b
    com.startapp.android.publish.d.a.a.a$a a(int,double) -> a
    int a(long) -> a
com.startapp.android.publish.d.a.a.a$a -> com.startapp.android.publish.d.a.a.a$a:
    int a -> a
    int b -> b
    java.lang.String toString() -> toString
com.startapp.android.publish.d.a.a.b -> com.startapp.android.publish.d.a.a.b:
    com.startapp.android.publish.d.a.a.d a -> a
    long e -> e
    java.lang.String f -> f
    com.startapp.android.publish.d.a.a.g b -> b
    boolean c -> c
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    com.startapp.android.publish.d.a.a.g a(long,int) -> a
    com.startapp.android.publish.d.a.a.b a(long,double) -> a
    long[] b(java.nio.ByteBuffer) -> b
    long[] a(java.nio.ByteBuffer,int,long) -> a
    void a(java.nio.ByteBuffer) -> a
com.startapp.android.publish.d.a.a.c -> com.startapp.android.publish.d.a.a.c:
    com.startapp.android.publish.d.a.a.d a -> a
    com.startapp.android.publish.d.a.a.b b -> b
    java.lang.String a(java.util.List) -> a
    java.lang.String a(java.util.List,int,double) -> a
    com.startapp.android.publish.d.a.a.b b(java.util.List,int,double) -> b
    java.lang.String a(com.startapp.android.publish.d.a.a.b) -> a
    long a() -> a
    java.lang.String a(byte[]) -> a
com.startapp.android.publish.d.a.a.d -> com.startapp.android.publish.d.a.a.d:
    void a(com.startapp.android.publish.d.a.a.b,java.io.DataOutput) -> a
com.startapp.android.publish.d.a.a.e -> com.startapp.android.publish.d.a.a.e:
    int d -> d
    int c() -> c
com.startapp.android.publish.d.a.a.f -> com.startapp.android.publish.d.a.a.f:
    long a(java.nio.ByteBuffer,int,int,long) -> a
com.startapp.android.publish.d.a.a.g -> com.startapp.android.publish.d.a.a.g:
    long serialVersionUID -> serialVersionUID
    long[][] bits -> bits
    int wlen -> wlen
    int pageCount -> pageCount
    boolean a -> a
    int a(long) -> a
    long a() -> a
    long b() -> b
    void b(long) -> b
    int c(long) -> c
    void d(long) -> d
    void a(int) -> a
    int c() -> c
    int d() -> d
    int e() -> e
    long[] b(int) -> b
com.startapp.android.publish.e.a -> com.startapp.android.publish.e.a:
    com.startapp.android.publish.model.BaseResponse a(android.content.Context,java.lang.String,com.startapp.android.publish.model.BaseRequest,java.util.Map,java.lang.Class) -> a
    java.lang.String a(android.content.Context,java.lang.String,com.startapp.android.publish.model.BaseRequest,java.util.Map) -> a
    boolean a(android.content.Context,java.lang.String,java.util.Map) -> a
    void a(android.content.Context,java.lang.String,com.startapp.android.publish.model.BaseRequest,java.util.Map,java.lang.StringBuilder) -> a
    java.util.Map a(android.content.Context,java.util.Map) -> a
com.startapp.android.publish.f.a -> com.startapp.android.publish.f.a:
    java.lang.String a(android.content.Context) -> a
    com.startapp.android.publish.f.a$a b(android.content.Context) -> b
com.startapp.android.publish.f.a$1 -> com.startapp.android.publish.f.a$1:
com.startapp.android.publish.f.a$a -> com.startapp.android.publish.f.a$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a() -> a
    boolean b() -> b
com.startapp.android.publish.f.a$b -> com.startapp.android.publish.f.a$b:
    boolean a -> a
    java.util.concurrent.LinkedBlockingQueue b -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder a() -> a
com.startapp.android.publish.f.a$c -> com.startapp.android.publish.f.a$c:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    boolean a(boolean) -> a
com.startapp.android.publish.f.b -> com.startapp.android.publish.f.b:
    java.lang.Object a -> a
    void a(android.app.Activity) -> a
    void b(android.app.Activity) -> b
    int a(int,int) -> a
    boolean a() -> a
    void a(android.view.View,float) -> a
    void a(android.view.View,long) -> a
    void a(android.content.Context,android.view.WindowManager,android.graphics.Point) -> a
    void a(android.view.WindowManager,android.graphics.Point) -> a
    void a(android.view.View,android.view.View) -> a
    boolean a(android.content.Context) -> a
    void a(android.webkit.WebView) -> a
    void a(android.app.Activity,int) -> a
    boolean b() -> b
    java.lang.Object a(android.app.Application) -> a
    void a(android.app.Application,java.lang.Object) -> a
com.startapp.android.publish.f.b$1 -> com.startapp.android.publish.f.b$1:
    android.view.View a -> a
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
com.startapp.android.publish.f.b$2 -> com.startapp.android.publish.f.b$2:
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
com.startapp.android.publish.f.c -> com.startapp.android.publish.f.c:
    java.util.Map a -> a
    android.graphics.Bitmap a(android.content.Context,java.lang.String,boolean) -> a
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
com.startapp.android.publish.f.d -> com.startapp.android.publish.f.d:
    java.lang.String a -> a
    com.startapp.android.publish.f.d$a b -> b
    int c -> c
    void a() -> a
    java.lang.String a(com.startapp.android.publish.f.d) -> a
    com.startapp.android.publish.f.d$a b(com.startapp.android.publish.f.d) -> b
    int c(com.startapp.android.publish.f.d) -> c
com.startapp.android.publish.f.d$1 -> com.startapp.android.publish.f.d$1:
    com.startapp.android.publish.f.d a -> a
    void run() -> run
com.startapp.android.publish.f.d$1$1 -> com.startapp.android.publish.f.d$1$1:
    android.graphics.Bitmap a -> a
    com.startapp.android.publish.f.d$1 b -> b
    void run() -> run
com.startapp.android.publish.f.d$a -> com.startapp.android.publish.f.d$a:
    void a(android.graphics.Bitmap,int) -> a
com.startapp.android.publish.f.e -> com.startapp.android.publish.f.e:
    android.graphics.Bitmap a(java.lang.String) -> a
com.startapp.android.publish.f.e$a -> com.startapp.android.publish.f.e$a:
    long skip(long) -> skip
com.startapp.android.publish.f.f -> com.startapp.android.publish.f.f:
    android.content.SharedPreferences a -> a
    android.content.SharedPreferences a(android.content.Context) -> a
    java.lang.Boolean a(android.content.Context,java.lang.String,java.lang.Boolean) -> a
    void b(android.content.Context,java.lang.String,java.lang.Boolean) -> b
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
com.startapp.android.publish.f.g -> com.startapp.android.publish.f.g:
    void a(int,java.lang.String) -> a
    void a(java.lang.String,int,java.lang.String) -> a
    void a(int,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String,int,java.lang.String,java.lang.Throwable) -> a
com.startapp.android.publish.f.h -> com.startapp.android.publish.f.h:
    com.startapp.android.publish.f.h a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    android.telephony.PhoneStateListener d -> d
    void a(android.content.Context) -> a
    com.startapp.android.publish.f.h a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(com.startapp.android.publish.f.h,java.lang.String) -> a
com.startapp.android.publish.f.h$1 -> com.startapp.android.publish.f.h$1:
    com.startapp.android.publish.f.h a -> a
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.startapp.android.publish.f.i -> com.startapp.android.publish.f.i:
    boolean a(android.content.Context,java.lang.String,java.util.Map,java.lang.StringBuilder) -> a
    java.net.HttpURLConnection a(android.content.Context,java.lang.String,byte[],java.util.Map) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.startapp.android.publish.f.j -> com.startapp.android.publish.f.j:
    void setRating(float) -> setRating
    void a(java.lang.String) -> a
com.startapp.android.publish.f.k -> com.startapp.android.publish.f.k:
    boolean a -> a
    android.graphics.Typeface a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,boolean) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
    void c(android.content.Context,java.lang.String) -> c
com.startapp.android.publish.f.l -> com.startapp.android.publish.f.l:
    long serialVersionUID -> serialVersionUID
    boolean retry -> retry
    boolean a() -> a
com.startapp.android.publish.f.m -> com.startapp.android.publish.f.m:
    boolean a -> a
    java.lang.String a(android.content.Context) -> a
    java.util.List b(android.content.Context) -> b
    java.util.List c(android.content.Context) -> c
    boolean a(android.content.pm.PackageInfo) -> a
    java.util.List a(java.util.List) -> a
com.startapp.android.publish.f.m$1 -> com.startapp.android.publish.f.m$1:
    int a(android.content.pm.PackageInfo,android.content.pm.PackageInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.startapp.android.publish.f.n -> com.startapp.android.publish.f.n:
    int a(android.content.Context,int) -> a
    int b(android.content.Context,int) -> b
    void a(android.widget.TextView,java.util.Set) -> a
com.startapp.android.publish.f.o -> com.startapp.android.publish.f.o:
    java.util.Map a -> a
    java.util.concurrent.ThreadPoolExecutor b -> b
    android.app.ProgressDialog c -> c
    boolean d -> d
    java.lang.String a() -> a
    java.lang.String e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    boolean i() -> i
    boolean a(java.lang.String) -> a
    int b() -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.util.List,java.lang.String,java.lang.Object,boolean) -> a
    void a(java.util.List,java.lang.String,java.util.Set,boolean) -> a
    void a(android.app.Activity,int,boolean) -> a
    void a(android.app.Activity,boolean) -> a
    void b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,java.lang.String[]) -> a
    void a(android.content.Context,java.lang.String,int) -> a
    void a(android.content.Context,java.lang.String,int,java.lang.Runnable) -> a
    void b(android.content.Context) -> b
    void g(android.content.Context) -> g
    void c(android.content.Context,java.lang.String) -> c
    void a(android.content.Context,com.startapp.android.publish.model.AdPreferences) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    void a(android.webkit.WebView,java.lang.String) -> a
    void c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
    int a(android.content.Context,int) -> a
    java.util.Properties j() -> j
    java.lang.String e(android.content.Context) -> e
    void a(android.content.Context,android.content.Intent) -> a
    void f(android.content.Context) -> f
com.startapp.android.publish.f.o$1 -> com.startapp.android.publish.f.o$1:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.startapp.android.publish.f.o$2 -> com.startapp.android.publish.f.o$2:
    android.webkit.WebView a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.startapp.android.publish.f.o$a -> com.startapp.android.publish.f.o$a:
    java.lang.String a -> a
    boolean b -> b
    boolean c -> c
    int d -> d
    android.app.ProgressDialog e -> e
    java.lang.Runnable f -> f
    boolean g -> g
    android.content.Context h -> h
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void a() -> a
    int a(com.startapp.android.publish.f.o$a) -> a
    boolean b(com.startapp.android.publish.f.o$a) -> b
    boolean a(com.startapp.android.publish.f.o$a,boolean) -> a
    android.content.Context c(com.startapp.android.publish.f.o$a) -> c
    java.lang.String d(com.startapp.android.publish.f.o$a) -> d
    java.lang.Runnable e(com.startapp.android.publish.f.o$a) -> e
com.startapp.android.publish.f.o$a$1 -> com.startapp.android.publish.f.o$a$1:
    com.startapp.android.publish.f.o$a a -> a
    void run() -> run
com.startapp.android.publish.gson.DefaultDateTypeAdapter -> com.startapp.android.publish.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.startapp.android.publish.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.startapp.android.publish.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.startapp.android.publish.gson.JsonElement,java.lang.reflect.Type,com.startapp.android.publish.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.startapp.android.publish.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.startapp.android.publish.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.startapp.android.publish.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.startapp.android.publish.gson.JsonElement,java.lang.reflect.Type,com.startapp.android.publish.gson.JsonDeserializationContext) -> deserialize
com.startapp.android.publish.gson.ExclusionStrategy -> com.startapp.android.publish.gson.ExclusionStrategy:
    boolean shouldSkipField(com.startapp.android.publish.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.startapp.android.publish.gson.FieldAttributes -> com.startapp.android.publish.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.startapp.android.publish.gson.FieldNamingPolicy -> com.startapp.android.publish.gson.FieldNamingPolicy:
    com.startapp.android.publish.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.startapp.android.publish.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.startapp.android.publish.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.startapp.android.publish.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.startapp.android.publish.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.startapp.android.publish.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.startapp.android.publish.gson.FieldNamingPolicy[] values() -> values
    com.startapp.android.publish.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.startapp.android.publish.gson.FieldNamingPolicy$1 -> com.startapp.android.publish.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.startapp.android.publish.gson.FieldNamingPolicy$2 -> com.startapp.android.publish.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.startapp.android.publish.gson.FieldNamingPolicy$3 -> com.startapp.android.publish.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.startapp.android.publish.gson.FieldNamingPolicy$4 -> com.startapp.android.publish.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.startapp.android.publish.gson.FieldNamingPolicy$5 -> com.startapp.android.publish.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.startapp.android.publish.gson.FieldNamingStrategy -> com.startapp.android.publish.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.startapp.android.publish.gson.Gson -> com.startapp.android.publish.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.startapp.android.publish.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.startapp.android.publish.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.startapp.android.publish.gson.JsonSerializationContext serializationContext -> serializationContext
    com.startapp.android.publish.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.startapp.android.publish.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.startapp.android.publish.gson.TypeAdapter longAdapter(com.startapp.android.publish.gson.LongSerializationPolicy) -> longAdapter
    com.startapp.android.publish.gson.TypeAdapter getAdapter(com.startapp.android.publish.gson.reflect.TypeToken) -> getAdapter
    com.startapp.android.publish.gson.TypeAdapter getDelegateAdapter(com.startapp.android.publish.gson.TypeAdapterFactory,com.startapp.android.publish.gson.reflect.TypeToken) -> getDelegateAdapter
    com.startapp.android.publish.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.startapp.android.publish.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.startapp.android.publish.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.startapp.android.publish.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.startapp.android.publish.gson.JsonElement) -> toJson
    void toJson(com.startapp.android.publish.gson.JsonElement,java.lang.Appendable) -> toJson
    com.startapp.android.publish.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.startapp.android.publish.gson.JsonElement,com.startapp.android.publish.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.startapp.android.publish.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.startapp.android.publish.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.startapp.android.publish.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.startapp.android.publish.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.startapp.android.publish.gson.Gson,double) -> access$000
com.startapp.android.publish.gson.Gson$1 -> com.startapp.android.publish.gson.Gson$1:
    com.startapp.android.publish.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.startapp.android.publish.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.startapp.android.publish.gson.Gson$2 -> com.startapp.android.publish.gson.Gson$2:
    com.startapp.android.publish.gson.Gson this$0 -> this$0
    com.startapp.android.publish.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.startapp.android.publish.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.startapp.android.publish.gson.Gson$3 -> com.startapp.android.publish.gson.Gson$3:
    com.startapp.android.publish.gson.Gson this$0 -> this$0
    java.lang.Double read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.Gson$4 -> com.startapp.android.publish.gson.Gson$4:
    com.startapp.android.publish.gson.Gson this$0 -> this$0
    java.lang.Float read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.Gson$5 -> com.startapp.android.publish.gson.Gson$5:
    com.startapp.android.publish.gson.Gson this$0 -> this$0
    java.lang.Number read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.Gson$FutureTypeAdapter -> com.startapp.android.publish.gson.Gson$FutureTypeAdapter:
    com.startapp.android.publish.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.startapp.android.publish.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.GsonBuilder -> com.startapp.android.publish.gson.GsonBuilder:
    com.startapp.android.publish.gson.internal.Excluder excluder -> excluder
    com.startapp.android.publish.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.startapp.android.publish.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.startapp.android.publish.gson.GsonBuilder setVersion(double) -> setVersion
    com.startapp.android.publish.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.startapp.android.publish.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.startapp.android.publish.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.startapp.android.publish.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.startapp.android.publish.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.startapp.android.publish.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.startapp.android.publish.gson.GsonBuilder setLongSerializationPolicy(com.startapp.android.publish.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.startapp.android.publish.gson.GsonBuilder setFieldNamingPolicy(com.startapp.android.publish.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.startapp.android.publish.gson.GsonBuilder setFieldNamingStrategy(com.startapp.android.publish.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.startapp.android.publish.gson.GsonBuilder setExclusionStrategies(com.startapp.android.publish.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.startapp.android.publish.gson.GsonBuilder addSerializationExclusionStrategy(com.startapp.android.publish.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.startapp.android.publish.gson.GsonBuilder addDeserializationExclusionStrategy(com.startapp.android.publish.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.startapp.android.publish.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.startapp.android.publish.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.startapp.android.publish.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.startapp.android.publish.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.startapp.android.publish.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.startapp.android.publish.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.startapp.android.publish.gson.GsonBuilder registerTypeAdapterFactory(com.startapp.android.publish.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.startapp.android.publish.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.startapp.android.publish.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.startapp.android.publish.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.startapp.android.publish.gson.InstanceCreator -> com.startapp.android.publish.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.startapp.android.publish.gson.JsonArray -> com.startapp.android.publish.gson.JsonArray:
    java.util.List elements -> elements
    com.startapp.android.publish.gson.JsonArray deepCopy() -> deepCopy
    void add(com.startapp.android.publish.gson.JsonElement) -> add
    void addAll(com.startapp.android.publish.gson.JsonArray) -> addAll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.startapp.android.publish.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.startapp.android.publish.gson.JsonElement deepCopy() -> deepCopy
com.startapp.android.publish.gson.JsonDeserializationContext -> com.startapp.android.publish.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.startapp.android.publish.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.startapp.android.publish.gson.JsonDeserializer -> com.startapp.android.publish.gson.JsonDeserializer:
    java.lang.Object deserialize(com.startapp.android.publish.gson.JsonElement,java.lang.reflect.Type,com.startapp.android.publish.gson.JsonDeserializationContext) -> deserialize
com.startapp.android.publish.gson.JsonElement -> com.startapp.android.publish.gson.JsonElement:
    com.startapp.android.publish.gson.JsonElement deepCopy() -> deepCopy
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.startapp.android.publish.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.startapp.android.publish.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.startapp.android.publish.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.startapp.android.publish.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.startapp.android.publish.gson.JsonIOException -> com.startapp.android.publish.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.startapp.android.publish.gson.JsonNull -> com.startapp.android.publish.gson.JsonNull:
    com.startapp.android.publish.gson.JsonNull INSTANCE -> INSTANCE
    com.startapp.android.publish.gson.JsonNull deepCopy() -> deepCopy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.startapp.android.publish.gson.JsonElement deepCopy() -> deepCopy
com.startapp.android.publish.gson.JsonObject -> com.startapp.android.publish.gson.JsonObject:
    com.startapp.android.publish.gson.internal.LinkedTreeMap members -> members
    com.startapp.android.publish.gson.JsonObject deepCopy() -> deepCopy
    void add(java.lang.String,com.startapp.android.publish.gson.JsonElement) -> add
    com.startapp.android.publish.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.startapp.android.publish.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.startapp.android.publish.gson.JsonElement get(java.lang.String) -> get
    com.startapp.android.publish.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.startapp.android.publish.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.startapp.android.publish.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.startapp.android.publish.gson.JsonElement deepCopy() -> deepCopy
com.startapp.android.publish.gson.JsonParseException -> com.startapp.android.publish.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.startapp.android.publish.gson.JsonParser -> com.startapp.android.publish.gson.JsonParser:
    com.startapp.android.publish.gson.JsonElement parse(java.lang.String) -> parse
    com.startapp.android.publish.gson.JsonElement parse(java.io.Reader) -> parse
    com.startapp.android.publish.gson.JsonElement parse(com.startapp.android.publish.gson.stream.JsonReader) -> parse
com.startapp.android.publish.gson.JsonPrimitive -> com.startapp.android.publish.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    com.startapp.android.publish.gson.JsonPrimitive deepCopy() -> deepCopy
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.startapp.android.publish.gson.JsonPrimitive) -> isIntegral
    com.startapp.android.publish.gson.JsonElement deepCopy() -> deepCopy
com.startapp.android.publish.gson.JsonSerializationContext -> com.startapp.android.publish.gson.JsonSerializationContext:
    com.startapp.android.publish.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.startapp.android.publish.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.startapp.android.publish.gson.JsonSerializer -> com.startapp.android.publish.gson.JsonSerializer:
    com.startapp.android.publish.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.startapp.android.publish.gson.JsonSerializationContext) -> serialize
com.startapp.android.publish.gson.JsonStreamParser -> com.startapp.android.publish.gson.JsonStreamParser:
    com.startapp.android.publish.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.startapp.android.publish.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.startapp.android.publish.gson.JsonSyntaxException -> com.startapp.android.publish.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.startapp.android.publish.gson.LongSerializationPolicy -> com.startapp.android.publish.gson.LongSerializationPolicy:
    com.startapp.android.publish.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.startapp.android.publish.gson.LongSerializationPolicy STRING -> STRING
    com.startapp.android.publish.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.startapp.android.publish.gson.LongSerializationPolicy[] values() -> values
    com.startapp.android.publish.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.startapp.android.publish.gson.JsonElement serialize(java.lang.Long) -> serialize
com.startapp.android.publish.gson.LongSerializationPolicy$1 -> com.startapp.android.publish.gson.LongSerializationPolicy$1:
    com.startapp.android.publish.gson.JsonElement serialize(java.lang.Long) -> serialize
com.startapp.android.publish.gson.LongSerializationPolicy$2 -> com.startapp.android.publish.gson.LongSerializationPolicy$2:
    com.startapp.android.publish.gson.JsonElement serialize(java.lang.Long) -> serialize
com.startapp.android.publish.gson.TreeTypeAdapter -> com.startapp.android.publish.gson.TreeTypeAdapter:
    com.startapp.android.publish.gson.JsonSerializer serializer -> serializer
    com.startapp.android.publish.gson.JsonDeserializer deserializer -> deserializer
    com.startapp.android.publish.gson.Gson gson -> gson
    com.startapp.android.publish.gson.reflect.TypeToken typeToken -> typeToken
    com.startapp.android.publish.gson.TypeAdapterFactory skipPast -> skipPast
    com.startapp.android.publish.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
    com.startapp.android.publish.gson.TypeAdapter delegate() -> delegate
    com.startapp.android.publish.gson.TypeAdapterFactory newFactory(com.startapp.android.publish.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.startapp.android.publish.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.startapp.android.publish.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.startapp.android.publish.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.startapp.android.publish.gson.TreeTypeAdapter$1 -> com.startapp.android.publish.gson.TreeTypeAdapter$1:
com.startapp.android.publish.gson.TreeTypeAdapter$SingleTypeFactory -> com.startapp.android.publish.gson.TreeTypeAdapter$SingleTypeFactory:
    com.startapp.android.publish.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.startapp.android.publish.gson.JsonSerializer serializer -> serializer
    com.startapp.android.publish.gson.JsonDeserializer deserializer -> deserializer
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.TypeAdapter -> com.startapp.android.publish.gson.TypeAdapter:
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.startapp.android.publish.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.startapp.android.publish.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.startapp.android.publish.gson.JsonElement) -> fromJsonTree
com.startapp.android.publish.gson.TypeAdapter$1 -> com.startapp.android.publish.gson.TypeAdapter$1:
    com.startapp.android.publish.gson.TypeAdapter this$0 -> this$0
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
com.startapp.android.publish.gson.TypeAdapterFactory -> com.startapp.android.publish.gson.TypeAdapterFactory:
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.annotations.Expose -> com.startapp.android.publish.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.startapp.android.publish.gson.annotations.SerializedName -> com.startapp.android.publish.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.startapp.android.publish.gson.annotations.Since -> com.startapp.android.publish.gson.annotations.Since:
    double value() -> value
com.startapp.android.publish.gson.annotations.Until -> com.startapp.android.publish.gson.annotations.Until:
    double value() -> value
com.startapp.android.publish.gson.internal.$Gson$Preconditions -> com.startapp.android.publish.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.startapp.android.publish.gson.internal.$Gson$Types -> com.startapp.android.publish.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.startapp.android.publish.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.startapp.android.publish.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.startapp.android.publish.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.startapp.android.publish.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.startapp.android.publish.gson.internal.$Gson$Types$WildcardTypeImpl -> com.startapp.android.publish.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.startapp.android.publish.gson.internal.ConstructorConstructor -> com.startapp.android.publish.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.startapp.android.publish.gson.internal.ObjectConstructor get(com.startapp.android.publish.gson.reflect.TypeToken) -> get
    com.startapp.android.publish.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.startapp.android.publish.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.startapp.android.publish.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.startapp.android.publish.gson.internal.ConstructorConstructor$1 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$1:
    com.startapp.android.publish.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$10 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$10:
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$11 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$11:
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$12 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$12:
    com.startapp.android.publish.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$2 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$2:
    com.startapp.android.publish.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$3 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$4 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$4:
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$5 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$6 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$6:
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$7 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$7:
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$8 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$8:
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.ConstructorConstructor$9 -> com.startapp.android.publish.gson.internal.ConstructorConstructor$9:
    com.startapp.android.publish.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.Excluder -> com.startapp.android.publish.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.startapp.android.publish.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.startapp.android.publish.gson.internal.Excluder clone() -> clone
    com.startapp.android.publish.gson.internal.Excluder withVersion(double) -> withVersion
    com.startapp.android.publish.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.startapp.android.publish.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.startapp.android.publish.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.startapp.android.publish.gson.internal.Excluder withExclusionStrategy(com.startapp.android.publish.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.startapp.android.publish.gson.annotations.Since,com.startapp.android.publish.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.startapp.android.publish.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.startapp.android.publish.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.startapp.android.publish.gson.internal.Excluder$1 -> com.startapp.android.publish.gson.internal.Excluder$1:
    com.startapp.android.publish.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.startapp.android.publish.gson.Gson val$gson -> val$gson
    com.startapp.android.publish.gson.reflect.TypeToken val$type -> val$type
    com.startapp.android.publish.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
    com.startapp.android.publish.gson.TypeAdapter delegate() -> delegate
com.startapp.android.publish.gson.internal.JsonReaderInternalAccess -> com.startapp.android.publish.gson.internal.JsonReaderInternalAccess:
    com.startapp.android.publish.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.startapp.android.publish.gson.stream.JsonReader) -> promoteNameToValue
com.startapp.android.publish.gson.internal.LazilyParsedNumber -> com.startapp.android.publish.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.startapp.android.publish.gson.internal.LinkedTreeMap -> com.startapp.android.publish.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node header -> header
    com.startapp.android.publish.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.startapp.android.publish.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void removeInternal(com.startapp.android.publish.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.startapp.android.publish.gson.internal.LinkedTreeMap$Node,com.startapp.android.publish.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    void rebalance(com.startapp.android.publish.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.startapp.android.publish.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    void rotateRight(com.startapp.android.publish.gson.internal.LinkedTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.startapp.android.publish.gson.internal.LinkedTreeMap$1 -> com.startapp.android.publish.gson.internal.LinkedTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.startapp.android.publish.gson.internal.LinkedTreeMap$EntrySet -> com.startapp.android.publish.gson.internal.LinkedTreeMap$EntrySet:
    com.startapp.android.publish.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.startapp.android.publish.gson.internal.LinkedTreeMap$EntrySet$1 -> com.startapp.android.publish.gson.internal.LinkedTreeMap$EntrySet$1:
    com.startapp.android.publish.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.startapp.android.publish.gson.internal.LinkedTreeMap$KeySet -> com.startapp.android.publish.gson.internal.LinkedTreeMap$KeySet:
    com.startapp.android.publish.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.startapp.android.publish.gson.internal.LinkedTreeMap$KeySet$1 -> com.startapp.android.publish.gson.internal.LinkedTreeMap$KeySet$1:
    com.startapp.android.publish.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.startapp.android.publish.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.startapp.android.publish.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node next -> next
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.startapp.android.publish.gson.internal.LinkedTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.startapp.android.publish.gson.internal.LinkedTreeMap$Node -> com.startapp.android.publish.gson.internal.LinkedTreeMap$Node:
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node parent -> parent
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node left -> left
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node right -> right
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node next -> next
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node first() -> first
    com.startapp.android.publish.gson.internal.LinkedTreeMap$Node last() -> last
com.startapp.android.publish.gson.internal.ObjectConstructor -> com.startapp.android.publish.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.startapp.android.publish.gson.internal.Primitives -> com.startapp.android.publish.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.startapp.android.publish.gson.internal.Streams -> com.startapp.android.publish.gson.internal.Streams:
    com.startapp.android.publish.gson.JsonElement parse(com.startapp.android.publish.gson.stream.JsonReader) -> parse
    void write(com.startapp.android.publish.gson.JsonElement,com.startapp.android.publish.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.startapp.android.publish.gson.internal.Streams$1 -> com.startapp.android.publish.gson.internal.Streams$1:
com.startapp.android.publish.gson.internal.Streams$AppendableWriter -> com.startapp.android.publish.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.startapp.android.publish.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.startapp.android.publish.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.startapp.android.publish.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.startapp.android.publish.gson.internal.UnsafeAllocator -> com.startapp.android.publish.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.startapp.android.publish.gson.internal.UnsafeAllocator create() -> create
com.startapp.android.publish.gson.internal.UnsafeAllocator$1 -> com.startapp.android.publish.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.startapp.android.publish.gson.internal.UnsafeAllocator$2 -> com.startapp.android.publish.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.startapp.android.publish.gson.internal.UnsafeAllocator$3 -> com.startapp.android.publish.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.startapp.android.publish.gson.internal.UnsafeAllocator$4 -> com.startapp.android.publish.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.startapp.android.publish.gson.internal.bind.ArrayTypeAdapter -> com.startapp.android.publish.gson.internal.bind.ArrayTypeAdapter:
    com.startapp.android.publish.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.startapp.android.publish.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.ArrayTypeAdapter$1 -> com.startapp.android.publish.gson.internal.bind.ArrayTypeAdapter$1:
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.internal.bind.CollectionTypeAdapterFactory -> com.startapp.android.publish.gson.internal.bind.CollectionTypeAdapterFactory:
    com.startapp.android.publish.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.startapp.android.publish.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.startapp.android.publish.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.startapp.android.publish.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Collection read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.DateTypeAdapter -> com.startapp.android.publish.gson.internal.bind.DateTypeAdapter:
    com.startapp.android.publish.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.DateTypeAdapter$1 -> com.startapp.android.publish.gson.internal.bind.DateTypeAdapter$1:
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.internal.bind.JsonTreeReader -> com.startapp.android.publish.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.startapp.android.publish.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.startapp.android.publish.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.startapp.android.publish.gson.internal.bind.JsonTreeReader$1 -> com.startapp.android.publish.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.startapp.android.publish.gson.internal.bind.JsonTreeWriter -> com.startapp.android.publish.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.startapp.android.publish.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.startapp.android.publish.gson.JsonElement product -> product
    com.startapp.android.publish.gson.JsonElement get() -> get
    com.startapp.android.publish.gson.JsonElement peek() -> peek
    void put(com.startapp.android.publish.gson.JsonElement) -> put
    com.startapp.android.publish.gson.stream.JsonWriter beginArray() -> beginArray
    com.startapp.android.publish.gson.stream.JsonWriter endArray() -> endArray
    com.startapp.android.publish.gson.stream.JsonWriter beginObject() -> beginObject
    com.startapp.android.publish.gson.stream.JsonWriter endObject() -> endObject
    com.startapp.android.publish.gson.stream.JsonWriter name(java.lang.String) -> name
    com.startapp.android.publish.gson.stream.JsonWriter value(java.lang.String) -> value
    com.startapp.android.publish.gson.stream.JsonWriter nullValue() -> nullValue
    com.startapp.android.publish.gson.stream.JsonWriter value(boolean) -> value
    com.startapp.android.publish.gson.stream.JsonWriter value(double) -> value
    com.startapp.android.publish.gson.stream.JsonWriter value(long) -> value
    com.startapp.android.publish.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.startapp.android.publish.gson.internal.bind.JsonTreeWriter$1 -> com.startapp.android.publish.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.startapp.android.publish.gson.internal.bind.MapTypeAdapterFactory -> com.startapp.android.publish.gson.internal.bind.MapTypeAdapterFactory:
    com.startapp.android.publish.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
    com.startapp.android.publish.gson.TypeAdapter getKeyAdapter(com.startapp.android.publish.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.startapp.android.publish.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.startapp.android.publish.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.startapp.android.publish.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.startapp.android.publish.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.startapp.android.publish.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.startapp.android.publish.gson.internal.ObjectConstructor constructor -> constructor
    com.startapp.android.publish.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.startapp.android.publish.gson.JsonElement) -> keyToString
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.ObjectTypeAdapter -> com.startapp.android.publish.gson.internal.bind.ObjectTypeAdapter:
    com.startapp.android.publish.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.startapp.android.publish.gson.Gson gson -> gson
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.ObjectTypeAdapter$1 -> com.startapp.android.publish.gson.internal.bind.ObjectTypeAdapter$1:
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.internal.bind.ObjectTypeAdapter$2 -> com.startapp.android.publish.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$startapp$android$publish$gson$stream$JsonToken -> $SwitchMap$com$startapp$android$publish$gson$stream$JsonToken
com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.startapp.android.publish.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.startapp.android.publish.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.startapp.android.publish.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
    com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.startapp.android.publish.gson.Gson,java.lang.reflect.Field,java.lang.String,com.startapp.android.publish.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    java.util.Map getBoundFields(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.startapp.android.publish.gson.TypeAdapter typeAdapter -> typeAdapter
    com.startapp.android.publish.gson.Gson val$context -> val$context
    com.startapp.android.publish.gson.reflect.TypeToken val$fieldType -> val$fieldType
    java.lang.reflect.Field val$field -> val$field
    boolean val$isPrimitive -> val$isPrimitive
    com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.startapp.android.publish.gson.stream.JsonReader,java.lang.Object) -> read
com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.startapp.android.publish.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.startapp.android.publish.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.startapp.android.publish.gson.stream.JsonReader,java.lang.Object) -> read
com.startapp.android.publish.gson.internal.bind.SqlDateTypeAdapter -> com.startapp.android.publish.gson.internal.bind.SqlDateTypeAdapter:
    com.startapp.android.publish.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.SqlDateTypeAdapter$1 -> com.startapp.android.publish.gson.internal.bind.SqlDateTypeAdapter$1:
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.internal.bind.TimeTypeAdapter -> com.startapp.android.publish.gson.internal.bind.TimeTypeAdapter:
    com.startapp.android.publish.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TimeTypeAdapter$1 -> com.startapp.android.publish.gson.internal.bind.TimeTypeAdapter$1:
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.startapp.android.publish.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.startapp.android.publish.gson.Gson context -> context
    com.startapp.android.publish.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.startapp.android.publish.gson.internal.bind.TypeAdapters -> com.startapp.android.publish.gson.internal.bind.TypeAdapters:
    com.startapp.android.publish.gson.TypeAdapter CLASS -> CLASS
    com.startapp.android.publish.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.startapp.android.publish.gson.TypeAdapter BIT_SET -> BIT_SET
    com.startapp.android.publish.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.startapp.android.publish.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.startapp.android.publish.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.startapp.android.publish.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.startapp.android.publish.gson.TypeAdapter BYTE -> BYTE
    com.startapp.android.publish.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.startapp.android.publish.gson.TypeAdapter SHORT -> SHORT
    com.startapp.android.publish.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.startapp.android.publish.gson.TypeAdapter INTEGER -> INTEGER
    com.startapp.android.publish.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.startapp.android.publish.gson.TypeAdapter LONG -> LONG
    com.startapp.android.publish.gson.TypeAdapter FLOAT -> FLOAT
    com.startapp.android.publish.gson.TypeAdapter DOUBLE -> DOUBLE
    com.startapp.android.publish.gson.TypeAdapter NUMBER -> NUMBER
    com.startapp.android.publish.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.startapp.android.publish.gson.TypeAdapter CHARACTER -> CHARACTER
    com.startapp.android.publish.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.startapp.android.publish.gson.TypeAdapter STRING -> STRING
    com.startapp.android.publish.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.startapp.android.publish.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.startapp.android.publish.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.startapp.android.publish.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.startapp.android.publish.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.startapp.android.publish.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.startapp.android.publish.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.startapp.android.publish.gson.TypeAdapter URL -> URL
    com.startapp.android.publish.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.startapp.android.publish.gson.TypeAdapter URI -> URI
    com.startapp.android.publish.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.startapp.android.publish.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.startapp.android.publish.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.startapp.android.publish.gson.TypeAdapter UUID -> UUID
    com.startapp.android.publish.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.startapp.android.publish.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.startapp.android.publish.gson.TypeAdapter CALENDAR -> CALENDAR
    com.startapp.android.publish.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.startapp.android.publish.gson.TypeAdapter LOCALE -> LOCALE
    com.startapp.android.publish.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.startapp.android.publish.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.startapp.android.publish.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.startapp.android.publish.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.startapp.android.publish.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.startapp.android.publish.gson.TypeAdapterFactory newFactory(com.startapp.android.publish.gson.reflect.TypeToken,com.startapp.android.publish.gson.TypeAdapter) -> newFactory
    com.startapp.android.publish.gson.TypeAdapterFactory newFactory(java.lang.Class,com.startapp.android.publish.gson.TypeAdapter) -> newFactory
    com.startapp.android.publish.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.startapp.android.publish.gson.TypeAdapter) -> newFactory
    com.startapp.android.publish.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.startapp.android.publish.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.startapp.android.publish.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.startapp.android.publish.gson.TypeAdapter) -> newTypeHierarchyFactory
com.startapp.android.publish.gson.internal.bind.TypeAdapters$1 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$1:
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$10 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$11 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$12 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$13 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$14 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$15 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$16 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$17 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$18 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$19 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$2 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$20 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$21 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$22 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$22:
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.internal.bind.TypeAdapters$22$1 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$22$1:
    com.startapp.android.publish.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.startapp.android.publish.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$23 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$24 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$25 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$25:
    com.startapp.android.publish.gson.JsonElement read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,com.startapp.android.publish.gson.JsonElement) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$26 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$26:
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.internal.bind.TypeAdapters$27 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$27:
    com.startapp.android.publish.gson.reflect.TypeToken val$type -> val$type
    com.startapp.android.publish.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
com.startapp.android.publish.gson.internal.bind.TypeAdapters$28 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.startapp.android.publish.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.startapp.android.publish.gson.internal.bind.TypeAdapters$29 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.startapp.android.publish.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.startapp.android.publish.gson.internal.bind.TypeAdapters$3 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$30 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.startapp.android.publish.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.startapp.android.publish.gson.internal.bind.TypeAdapters$31 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.startapp.android.publish.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.startapp.android.publish.gson.TypeAdapter create(com.startapp.android.publish.gson.Gson,com.startapp.android.publish.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.startapp.android.publish.gson.internal.bind.TypeAdapters$32 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$startapp$android$publish$gson$stream$JsonToken -> $SwitchMap$com$startapp$android$publish$gson$stream$JsonToken
com.startapp.android.publish.gson.internal.bind.TypeAdapters$4 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$5 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$6 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$7 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$8 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$9 -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.startapp.android.publish.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.startapp.android.publish.gson.stream.JsonReader) -> read
    void write(com.startapp.android.publish.gson.stream.JsonWriter,java.lang.Object) -> write
com.startapp.android.publish.gson.reflect.TypeToken -> com.startapp.android.publish.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.startapp.android.publish.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.startapp.android.publish.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.startapp.android.publish.gson.reflect.TypeToken get(java.lang.Class) -> get
com.startapp.android.publish.gson.stream.JsonReader -> com.startapp.android.publish.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.startapp.android.publish.gson.stream.JsonToken peek() -> peek
    int doPeek() -> doPeek
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    boolean isLiteral(char) -> isLiteral
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    void skipQuotedValue(char) -> skipQuotedValue
    void skipUnquotedValue() -> skipUnquotedValue
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(int) -> push
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int access$000(com.startapp.android.publish.gson.stream.JsonReader) -> access$000
    int access$100(com.startapp.android.publish.gson.stream.JsonReader) -> access$100
    int access$002(com.startapp.android.publish.gson.stream.JsonReader,int) -> access$002
    int access$200(com.startapp.android.publish.gson.stream.JsonReader) -> access$200
    int access$300(com.startapp.android.publish.gson.stream.JsonReader) -> access$300
com.startapp.android.publish.gson.stream.JsonReader$1 -> com.startapp.android.publish.gson.stream.JsonReader$1:
    void promoteNameToValue(com.startapp.android.publish.gson.stream.JsonReader) -> promoteNameToValue
com.startapp.android.publish.gson.stream.JsonScope -> com.startapp.android.publish.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
com.startapp.android.publish.gson.stream.JsonToken -> com.startapp.android.publish.gson.stream.JsonToken:
    com.startapp.android.publish.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.startapp.android.publish.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.startapp.android.publish.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.startapp.android.publish.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.startapp.android.publish.gson.stream.JsonToken NAME -> NAME
    com.startapp.android.publish.gson.stream.JsonToken STRING -> STRING
    com.startapp.android.publish.gson.stream.JsonToken NUMBER -> NUMBER
    com.startapp.android.publish.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.startapp.android.publish.gson.stream.JsonToken NULL -> NULL
    com.startapp.android.publish.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.startapp.android.publish.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.startapp.android.publish.gson.stream.JsonToken[] values() -> values
    com.startapp.android.publish.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.startapp.android.publish.gson.stream.JsonWriter -> com.startapp.android.publish.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.startapp.android.publish.gson.stream.JsonWriter beginArray() -> beginArray
    com.startapp.android.publish.gson.stream.JsonWriter endArray() -> endArray
    com.startapp.android.publish.gson.stream.JsonWriter beginObject() -> beginObject
    com.startapp.android.publish.gson.stream.JsonWriter endObject() -> endObject
    com.startapp.android.publish.gson.stream.JsonWriter open(int,java.lang.String) -> open
    com.startapp.android.publish.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void push(int) -> push
    int peek() -> peek
    void replaceTop(int) -> replaceTop
    com.startapp.android.publish.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.startapp.android.publish.gson.stream.JsonWriter value(java.lang.String) -> value
    com.startapp.android.publish.gson.stream.JsonWriter nullValue() -> nullValue
    com.startapp.android.publish.gson.stream.JsonWriter value(boolean) -> value
    com.startapp.android.publish.gson.stream.JsonWriter value(double) -> value
    com.startapp.android.publish.gson.stream.JsonWriter value(long) -> value
    com.startapp.android.publish.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.startapp.android.publish.gson.stream.MalformedJsonException -> com.startapp.android.publish.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.startapp.android.publish.list3d.Dynamics -> com.startapp.android.publish.list3d.Dynamics:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    long e -> e
    void a(float,float,long) -> a
    float a() -> a
    float b() -> b
    boolean a(float,float) -> a
    void a(float) -> a
    void b(float) -> b
    void a(long) -> a
    float c() -> c
    void a(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void a(double) -> a
    java.lang.String toString() -> toString
com.startapp.android.publish.list3d.List3DActivity -> com.startapp.android.publish.list3d.List3DActivity:
    com.startapp.android.publish.list3d.c a -> a
    android.app.ProgressDialog b -> b
    android.webkit.WebView c -> c
    java.util.List d -> d
    int e -> e
    android.content.BroadcastReceiver f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void a(int) -> a
    void finish() -> finish
    java.util.List a(com.startapp.android.publish.list3d.List3DActivity) -> a
com.startapp.android.publish.list3d.List3DActivity$1 -> com.startapp.android.publish.list3d.List3DActivity$1:
    com.startapp.android.publish.list3d.List3DActivity a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.startapp.android.publish.list3d.List3DActivity$2 -> com.startapp.android.publish.list3d.List3DActivity$2:
    com.startapp.android.publish.list3d.List3DActivity a -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
com.startapp.android.publish.list3d.List3DActivity$3 -> com.startapp.android.publish.list3d.List3DActivity$3:
    com.startapp.android.publish.list3d.List3DActivity a -> a
    void onClick(android.view.View) -> onClick
com.startapp.android.publish.list3d.List3DActivity$4 -> com.startapp.android.publish.list3d.List3DActivity$4:
    com.startapp.android.publish.list3d.List3DActivity a -> a
    void run() -> run
com.startapp.android.publish.list3d.ListItem -> com.startapp.android.publish.list3d.ListItem:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    float g -> g
    boolean h -> h
    android.graphics.drawable.Drawable i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    android.graphics.drawable.Drawable g() -> g
    float h() -> h
    boolean i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    boolean m() -> m
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.startapp.android.publish.list3d.ListItem$1 -> com.startapp.android.publish.list3d.ListItem$1:
    com.startapp.android.publish.list3d.ListItem a(android.os.Parcel) -> a
    com.startapp.android.publish.list3d.ListItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.startapp.android.publish.list3d.SimpleDynamics -> com.startapp.android.publish.list3d.SimpleDynamics:
    float f -> f
    float g -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void a(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void a(double) -> a
    java.lang.String toString() -> toString
com.startapp.android.publish.list3d.SimpleDynamics$1 -> com.startapp.android.publish.list3d.SimpleDynamics$1:
    com.startapp.android.publish.list3d.SimpleDynamics a(android.os.Parcel) -> a
    com.startapp.android.publish.list3d.SimpleDynamics[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.startapp.android.publish.list3d.a -> com.startapp.android.publish.list3d.a:
    java.util.HashSet a -> a
    java.util.Hashtable b -> b
    java.util.Set c -> c
    com.startapp.android.publish.list3d.f d -> d
    int e -> e
    java.util.concurrent.ConcurrentLinkedQueue f -> f
    void a(com.startapp.android.publish.list3d.f,boolean) -> a
    void a() -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    android.graphics.Bitmap a(int,java.lang.String,java.lang.String) -> a
    void b() -> b
com.startapp.android.publish.list3d.a$a -> com.startapp.android.publish.list3d.a$a:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.startapp.android.publish.list3d.a d -> d
    android.graphics.Bitmap a(java.lang.Void[]) -> a
    void a(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.startapp.android.publish.list3d.a$b -> com.startapp.android.publish.list3d.a$b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.startapp.android.publish.list3d.a d -> d
com.startapp.android.publish.list3d.b -> com.startapp.android.publish.list3d.b:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.startapp.android.publish.list3d.c -> com.startapp.android.publish.list3d.c:
    java.lang.String b -> b
    android.widget.Adapter c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    android.view.VelocityTracker m -> m
    com.startapp.android.publish.list3d.Dynamics n -> n
    java.lang.Runnable o -> o
    java.util.LinkedList p -> p
    java.lang.Runnable q -> q
    android.graphics.Rect r -> r
    android.graphics.Camera s -> s
    android.graphics.Matrix t -> t
    android.graphics.Paint u -> u
    int v -> v
    float w -> w
    boolean x -> x
    boolean y -> y
    boolean z -> z
    boolean A -> A
    boolean B -> B
    android.content.BroadcastReceiver a -> a
    void setTag(java.lang.String) -> setTag
    void a() -> a
    void setHint(boolean) -> setHint
    boolean b() -> b
    boolean c() -> c
    void setFade(boolean) -> setFade
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void setSelection(int) -> setSelection
    android.view.View getSelectedView() -> getSelectedView
    boolean d() -> d
    void setDynamics(com.startapp.android.publish.list3d.Dynamics) -> setDynamics
    void e() -> e
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void a(android.graphics.Canvas,android.graphics.Bitmap,int,int,int,int,float,float) -> a
    android.graphics.LightingColorFilter a(float) -> a
    void a(android.view.MotionEvent) -> a
    void b(float) -> b
    void a(float,boolean) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(int) -> a
    void f() -> f
    void g() -> g
    boolean b(android.view.MotionEvent) -> b
    int a(int,int) -> a
    void b(int,int) -> b
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void c(int,int) -> c
    void d(int,int) -> d
    void a(android.view.View,int) -> a
    void h() -> h
    android.view.View getCachedView() -> getCachedView
    int a(android.view.View) -> a
    int b(android.view.View) -> b
    int c(android.view.View) -> c
    int d(android.view.View) -> d
    int getFirstItemPosition() -> getFirstItemPosition
    int getLastItemPosition() -> getLastItemPosition
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    java.lang.String a(com.startapp.android.publish.list3d.c) -> a
    int a(com.startapp.android.publish.list3d.c,int) -> a
    int b(com.startapp.android.publish.list3d.c) -> b
    int b(com.startapp.android.publish.list3d.c,int) -> b
    int c(com.startapp.android.publish.list3d.c) -> c
    int c(com.startapp.android.publish.list3d.c,int) -> c
    int d(com.startapp.android.publish.list3d.c) -> d
    int d(com.startapp.android.publish.list3d.c,int) -> d
    int e(com.startapp.android.publish.list3d.c) -> e
    int e(com.startapp.android.publish.list3d.c,int) -> e
    int f(com.startapp.android.publish.list3d.c) -> f
    int g(com.startapp.android.publish.list3d.c) -> g
    int f(com.startapp.android.publish.list3d.c,int) -> f
    int h(com.startapp.android.publish.list3d.c) -> h
    int i(com.startapp.android.publish.list3d.c) -> i
    int g(com.startapp.android.publish.list3d.c,int) -> g
    int j(com.startapp.android.publish.list3d.c) -> j
    int h(com.startapp.android.publish.list3d.c,int) -> h
    int k(com.startapp.android.publish.list3d.c) -> k
    int i(com.startapp.android.publish.list3d.c,int) -> i
    int l(com.startapp.android.publish.list3d.c) -> l
    com.startapp.android.publish.list3d.Dynamics a(com.startapp.android.publish.list3d.c,com.startapp.android.publish.list3d.Dynamics) -> a
    float a(com.startapp.android.publish.list3d.c,float) -> a
    float m(com.startapp.android.publish.list3d.c) -> m
    com.startapp.android.publish.list3d.Dynamics n(com.startapp.android.publish.list3d.c) -> n
    boolean a(com.startapp.android.publish.list3d.c,boolean) -> a
    boolean b(com.startapp.android.publish.list3d.c,boolean) -> b
    void a(com.startapp.android.publish.list3d.c,float,boolean) -> a
    int a(com.startapp.android.publish.list3d.c,android.view.View) -> a
    void j(com.startapp.android.publish.list3d.c,int) -> j
    int a(com.startapp.android.publish.list3d.c,int,int) -> a
    void k(com.startapp.android.publish.list3d.c,int) -> k
com.startapp.android.publish.list3d.c$1 -> com.startapp.android.publish.list3d.c$1:
    com.startapp.android.publish.list3d.c a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.startapp.android.publish.list3d.c$2 -> com.startapp.android.publish.list3d.c$2:
    com.startapp.android.publish.list3d.c a -> a
    void run() -> run
com.startapp.android.publish.list3d.c$3 -> com.startapp.android.publish.list3d.c$3:
    com.startapp.android.publish.list3d.c a -> a
    void run() -> run
com.startapp.android.publish.list3d.c$4 -> com.startapp.android.publish.list3d.c$4:
    com.startapp.android.publish.list3d.c a -> a
    void run() -> run
com.startapp.android.publish.list3d.d -> com.startapp.android.publish.list3d.d:
    android.widget.RelativeLayout a -> a
    android.widget.ImageView b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    android.widget.TextView e -> e
    com.startapp.android.publish.f.j f -> f
    com.startapp.android.publish.model.MetaDataStyle g -> g
    android.widget.RelativeLayout a() -> a
    android.widget.ImageView b() -> b
    android.widget.TextView c() -> c
    android.widget.TextView d() -> d
    com.startapp.android.publish.f.j e() -> e
    void a(boolean) -> a
    void a(com.startapp.android.publish.model.MetaDataStyle) -> a
com.startapp.android.publish.list3d.d$1 -> com.startapp.android.publish.list3d.d$1:
    com.startapp.android.publish.list3d.d a -> a
    void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint) -> onDraw
com.startapp.android.publish.list3d.e -> com.startapp.android.publish.list3d.e:
    com.startapp.android.publish.list3d.e a -> a
    com.startapp.android.publish.list3d.a imagesManager -> imagesManager
    java.util.List listItems -> listItems
    java.lang.String queryPosition -> queryPosition
    com.startapp.android.publish.list3d.e[] b -> b
    com.startapp.android.publish.list3d.e[] values() -> values
    com.startapp.android.publish.list3d.e valueOf(java.lang.String) -> valueOf
    void a() -> a
    void a(com.startapp.android.publish.model.AdDetails) -> a
    java.util.List b() -> b
    android.graphics.Bitmap a(int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(com.startapp.android.publish.list3d.f,boolean) -> a
    void a(java.lang.String) -> a
com.startapp.android.publish.list3d.f -> com.startapp.android.publish.list3d.f:
    void a(int) -> a
com.startapp.android.publish.model.AdDetails -> com.startapp.android.publish.model.AdDetails:
    long serialVersionUID -> serialVersionUID
    java.lang.String adId -> adId
    java.lang.String clickUrl -> clickUrl
    java.lang.String trackingUrl -> trackingUrl
    java.lang.String title -> title
    java.lang.String description -> description
    java.lang.String imageUrl -> imageUrl
    float rating -> rating
    boolean smartRedirect -> smartRedirect
    java.lang.String template -> template
    java.lang.String packageName -> packageName
    java.lang.String appPresencePackage -> appPresencePackage
    java.lang.String intentDetails -> intentDetails
    java.lang.String intentPackageName -> intentPackageName
    int minAppVersion -> minAppVersion
    java.lang.String installs -> installs
    java.lang.String category -> category
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getAdId() -> getAdId
    java.lang.String getClickUrl() -> getClickUrl
    java.lang.String getTrackingUrl() -> getTrackingUrl
    java.lang.String getTitle() -> getTitle
    java.lang.String getDescription() -> getDescription
    java.lang.String getImageUrl() -> getImageUrl
    float getRating() -> getRating
    boolean isSmartRedirect() -> isSmartRedirect
    java.lang.String getTemplate() -> getTemplate
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppPresencePackage() -> getAppPresencePackage
    java.lang.String getIntentDetails() -> getIntentDetails
    java.lang.String getIntentPackageName() -> getIntentPackageName
    boolean isCPE() -> isCPE
    java.lang.String getInstalls() -> getInstalls
    java.lang.String getCategory() -> getCategory
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getMinAppVersion() -> getMinAppVersion
    void setMinAppVersion(int) -> setMinAppVersion
com.startapp.android.publish.model.AdDetails$1 -> com.startapp.android.publish.model.AdDetails$1:
    com.startapp.android.publish.model.AdDetails createFromParcel(android.os.Parcel) -> createFromParcel
    com.startapp.android.publish.model.AdDetails[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.startapp.android.publish.model.AdPreferences -> com.startapp.android.publish.model.AdPreferences:
    long serialVersionUID -> serialVersionUID
    java.lang.String country -> country
    java.lang.String advertiserId -> advertiserId
    java.lang.String template -> template
    java.lang.String type -> type
    java.lang.String TYPE_APP_WALL -> TYPE_APP_WALL
    java.lang.String TYPE_BANNER -> TYPE_BANNER
    java.lang.String TYPE_INAPP_EXIT -> TYPE_INAPP_EXIT
    java.lang.String TYPE_SCRINGO_TOOLBAR -> TYPE_SCRINGO_TOOLBAR
    java.lang.String TYPE_TEXT -> TYPE_TEXT
    java.lang.String publisherId -> publisherId
    java.lang.String productId -> productId
    boolean testMode -> testMode
    java.lang.Double longitude -> longitude
    java.lang.Double latitude -> latitude
    java.lang.String keywords -> keywords
    java.lang.String adTag -> adTag
    com.startapp.android.publish.SDKAdPreferences$Gender gender -> gender
    java.lang.Integer age -> age
    java.util.Set categories -> categories
    java.util.Set categoriesExclude -> categoriesExclude
    java.lang.String getPublisherId() -> getPublisherId
    com.startapp.android.publish.model.AdPreferences setPublisherId(java.lang.String) -> setPublisherId
    java.lang.String getProductId() -> getProductId
    com.startapp.android.publish.model.AdPreferences setProductId(java.lang.String) -> setProductId
    boolean isTestMode() -> isTestMode
    com.startapp.android.publish.model.AdPreferences setTestMode(boolean) -> setTestMode
    java.lang.Double getLongitude() -> getLongitude
    com.startapp.android.publish.model.AdPreferences setLongitude(double) -> setLongitude
    java.lang.Double getLatitude() -> getLatitude
    com.startapp.android.publish.model.AdPreferences setLatitude(double) -> setLatitude
    java.lang.String getKeywords() -> getKeywords
    com.startapp.android.publish.model.AdPreferences setKeywords(java.lang.String) -> setKeywords
    java.lang.String getAdTag() -> getAdTag
    com.startapp.android.publish.model.AdPreferences setAdTag(java.lang.String) -> setAdTag
    com.startapp.android.publish.SDKAdPreferences$Gender getGender(android.content.Context) -> getGender
    com.startapp.android.publish.model.AdPreferences setGender(com.startapp.android.publish.SDKAdPreferences$Gender) -> setGender
    java.lang.Integer getAge(android.content.Context) -> getAge
    com.startapp.android.publish.model.AdPreferences setAge(java.lang.Integer) -> setAge
    java.util.Set getCategories() -> getCategories
    com.startapp.android.publish.model.AdPreferences addCategory(java.lang.String) -> addCategory
    java.util.Set getCategoriesExclude() -> getCategoriesExclude
    com.startapp.android.publish.model.AdPreferences addCategoryExclude(java.lang.String) -> addCategoryExclude
    boolean isSimpleToken() -> isSimpleToken
    java.lang.String toString() -> toString
com.startapp.android.publish.model.AdPreferences$Placement -> com.startapp.android.publish.model.AdPreferences$Placement:
    com.startapp.android.publish.model.AdPreferences$Placement INAPP_FULL_SCREEN -> INAPP_FULL_SCREEN
    com.startapp.android.publish.model.AdPreferences$Placement INAPP_BANNER -> INAPP_BANNER
    com.startapp.android.publish.model.AdPreferences$Placement INAPP_OFFER_WALL -> INAPP_OFFER_WALL
    com.startapp.android.publish.model.AdPreferences$Placement INAPP_SPLASH -> INAPP_SPLASH
    com.startapp.android.publish.model.AdPreferences$Placement INAPP_OVERLAY -> INAPP_OVERLAY
    com.startapp.android.publish.model.AdPreferences$Placement INAPP_NATIVE -> INAPP_NATIVE
    com.startapp.android.publish.model.AdPreferences$Placement DEVICE_SIDEBAR -> DEVICE_SIDEBAR
    com.startapp.android.publish.model.AdPreferences$Placement INAPP_RETURN -> INAPP_RETURN
    int index -> index
    com.startapp.android.publish.model.AdPreferences$Placement[] $VALUES -> $VALUES
    com.startapp.android.publish.model.AdPreferences$Placement[] values() -> values
    com.startapp.android.publish.model.AdPreferences$Placement valueOf(java.lang.String) -> valueOf
    int getIndex() -> getIndex
    boolean isInterstitial() -> isInterstitial
    com.startapp.android.publish.model.AdPreferences$Placement getByIndex(int) -> getByIndex
com.startapp.android.publish.model.BaseRequest -> com.startapp.android.publish.model.BaseRequest:
    java.lang.String OS -> OS
    java.util.Map parameters -> parameters
    java.lang.String publisherId -> publisherId
    java.lang.String productId -> productId
    java.lang.String sdkVersion -> sdkVersion
    java.lang.String userAdvertisingId -> userAdvertisingId
    java.lang.String packageId -> packageId
    java.lang.String model -> model
    java.lang.String manufacturer -> manufacturer
    java.lang.String deviceVersion -> deviceVersion
    java.lang.String locale -> locale
    java.lang.Boolean unknownSourcesAllowed -> unknownSourcesAllowed
    java.lang.String networkType -> networkType
    java.lang.String signalLevel -> signalLevel
    java.lang.String isp -> isp
    java.lang.String ispName -> ispName
    java.lang.String subPublisherId -> subPublisherId
    java.lang.String subProductId -> subProductId
    java.lang.String os -> os
    int width -> width
    int height -> height
    int sdkId -> sdkId
    java.util.Map getParameters() -> getParameters
    void setParameters(java.util.Map) -> setParameters
    java.lang.String getPublisherId() -> getPublisherId
    void setPublisherId(java.lang.String) -> setPublisherId
    java.lang.String getPackageId() -> getPackageId
    void setPackageId(java.lang.String) -> setPackageId
    java.lang.String getProductId() -> getProductId
    void setProductId(java.lang.String) -> setProductId
    java.lang.String getNetworkType() -> getNetworkType
    java.lang.String getSignalLevel() -> getSignalLevel
    void setNetworkType(android.content.Context) -> setNetworkType
    void setSignalLevel(java.lang.String) -> setSignalLevel
    java.lang.String getUserAdvertisingId() -> getUserAdvertisingId
    void setUserAdvertisingId(java.lang.String) -> setUserAdvertisingId
    java.lang.String getIsp() -> getIsp
    void setIsp(java.lang.String) -> setIsp
    java.lang.String getIspName() -> getIspName
    void setIspName(java.lang.String) -> setIspName
    java.lang.String getModel() -> getModel
    void setModel(java.lang.String) -> setModel
    java.lang.String getManufacturer() -> getManufacturer
    void setManufacturer(java.lang.String) -> setManufacturer
    java.lang.String getDeviceVersion() -> getDeviceVersion
    void setDeviceVersion(java.lang.String) -> setDeviceVersion
    java.lang.String getLocale() -> getLocale
    void setLocale(java.lang.String) -> setLocale
    java.lang.String getSubPublisherId() -> getSubPublisherId
    void setSubPublisherId(java.lang.String) -> setSubPublisherId
    java.lang.String getSubProductId() -> getSubProductId
    void setSubProductId(java.lang.String) -> setSubProductId
    java.lang.String getOs() -> getOs
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    java.lang.String getSdkVersion() -> getSdkVersion
    void setSdkVersion(java.lang.String) -> setSdkVersion
    java.lang.Boolean isUnknownSourcesAllowed() -> isUnknownSourcesAllowed
    void setUnknownSourcesAllowed(java.lang.Boolean) -> setUnknownSourcesAllowed
    java.lang.String toString() -> toString
    void fillApplicationDetails(android.content.Context,com.startapp.android.publish.model.AdPreferences) -> fillApplicationDetails
    java.util.List getNameValueMap() -> getNameValueMap
    java.lang.String getRequestString() -> getRequestString
com.startapp.android.publish.model.BaseResponse -> com.startapp.android.publish.model.BaseResponse:
    long serialVersionUID -> serialVersionUID
    java.util.Map parameters -> parameters
    boolean validResponse -> validResponse
    java.lang.String errorMessage -> errorMessage
    java.util.Map getParameters() -> getParameters
    boolean isValidResponse() -> isValidResponse
    void setValidResponse(boolean) -> setValidResponse
    void setParameters(java.util.Map) -> setParameters
    java.lang.String getErrorMessage() -> getErrorMessage
    void setErrorMessage(java.lang.String) -> setErrorMessage
    java.lang.String toString() -> toString
com.startapp.android.publish.model.GetAdRequest -> com.startapp.android.publish.model.GetAdRequest:
    com.startapp.android.publish.model.AdPreferences$Placement placement -> placement
    boolean testMode -> testMode
    java.lang.Double longitude -> longitude
    java.lang.Double latitude -> latitude
    com.startapp.android.publish.SDKAdPreferences$Gender gender -> gender
    java.lang.Integer age -> age
    java.lang.String keywords -> keywords
    java.lang.String adTag -> adTag
    java.lang.String template -> template
    int adsNumber -> adsNumber
    int offset -> offset
    java.util.Set categories -> categories
    java.util.Set categoriesExclude -> categoriesExclude
    java.util.Set packagesExclude -> packagesExclude
    java.lang.String simpleToken -> simpleToken
    boolean engInclude -> engInclude
    java.lang.String country -> country
    java.lang.String advertiserId -> advertiserId
    java.lang.String type -> type
    com.startapp.android.publish.model.AdPreferences$Placement getPlacement() -> getPlacement
    void setPlacement(com.startapp.android.publish.model.AdPreferences$Placement) -> setPlacement
    boolean isTestMode() -> isTestMode
    void setTestMode(boolean) -> setTestMode
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    com.startapp.android.publish.SDKAdPreferences$Gender getGender() -> getGender
    void setGender(com.startapp.android.publish.SDKAdPreferences$Gender) -> setGender
    int getAge() -> getAge
    void setAge(int) -> setAge
    java.lang.String getKeywords() -> getKeywords
    void setKeywords(java.lang.String) -> setKeywords
    java.lang.String getAdTag() -> getAdTag
    void setAdTag(java.lang.String) -> setAdTag
    java.lang.String getTemplate() -> getTemplate
    void setTemplate(java.lang.String) -> setTemplate
    int getAdsNumber() -> getAdsNumber
    void setAdsNumber(int) -> setAdsNumber
    java.util.Set getCategories() -> getCategories
    void setCategories(java.util.Set) -> setCategories
    void addCategory(java.lang.String) -> addCategory
    java.util.Set getCategoriesExclude() -> getCategoriesExclude
    void setCategoriesExclude(java.util.Set) -> setCategoriesExclude
    void addCategoryExclude(java.lang.String) -> addCategoryExclude
    java.util.Set getPackagesExclude() -> getPackagesExclude
    void setPackagesExclude(java.util.Set) -> setPackagesExclude
    int getOffset() -> getOffset
    void setOffset(int) -> setOffset
    java.lang.String getSimpleToken() -> getSimpleToken
    void setSimpleToken(java.lang.String) -> setSimpleToken
    boolean isEngInclude() -> isEngInclude
    void setEngInclude(boolean) -> setEngInclude
    java.lang.String toString() -> toString
    void fillAdPreferences(android.content.Context,com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.model.AdPreferences$Placement,java.lang.String) -> fillAdPreferences
    java.util.List getNameValueMap() -> getNameValueMap
    void setCountry(java.lang.String) -> setCountry
    void setAdvertiser(java.lang.String) -> setAdvertiser
    java.lang.String getCountry() -> getCountry
    java.lang.String getAdvertiserId() -> getAdvertiserId
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
com.startapp.android.publish.model.GetAdResponse -> com.startapp.android.publish.model.GetAdResponse:
    long serialVersionUID -> serialVersionUID
    java.lang.String publisherId -> publisherId
    java.lang.String productId -> productId
    com.startapp.android.publish.adinformation.b adInfoOverrides -> adInfoOverrides
    java.util.List adsDetails -> adsDetails
    java.lang.String getPublisherId() -> getPublisherId
    void setPublisherId(java.lang.String) -> setPublisherId
    java.lang.String getProductId() -> getProductId
    void setProductId(java.lang.String) -> setProductId
    java.util.List getAdsDetails() -> getAdsDetails
    void setAdsDetails(java.util.List) -> setAdsDetails
    com.startapp.android.publish.adinformation.b getAdInfoOverride() -> getAdInfoOverride
    java.lang.String toString() -> toString
com.startapp.android.publish.model.MetaData -> com.startapp.android.publish.model.MetaData:
    long serialVersionUID -> serialVersionUID
    com.startapp.android.publish.model.MetaData instance -> instance
    java.lang.Object lock -> lock
    java.lang.String KEY_METADATA -> KEY_METADATA
    java.lang.String TEXT_DECORATION_BOLD -> TEXT_DECORATION_BOLD
    java.lang.String TEXT_DECORATION_ITALIC -> TEXT_DECORATION_ITALIC
    java.lang.String TEXT_DECORATION_UNDERLINE -> TEXT_DECORATION_UNDERLINE
    int DEFAULT_PROBABILITY_3D -> DEFAULT_PROBABILITY_3D
    int DEFAULT_HTML_3D_PROBABILITY_3D -> DEFAULT_HTML_3D_PROBABILITY_3D
    int DEFAULT_FULLSCREEN_OVERLAY_PROBABILITY -> DEFAULT_FULLSCREEN_OVERLAY_PROBABILITY
    int DEFAULT_HOME_PROBABILITY_3D -> DEFAULT_HOME_PROBABILITY_3D
    int DEFAULT_BG_TOP -> DEFAULT_BG_TOP
    int DEFAULT_BG_BOTTOM -> DEFAULT_BG_BOTTOM
    int DEFAULT_MAX_ADS -> DEFAULT_MAX_ADS
    int DEFAULT_TITLE_BG -> DEFAULT_TITLE_BG
    java.lang.String DEFAULT_TITLE_CONTENT -> DEFAULT_TITLE_CONTENT
    java.lang.Integer DEFAULT_TITLE_TEXT_SIZE -> DEFAULT_TITLE_TEXT_SIZE
    java.lang.Integer DEFAULT_TITLE_TEXT_COLOR -> DEFAULT_TITLE_TEXT_COLOR
    java.util.Set DEFAULT_TITLE_TEXT_DECORATION -> DEFAULT_TITLE_TEXT_DECORATION
    java.lang.Integer DEFAULT_TITLE_LINE_COLOR -> DEFAULT_TITLE_LINE_COLOR
    java.lang.Integer DEFAULT_POWERED_BY_BG -> DEFAULT_POWERED_BY_BG
    java.lang.Integer DEFAULT_POWERED_BY_TEXT_COLOR -> DEFAULT_POWERED_BY_TEXT_COLOR
    java.lang.String DEFAULT_AD_CLICK_URL -> DEFAULT_AD_CLICK_URL
    long DEFAULT_METADATA_TTL -> DEFAULT_METADATA_TTL
    long DEFAULT_RETURN_AD_MIN_BACKGROUND_TIME -> DEFAULT_RETURN_AD_MIN_BACKGROUND_TIME
    long DEFAULT_AD_CACHE_TTL -> DEFAULT_AD_CACHE_TTL
    boolean DEFAULT_DISABLE_RETURN_AD -> DEFAULT_DISABLE_RETURN_AD
    java.lang.Integer probability3D -> probability3D
    java.lang.Integer homeProbability3D -> homeProbability3D
    java.lang.Integer fullpageOfferWallProbability -> fullpageOfferWallProbability
    java.lang.Integer fullpageOverlayProbability -> fullpageOverlayProbability
    java.lang.Integer backgroundGradientTop -> backgroundGradientTop
    java.lang.Integer backgroundGradientBottom -> backgroundGradientBottom
    java.lang.Integer maxAds -> maxAds
    java.lang.Integer titleBackgroundColor -> titleBackgroundColor
    java.lang.String titleContent -> titleContent
    java.lang.Integer titleTextSize -> titleTextSize
    java.lang.Integer titleTextColor -> titleTextColor
    java.util.Set titleTextDecoration -> titleTextDecoration
    java.lang.Integer titleLineColor -> titleLineColor
    java.lang.Integer itemGradientTop -> itemGradientTop
    java.lang.Integer itemGradientBottom -> itemGradientBottom
    java.lang.Integer itemTitleTextSize -> itemTitleTextSize
    java.lang.Integer itemTitleTextColor -> itemTitleTextColor
    java.util.Set itemTitleTextDecoration -> itemTitleTextDecoration
    java.lang.Integer itemDescriptionTextSize -> itemDescriptionTextSize
    java.lang.Integer itemDescriptionTextColor -> itemDescriptionTextColor
    java.util.Set itemDescriptionTextDecoration -> itemDescriptionTextDecoration
    com.startapp.android.publish.banner.BannerOptions BannerOptions -> BannerOptions
    java.util.HashMap templates -> templates
    java.lang.Integer poweredByBackgroundColor -> poweredByBackgroundColor
    java.lang.Integer poweredByTextColor -> poweredByTextColor
    com.startapp.android.publish.splash.SplashConfig SplashConfig -> SplashConfig
    com.startapp.android.publish.adinformation.AdInformationConfig AdInformation -> AdInformation
    java.lang.String adClickURL -> adClickURL
    java.lang.Long metaDataTTL -> metaDataTTL
    java.lang.String version -> version
    long returnAdMinBackgroundTime -> returnAdMinBackgroundTime
    long adCacheTTL -> adCacheTTL
    boolean disableReturnAd -> disableReturnAd
    long lastUpdate -> lastUpdate
    boolean loading -> loading
    java.util.List metaDataListeners -> metaDataListeners
    void init(android.content.Context) -> init
    void update(android.content.Context,com.startapp.android.publish.model.MetaData) -> update
    void failedLoading() -> failedLoading
    void loadFromServer(android.content.Context,com.startapp.android.publish.model.AdPreferences,boolean,com.startapp.android.publish.c.p) -> loadFromServer
    void addMetaDataListener(com.startapp.android.publish.c.p) -> addMetaDataListener
    java.lang.Object getLock() -> getLock
    boolean isReady() -> isReady
    boolean isLoading() -> isLoading
    int getHtml3DProbability() -> getHtml3DProbability
    int getFullscreenOverlayProbability() -> getFullscreenOverlayProbability
    int getProbability3D() -> getProbability3D
    int getHomeProbability3D() -> getHomeProbability3D
    int getBackgroundGradientTop() -> getBackgroundGradientTop
    com.startapp.android.publish.splash.SplashConfig getSplashConfig() -> getSplashConfig
    com.startapp.android.publish.model.MetaDataStyle getTemplate(java.lang.String) -> getTemplate
    com.startapp.android.publish.banner.BannerOptions getBannerOptions() -> getBannerOptions
    int getBackgroundGradientBottom() -> getBackgroundGradientBottom
    int getMaxAds() -> getMaxAds
    java.lang.Integer getTitleBackgroundColor() -> getTitleBackgroundColor
    java.lang.String getTitleContent() -> getTitleContent
    java.lang.Integer getTitleTextSize() -> getTitleTextSize
    java.lang.Integer getTitleTextColor() -> getTitleTextColor
    java.util.Set getTitleTextDecoration() -> getTitleTextDecoration
    java.lang.Integer getTitleLineColor() -> getTitleLineColor
    int getItemGradientTop() -> getItemGradientTop
    int getItemGradientBottom() -> getItemGradientBottom
    java.lang.Integer getItemTitleTextSize() -> getItemTitleTextSize
    java.lang.Integer getItemTitleTextColor() -> getItemTitleTextColor
    java.util.Set getItemTitleTextDecoration() -> getItemTitleTextDecoration
    java.lang.Integer getItemDescriptionTextSize() -> getItemDescriptionTextSize
    java.lang.Integer getItemDescriptionTextColor() -> getItemDescriptionTextColor
    java.util.Set getItemDescriptionTextDecoration() -> getItemDescriptionTextDecoration
    java.lang.Integer getPoweredByBackgroundColor() -> getPoweredByBackgroundColor
    java.lang.Integer getPoweredByTextColor() -> getPoweredByTextColor
    com.startapp.android.publish.adinformation.AdInformationConfig getAdInformationConfig() -> getAdInformationConfig
    java.lang.String getAdClickUrl() -> getAdClickUrl
    void setVersion(java.lang.String) -> setVersion
    long getReturnAdMinBackgroundTime() -> getReturnAdMinBackgroundTime
    long getAdCacheTtl() -> getAdCacheTtl
    boolean isDisableReturnAd() -> isDisableReturnAd
    com.startapp.android.publish.model.MetaData getInstance() -> getInstance
com.startapp.android.publish.model.MetaDataRequest -> com.startapp.android.publish.model.MetaDataRequest:
com.startapp.android.publish.model.MetaDataStyle -> com.startapp.android.publish.model.MetaDataStyle:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_ITEM_TOP -> DEFAULT_ITEM_TOP
    int DEFAULT_ITEM_BOTTOM -> DEFAULT_ITEM_BOTTOM
    java.lang.Integer DEFAULT_ITEM_TITLE_TEXT_SIZE -> DEFAULT_ITEM_TITLE_TEXT_SIZE
    java.lang.Integer DEFAULT_ITEM_TITLE_TEXT_COLOR -> DEFAULT_ITEM_TITLE_TEXT_COLOR
    java.util.Set DEFAULT_ITEM_TITLE_TEXT_DECORATION -> DEFAULT_ITEM_TITLE_TEXT_DECORATION
    java.lang.Integer DEFAULT_ITEM_DESC_TEXT_SIZE -> DEFAULT_ITEM_DESC_TEXT_SIZE
    java.lang.Integer DEFAULT_ITEM_DESC_TEXT_COLOR -> DEFAULT_ITEM_DESC_TEXT_COLOR
    java.util.Set DEFAULT_ITEM_DESC_TEXT_DECORATION -> DEFAULT_ITEM_DESC_TEXT_DECORATION
    java.lang.String name -> name
    java.lang.Integer itemGradientTop -> itemGradientTop
    java.lang.Integer itemGradientBottom -> itemGradientBottom
    java.lang.Integer itemTitleTextSize -> itemTitleTextSize
    java.lang.Integer itemTitleTextColor -> itemTitleTextColor
    java.util.Set itemTitleTextDecoration -> itemTitleTextDecoration
    java.lang.Integer itemDescriptionTextSize -> itemDescriptionTextSize
    java.lang.Integer itemDescriptionTextColor -> itemDescriptionTextColor
    java.util.Set itemDescriptionTextDecoration -> itemDescriptionTextDecoration
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.Integer getItemGradientTop() -> getItemGradientTop
    java.lang.Integer getItemGradientBottom() -> getItemGradientBottom
    java.lang.Integer getItemTitleTextSize() -> getItemTitleTextSize
    java.lang.Integer getItemTitleTextColor() -> getItemTitleTextColor
    java.util.Set getItemTitleTextDecoration() -> getItemTitleTextDecoration
    java.lang.Integer getItemDescriptionTextSize() -> getItemDescriptionTextSize
    java.lang.Integer getItemDescriptionTextColor() -> getItemDescriptionTextColor
    java.util.Set getItemDescriptionTextDecoration() -> getItemDescriptionTextDecoration
    void setItemGradientTop(java.lang.Integer) -> setItemGradientTop
    void setItemGradientBottom(java.lang.Integer) -> setItemGradientBottom
    void setItemTitleTextSize(java.lang.Integer) -> setItemTitleTextSize
    void setItemTitleTextColor(java.lang.Integer) -> setItemTitleTextColor
    void setItemTitleTextDecoration(java.util.Set) -> setItemTitleTextDecoration
    void setItemDescriptionTextSize(java.lang.Integer) -> setItemDescriptionTextSize
    void setItemDescriptionTextColor(java.lang.Integer) -> setItemDescriptionTextColor
    void setItemDescriptionTextDecoration(java.util.Set) -> setItemDescriptionTextDecoration
com.startapp.android.publish.model.NameValueObject -> com.startapp.android.publish.model.NameValueObject:
    java.lang.String name -> name
    java.lang.String value -> value
    java.util.Set valueSet -> valueSet
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.util.Set getValueSet() -> getValueSet
    void setValueSet(java.util.Set) -> setValueSet
    java.lang.String toString() -> toString
com.startapp.android.publish.model.NameValueSerializer -> com.startapp.android.publish.model.NameValueSerializer:
    java.util.List getNameValueMap() -> getNameValueMap
com.startapp.android.publish.model.SdkDownloadRequest -> com.startapp.android.publish.model.SdkDownloadRequest:
    java.lang.String PLACEMENT -> PLACEMENT
    java.util.List getNameValueMap() -> getNameValueMap
com.startapp.android.publish.nativead.NativeAdDetails -> com.startapp.android.publish.nativead.NativeAdDetails:
    com.startapp.android.publish.model.AdDetails a -> a
    int b -> b
    android.graphics.Bitmap c -> c
    boolean d -> d
    com.startapp.android.publish.nativead.NativeAdDetails$a e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    void a(android.graphics.Bitmap) -> a
    void a(android.graphics.Bitmap,int) -> a
    void a() -> a
    java.lang.String getTitle() -> getTitle
    java.lang.String getDescription() -> getDescription
    float getRating() -> getRating
    java.lang.String getImageUrl() -> getImageUrl
    android.graphics.Bitmap getImageBitmap() -> getImageBitmap
    java.lang.String getInstalls() -> getInstalls
    java.lang.String getCategory() -> getCategory
    java.lang.String getPackacgeName() -> getPackacgeName
    com.startapp.android.publish.nativead.StartAppNativeAd$b getCampaignAction() -> getCampaignAction
    void sendClick(android.content.Context) -> sendClick
    void sendImpression(android.content.Context) -> sendImpression
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int a(com.startapp.android.publish.nativead.NativeAdDetails) -> a
    com.startapp.android.publish.nativead.NativeAdDetails$a b(com.startapp.android.publish.nativead.NativeAdDetails) -> b
com.startapp.android.publish.nativead.NativeAdDetails$1 -> com.startapp.android.publish.nativead.NativeAdDetails$1:
    com.startapp.android.publish.nativead.NativeAdDetails a -> a
    void run() -> run
com.startapp.android.publish.nativead.NativeAdDetails$2 -> com.startapp.android.publish.nativead.NativeAdDetails$2:
    com.startapp.android.publish.nativead.NativeAdDetails a(android.os.Parcel) -> a
    com.startapp.android.publish.nativead.NativeAdDetails[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.startapp.android.publish.nativead.NativeAdDetails$3 -> com.startapp.android.publish.nativead.NativeAdDetails$3:
    int[] a -> a
com.startapp.android.publish.nativead.NativeAdDetails$a -> com.startapp.android.publish.nativead.NativeAdDetails$a:
    void onNativeAdDetailsLoaded(int) -> onNativeAdDetailsLoaded
com.startapp.android.publish.nativead.NativeAdInterface -> com.startapp.android.publish.nativead.NativeAdInterface:
    java.lang.String getTitle() -> getTitle
    java.lang.String getDescription() -> getDescription
    float getRating() -> getRating
    java.lang.String getImageUrl() -> getImageUrl
    android.graphics.Bitmap getImageBitmap() -> getImageBitmap
    java.lang.String getInstalls() -> getInstalls
    java.lang.String getCategory() -> getCategory
    java.lang.String getPackacgeName() -> getPackacgeName
    com.startapp.android.publish.nativead.StartAppNativeAd$b getCampaignAction() -> getCampaignAction
    void sendClick(android.content.Context) -> sendClick
    void sendImpression(android.content.Context) -> sendImpression
com.startapp.android.publish.nativead.NativeAdPreferences -> com.startapp.android.publish.nativead.NativeAdPreferences:
    long serialVersionUID -> serialVersionUID
    java.lang.String EXCEPTION_LOW_ADS_NUMBER -> EXCEPTION_LOW_ADS_NUMBER
    int DEFAULT_ADS_NUMBER -> DEFAULT_ADS_NUMBER
    boolean DEFAULT_AUTO_DOWNLOAD_BITMAP -> DEFAULT_AUTO_DOWNLOAD_BITMAP
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize DEFAULT_BITMAP_SIZE -> DEFAULT_BITMAP_SIZE
    boolean DEFAULT_USE_SIMPLE_TOKEN -> DEFAULT_USE_SIMPLE_TOKEN
    int adsNumber -> adsNumber
    boolean autoBitmapDownload -> autoBitmapDownload
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize bitmapSize -> bitmapSize
    boolean useSimpleToken -> useSimpleToken
    int getAdsNumber() -> getAdsNumber
    com.startapp.android.publish.nativead.NativeAdPreferences setAdsNumber(int) -> setAdsNumber
    boolean isAutoBitmapDownload() -> isAutoBitmapDownload
    com.startapp.android.publish.nativead.NativeAdPreferences setAutoBitmapDownload(boolean) -> setAutoBitmapDownload
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize getImageSize() -> getImageSize
    com.startapp.android.publish.nativead.NativeAdPreferences setImageSize(com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize) -> setImageSize
    boolean isSimpleToken() -> isSimpleToken
    com.startapp.android.publish.nativead.NativeAdPreferences useSimpleToken(boolean) -> useSimpleToken
    java.lang.String toString() -> toString
com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize -> com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize:
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize SIZE72X72 -> SIZE72X72
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize SIZE100X100 -> SIZE100X100
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize SIZE150X150 -> SIZE150X150
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize SIZE340X340 -> SIZE340X340
    int width -> width
    int height -> height
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize[] $VALUES -> $VALUES
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize[] values() -> values
    com.startapp.android.publish.nativead.NativeAdPreferences$NativeAdBitmapSize valueOf(java.lang.String) -> valueOf
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.startapp.android.publish.nativead.StartAppNativeAd -> com.startapp.android.publish.nativead.StartAppNativeAd:
    java.lang.String TAG -> TAG
    com.startapp.android.publish.a.g nativeAds -> nativeAds
    com.startapp.android.publish.nativead.StartAppNativeAd$a adEventDelegate -> adEventDelegate
    int totalObjectsLoaded -> totalObjectsLoaded
    com.startapp.android.publish.nativead.NativeAdPreferences preferences -> preferences
    java.util.List listNativeAds -> listNativeAds
    com.startapp.android.publish.nativead.NativeAdPreferences getPreferences() -> getPreferences
    void setPreferences(com.startapp.android.publish.nativead.NativeAdPreferences) -> setPreferences
    int getNumberOfAds() -> getNumberOfAds
    java.lang.String toString() -> toString
    void initNativeAdList() -> initNativeAdList
    void onNativeAdDetailsLoaded(int) -> onNativeAdDetailsLoaded
    void onNativeAdLoaded() -> onNativeAdLoaded
    boolean loadAd() -> loadAd
    boolean loadAd(com.startapp.android.publish.AdEventListener) -> loadAd
    boolean loadAd(com.startapp.android.publish.nativead.NativeAdPreferences) -> loadAd
    boolean loadAd(com.startapp.android.publish.nativead.NativeAdPreferences,com.startapp.android.publish.AdEventListener) -> loadAd
    void loadAds(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener) -> loadAds
    java.util.ArrayList getNativeAds() -> getNativeAds
    com.startapp.android.publish.a.g access$000(com.startapp.android.publish.nativead.StartAppNativeAd) -> access$000
    com.startapp.android.publish.nativead.NativeAdPreferences access$100(com.startapp.android.publish.nativead.StartAppNativeAd) -> access$100
    void access$200(com.startapp.android.publish.nativead.StartAppNativeAd) -> access$200
com.startapp.android.publish.nativead.StartAppNativeAd$a -> com.startapp.android.publish.nativead.StartAppNativeAd$a:
    com.startapp.android.publish.AdEventListener b -> b
    com.startapp.android.publish.nativead.StartAppNativeAd a -> a
    void onReceiveAd(com.startapp.android.publish.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.startapp.android.publish.Ad) -> onFailedToReceiveAd
    com.startapp.android.publish.AdEventListener a() -> a
com.startapp.android.publish.nativead.StartAppNativeAd$b -> com.startapp.android.publish.nativead.StartAppNativeAd$b:
    com.startapp.android.publish.nativead.StartAppNativeAd$b a -> a
    com.startapp.android.publish.nativead.StartAppNativeAd$b b -> b
    com.startapp.android.publish.nativead.StartAppNativeAd$b[] c -> c
    com.startapp.android.publish.nativead.StartAppNativeAd$b[] values() -> values
    com.startapp.android.publish.nativead.StartAppNativeAd$b valueOf(java.lang.String) -> valueOf
com.startapp.android.publish.slider.WebViewJSInterface -> com.startapp.android.publish.slider.WebViewJSInterface:
    java.lang.String trackingUrl -> trackingUrl
    android.content.Context mContext -> mContext
    void processHTML(java.lang.String) -> processHTML
    void processServerEvent(java.lang.String) -> processServerEvent
    java.lang.String getTrackingUrl() -> getTrackingUrl
    java.lang.String substringBetween(java.lang.String,java.lang.String,java.lang.String) -> substringBetween
    void megreTackingUrls(java.lang.String) -> megreTackingUrls
com.startapp.android.publish.slider.a -> com.startapp.android.publish.slider.a:
    android.content.Context a -> a
    void a(java.lang.String) -> a
    java.lang.Boolean a(java.lang.String[]) -> a
    boolean b(java.lang.String) -> b
com.startapp.android.publish.slider.a$1 -> com.startapp.android.publish.slider.a$1:
    java.lang.String a -> a
    com.startapp.android.publish.slider.a b -> b
    void run() -> run
com.startapp.android.publish.slider.b -> com.startapp.android.publish.slider.b:
    android.app.Activity a -> a
    android.webkit.WebView b -> b
    com.startapp.android.publish.slider.sliding.DrawerLayout c -> c
    android.os.Handler d -> d
    com.startapp.android.publish.a.l e -> e
    int f -> f
    android.os.Handler g -> g
    com.startapp.android.publish.adinformation.b h -> h
    boolean i -> i
    android.app.Activity a() -> a
    void b() -> b
    java.lang.String c() -> c
    void d() -> d
    void e() -> e
    void a(com.startapp.android.publish.slider.b) -> a
    void b(com.startapp.android.publish.slider.b) -> b
    android.webkit.WebView c(com.startapp.android.publish.slider.b) -> c
    com.startapp.android.publish.slider.sliding.DrawerLayout d(com.startapp.android.publish.slider.b) -> d
    int e(com.startapp.android.publish.slider.b) -> e
    int f(com.startapp.android.publish.slider.b) -> f
    int a(com.startapp.android.publish.slider.b,int) -> a
    void g(com.startapp.android.publish.slider.b) -> g
    com.startapp.android.publish.a.l h(com.startapp.android.publish.slider.b) -> h
    android.os.Handler i(com.startapp.android.publish.slider.b) -> i
com.startapp.android.publish.slider.b$1 -> com.startapp.android.publish.slider.b$1:
    com.startapp.android.publish.slider.b a -> a
    void onReceiveAd(com.startapp.android.publish.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.startapp.android.publish.Ad) -> onFailedToReceiveAd
com.startapp.android.publish.slider.b$2 -> com.startapp.android.publish.slider.b$2:
    com.startapp.android.publish.slider.b a -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.startapp.android.publish.slider.b$3 -> com.startapp.android.publish.slider.b$3:
    com.startapp.android.publish.slider.b a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.startapp.android.publish.slider.b$4 -> com.startapp.android.publish.slider.b$4:
    android.widget.ImageButton a -> a
    android.view.animation.TranslateAnimation b -> b
    com.startapp.android.publish.slider.b c -> c
    void run() -> run
com.startapp.android.publish.slider.b$5 -> com.startapp.android.publish.slider.b$5:
    android.widget.ImageButton a -> a
    android.view.animation.TranslateAnimation b -> b
    com.startapp.android.publish.slider.b c -> c
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.startapp.android.publish.slider.b$6 -> com.startapp.android.publish.slider.b$6:
    android.widget.ImageButton a -> a
    android.view.animation.TranslateAnimation b -> b
    com.startapp.android.publish.slider.b c -> c
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.startapp.android.publish.slider.b$7 -> com.startapp.android.publish.slider.b$7:
    android.widget.ImageButton a -> a
    android.view.animation.TranslateAnimation b -> b
    com.startapp.android.publish.slider.b c -> c
    void run() -> run
com.startapp.android.publish.slider.b$8 -> com.startapp.android.publish.slider.b$8:
    android.widget.RelativeLayout a -> a
    com.startapp.android.publish.slider.b b -> b
    void onClick(android.view.View) -> onClick
com.startapp.android.publish.slider.b$9 -> com.startapp.android.publish.slider.b$9:
    com.startapp.android.publish.slider.b a -> a
    void a(int) -> a
    void a(android.view.View,float) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
com.startapp.android.publish.slider.b$a -> com.startapp.android.publish.slider.b$a:
    com.startapp.android.publish.slider.b a -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.startapp.android.publish.slider.b$a$1 -> com.startapp.android.publish.slider.b$a$1:
    java.lang.String a -> a
    com.startapp.android.publish.slider.b$a b -> b
    void run() -> run
com.startapp.android.publish.slider.sliding.DrawerLayout -> com.startapp.android.publish.slider.sliding.DrawerLayout:
    int[] a -> a
    int b -> b
    int c -> c
    float d -> d
    android.graphics.Paint e -> e
    com.startapp.android.publish.slider.sliding.c f -> f
    com.startapp.android.publish.slider.sliding.c g -> g
    com.startapp.android.publish.slider.sliding.DrawerLayout$d h -> h
    com.startapp.android.publish.slider.sliding.DrawerLayout$d i -> i
    int j -> j
    boolean k -> k
    boolean l -> l
    int m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    com.startapp.android.publish.slider.sliding.DrawerLayout$b q -> q
    float r -> r
    float s -> s
    android.graphics.drawable.Drawable t -> t
    android.graphics.drawable.Drawable u -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(com.startapp.android.publish.slider.sliding.DrawerLayout$b) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void a(int,int) -> a
    int a(android.view.View) -> a
    void a(int,int,android.view.View) -> a
    void b(android.view.View) -> b
    void c(android.view.View) -> c
    void a(android.view.View,float) -> a
    void b(android.view.View,float) -> b
    float d(android.view.View) -> d
    int e(android.view.View) -> e
    boolean a(android.view.View,int) -> a
    android.view.View a() -> a
    android.view.View a(int) -> a
    java.lang.String b(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean k(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean f(android.view.View) -> f
    boolean g(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void b() -> b
    void a(boolean) -> a
    void h(android.view.View) -> h
    void i(android.view.View) -> i
    boolean j(android.view.View) -> j
    boolean e() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean f() -> f
    android.view.View g() -> g
    void c() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] d() -> d
com.startapp.android.publish.slider.sliding.DrawerLayout$SavedState -> com.startapp.android.publish.slider.sliding.DrawerLayout$SavedState:
    int a -> a
    int b -> b
    int c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.startapp.android.publish.slider.sliding.DrawerLayout$SavedState$1 -> com.startapp.android.publish.slider.sliding.DrawerLayout$SavedState$1:
    com.startapp.android.publish.slider.sliding.DrawerLayout$SavedState a(android.os.Parcel) -> a
    com.startapp.android.publish.slider.sliding.DrawerLayout$SavedState[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.startapp.android.publish.slider.sliding.DrawerLayout$a -> com.startapp.android.publish.slider.sliding.DrawerLayout$a:
    android.graphics.Rect c -> c
    com.startapp.android.publish.slider.sliding.DrawerLayout a -> a
    void a(android.view.View,com.startapp.android.publish.slider.sliding.a.a) -> a
    boolean a(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean a(android.view.View) -> a
    void a(com.startapp.android.publish.slider.sliding.a.a,com.startapp.android.publish.slider.sliding.a.a) -> a
com.startapp.android.publish.slider.sliding.DrawerLayout$b -> com.startapp.android.publish.slider.sliding.DrawerLayout$b:
    void a(android.view.View,float) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
    void a(int) -> a
com.startapp.android.publish.slider.sliding.DrawerLayout$c -> com.startapp.android.publish.slider.sliding.DrawerLayout$c:
    int a -> a
    float b -> b
    boolean c -> c
    boolean d -> d
com.startapp.android.publish.slider.sliding.DrawerLayout$d -> com.startapp.android.publish.slider.sliding.DrawerLayout$d:
    int b -> b
    com.startapp.android.publish.slider.sliding.c c -> c
    java.lang.Runnable d -> d
    com.startapp.android.publish.slider.sliding.DrawerLayout a -> a
    void a(com.startapp.android.publish.slider.sliding.c) -> a
    void a() -> a
    boolean a(android.view.View,int) -> a
    void a(int) -> a
    void a(android.view.View,int,int,int,int) -> a
    void b(android.view.View,int) -> b
    void b() -> b
    void a(android.view.View,float,float) -> a
    void a(int,int) -> a
    void c() -> c
    boolean b(int) -> b
    void b(int,int) -> b
    int a(android.view.View) -> a
    int a(android.view.View,int,int) -> a
    int b(android.view.View,int,int) -> b
    void a(com.startapp.android.publish.slider.sliding.DrawerLayout$d) -> a
com.startapp.android.publish.slider.sliding.DrawerLayout$d$1 -> com.startapp.android.publish.slider.sliding.DrawerLayout$d$1:
    com.startapp.android.publish.slider.sliding.DrawerLayout$d a -> a
    void run() -> run
com.startapp.android.publish.slider.sliding.a -> com.startapp.android.publish.slider.sliding.a:
    java.lang.Object a -> a
    com.startapp.android.publish.slider.sliding.a$a b -> b
    com.startapp.android.publish.slider.sliding.a a(android.content.Context,android.view.animation.Interpolator) -> a
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    boolean f() -> f
    void a(int,int,int,int,int) -> a
    void g() -> g
com.startapp.android.publish.slider.sliding.a$a -> com.startapp.android.publish.slider.sliding.a$a:
    java.lang.Object a(android.content.Context,android.view.animation.Interpolator) -> a
    boolean a(java.lang.Object) -> a
    int b(java.lang.Object) -> b
    int c(java.lang.Object) -> c
    boolean d(java.lang.Object) -> d
    void a(java.lang.Object,int,int,int,int,int) -> a
    void e(java.lang.Object) -> e
    int f(java.lang.Object) -> f
    int g(java.lang.Object) -> g
com.startapp.android.publish.slider.sliding.a$b -> com.startapp.android.publish.slider.sliding.a$b:
    java.lang.Object a(android.content.Context,android.view.animation.Interpolator) -> a
    boolean a(java.lang.Object) -> a
    int b(java.lang.Object) -> b
    int c(java.lang.Object) -> c
    boolean d(java.lang.Object) -> d
    void a(java.lang.Object,int,int,int,int,int) -> a
    void e(java.lang.Object) -> e
    int f(java.lang.Object) -> f
    int g(java.lang.Object) -> g
com.startapp.android.publish.slider.sliding.a$c -> com.startapp.android.publish.slider.sliding.a$c:
    java.lang.Object a(android.content.Context,android.view.animation.Interpolator) -> a
    boolean a(java.lang.Object) -> a
    int b(java.lang.Object) -> b
    int c(java.lang.Object) -> c
    boolean d(java.lang.Object) -> d
    void a(java.lang.Object,int,int,int,int,int) -> a
    void e(java.lang.Object) -> e
    int f(java.lang.Object) -> f
    int g(java.lang.Object) -> g
com.startapp.android.publish.slider.sliding.a$d -> com.startapp.android.publish.slider.sliding.a$d:
com.startapp.android.publish.slider.sliding.a.a -> com.startapp.android.publish.slider.sliding.a.a:
    com.startapp.android.publish.slider.sliding.a.a$b a -> a
    java.lang.Object b -> b
    com.startapp.android.publish.slider.sliding.a.a a(java.lang.Object) -> a
    java.lang.Object a() -> a
    com.startapp.android.publish.slider.sliding.a.a a(com.startapp.android.publish.slider.sliding.a.a) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
    int b() -> b
    void a(int) -> a
    void c(android.view.View) -> c
    void a(android.graphics.Rect) -> a
    void b(android.graphics.Rect) -> b
    void c(android.graphics.Rect) -> c
    void d(android.graphics.Rect) -> d
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    void a(boolean) -> a
    boolean f() -> f
    void b(boolean) -> b
    boolean g() -> g
    void c(boolean) -> c
    boolean h() -> h
    void d(boolean) -> d
    boolean i() -> i
    void e(boolean) -> e
    boolean j() -> j
    void f(boolean) -> f
    boolean k() -> k
    void g(boolean) -> g
    boolean l() -> l
    void h(boolean) -> h
    boolean m() -> m
    boolean n() -> n
    java.lang.CharSequence o() -> o
    void a(java.lang.CharSequence) -> a
    java.lang.CharSequence p() -> p
    void b(java.lang.CharSequence) -> b
    java.lang.CharSequence q() -> q
    java.lang.CharSequence r() -> r
    void c(java.lang.CharSequence) -> c
    void s() -> s
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String b(int) -> b
com.startapp.android.publish.slider.sliding.a.a$a -> com.startapp.android.publish.slider.sliding.a.a$a:
    java.lang.Object a(java.lang.Object) -> a
    void a(java.lang.Object,int) -> a
    void a(java.lang.Object,android.view.View) -> a
    int b(java.lang.Object) -> b
    void a(java.lang.Object,android.graphics.Rect) -> a
    void b(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence c(java.lang.Object) -> c
    java.lang.CharSequence d(java.lang.Object) -> d
    java.lang.CharSequence e(java.lang.Object) -> e
    java.lang.CharSequence f(java.lang.Object) -> f
    boolean g(java.lang.Object) -> g
    boolean h(java.lang.Object) -> h
    boolean i(java.lang.Object) -> i
    boolean j(java.lang.Object) -> j
    boolean k(java.lang.Object) -> k
    boolean l(java.lang.Object) -> l
    boolean m(java.lang.Object) -> m
    boolean n(java.lang.Object) -> n
    boolean o(java.lang.Object) -> o
    boolean p(java.lang.Object) -> p
    void c(java.lang.Object,android.graphics.Rect) -> c
    void d(java.lang.Object,android.graphics.Rect) -> d
    void a(java.lang.Object,java.lang.CharSequence) -> a
    void a(java.lang.Object,boolean) -> a
    void b(java.lang.Object,java.lang.CharSequence) -> b
    void b(java.lang.Object,boolean) -> b
    void c(java.lang.Object,boolean) -> c
    void d(java.lang.Object,boolean) -> d
    void e(java.lang.Object,boolean) -> e
    void c(java.lang.Object,java.lang.CharSequence) -> c
    void b(java.lang.Object,android.view.View) -> b
    void f(java.lang.Object,boolean) -> f
    void c(java.lang.Object,android.view.View) -> c
    void q(java.lang.Object) -> q
com.startapp.android.publish.slider.sliding.a.a$b -> com.startapp.android.publish.slider.sliding.a.a$b:
    java.lang.Object a(java.lang.Object) -> a
    void c(java.lang.Object,android.view.View) -> c
    void a(java.lang.Object,android.view.View) -> a
    int b(java.lang.Object) -> b
    void a(java.lang.Object,int) -> a
    void b(java.lang.Object,android.view.View) -> b
    void a(java.lang.Object,android.graphics.Rect) -> a
    void c(java.lang.Object,android.graphics.Rect) -> c
    void b(java.lang.Object,android.graphics.Rect) -> b
    void d(java.lang.Object,android.graphics.Rect) -> d
    boolean g(java.lang.Object) -> g
    boolean h(java.lang.Object) -> h
    boolean k(java.lang.Object) -> k
    void c(java.lang.Object,boolean) -> c
    boolean l(java.lang.Object) -> l
    void d(java.lang.Object,boolean) -> d
    boolean r(java.lang.Object) -> r
    void g(java.lang.Object,boolean) -> g
    boolean s(java.lang.Object) -> s
    void h(java.lang.Object,boolean) -> h
    boolean p(java.lang.Object) -> p
    void f(java.lang.Object,boolean) -> f
    boolean i(java.lang.Object) -> i
    void a(java.lang.Object,boolean) -> a
    boolean m(java.lang.Object) -> m
    void e(java.lang.Object,boolean) -> e
    boolean j(java.lang.Object) -> j
    void b(java.lang.Object,boolean) -> b
    boolean n(java.lang.Object) -> n
    boolean o(java.lang.Object) -> o
    java.lang.CharSequence e(java.lang.Object) -> e
    void c(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence c(java.lang.Object) -> c
    void a(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence f(java.lang.Object) -> f
    java.lang.CharSequence d(java.lang.Object) -> d
    void b(java.lang.Object,java.lang.CharSequence) -> b
    void q(java.lang.Object) -> q
com.startapp.android.publish.slider.sliding.a.a$c -> com.startapp.android.publish.slider.sliding.a.a$c:
    boolean r(java.lang.Object) -> r
    void g(java.lang.Object,boolean) -> g
    boolean s(java.lang.Object) -> s
    void h(java.lang.Object,boolean) -> h
com.startapp.android.publish.slider.sliding.a.a$d -> com.startapp.android.publish.slider.sliding.a.a$d:
com.startapp.android.publish.slider.sliding.a.a$e -> com.startapp.android.publish.slider.sliding.a.a$e:
    java.lang.Object a(java.lang.Object) -> a
    void a(java.lang.Object,int) -> a
    void a(java.lang.Object,android.view.View) -> a
    int b(java.lang.Object) -> b
    void a(java.lang.Object,android.graphics.Rect) -> a
    void b(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence c(java.lang.Object) -> c
    java.lang.CharSequence d(java.lang.Object) -> d
    java.lang.CharSequence e(java.lang.Object) -> e
    java.lang.CharSequence f(java.lang.Object) -> f
    boolean g(java.lang.Object) -> g
    boolean h(java.lang.Object) -> h
    boolean i(java.lang.Object) -> i
    boolean j(java.lang.Object) -> j
    boolean k(java.lang.Object) -> k
    boolean l(java.lang.Object) -> l
    boolean r(java.lang.Object) -> r
    boolean s(java.lang.Object) -> s
    boolean m(java.lang.Object) -> m
    boolean n(java.lang.Object) -> n
    boolean o(java.lang.Object) -> o
    boolean p(java.lang.Object) -> p
    void c(java.lang.Object,android.graphics.Rect) -> c
    void d(java.lang.Object,android.graphics.Rect) -> d
    void a(java.lang.Object,java.lang.CharSequence) -> a
    void a(java.lang.Object,boolean) -> a
    void b(java.lang.Object,java.lang.CharSequence) -> b
    void b(java.lang.Object,boolean) -> b
    void c(java.lang.Object,boolean) -> c
    void d(java.lang.Object,boolean) -> d
    void g(java.lang.Object,boolean) -> g
    void h(java.lang.Object,boolean) -> h
    void e(java.lang.Object,boolean) -> e
    void c(java.lang.Object,java.lang.CharSequence) -> c
    void b(java.lang.Object,android.view.View) -> b
    void f(java.lang.Object,boolean) -> f
    void c(java.lang.Object,android.view.View) -> c
    void q(java.lang.Object) -> q
com.startapp.android.publish.slider.sliding.a.b -> com.startapp.android.publish.slider.sliding.a.b:
    java.lang.Object a(java.lang.Object) -> a
    void a(java.lang.Object,int) -> a
    void a(java.lang.Object,android.view.View) -> a
    int b(java.lang.Object) -> b
    void a(java.lang.Object,android.graphics.Rect) -> a
    void b(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence c(java.lang.Object) -> c
    java.lang.CharSequence d(java.lang.Object) -> d
    java.lang.CharSequence e(java.lang.Object) -> e
    java.lang.CharSequence f(java.lang.Object) -> f
    boolean g(java.lang.Object) -> g
    boolean h(java.lang.Object) -> h
    boolean i(java.lang.Object) -> i
    boolean j(java.lang.Object) -> j
    boolean k(java.lang.Object) -> k
    boolean l(java.lang.Object) -> l
    boolean m(java.lang.Object) -> m
    boolean n(java.lang.Object) -> n
    boolean o(java.lang.Object) -> o
    boolean p(java.lang.Object) -> p
    void c(java.lang.Object,android.graphics.Rect) -> c
    void d(java.lang.Object,android.graphics.Rect) -> d
    void a(java.lang.Object,java.lang.CharSequence) -> a
    void a(java.lang.Object,boolean) -> a
    void b(java.lang.Object,java.lang.CharSequence) -> b
    void b(java.lang.Object,boolean) -> b
    void c(java.lang.Object,boolean) -> c
    void d(java.lang.Object,boolean) -> d
    void e(java.lang.Object,boolean) -> e
    void c(java.lang.Object,java.lang.CharSequence) -> c
    void b(java.lang.Object,android.view.View) -> b
    void f(java.lang.Object,boolean) -> f
    void c(java.lang.Object,android.view.View) -> c
    void q(java.lang.Object) -> q
com.startapp.android.publish.slider.sliding.a.c -> com.startapp.android.publish.slider.sliding.a.c:
    boolean a(java.lang.Object) -> a
    void a(java.lang.Object,boolean) -> a
    boolean b(java.lang.Object) -> b
    void b(java.lang.Object,boolean) -> b
com.startapp.android.publish.slider.sliding.a.d -> com.startapp.android.publish.slider.sliding.a.d:
    com.startapp.android.publish.slider.sliding.a.d$a a -> a
    java.lang.Object b -> b
    java.lang.Object a() -> a
    com.startapp.android.publish.slider.sliding.a.a a(int) -> a
    boolean a(int,int,android.os.Bundle) -> a
    java.util.List a(java.lang.String,int) -> a
com.startapp.android.publish.slider.sliding.a.d$a -> com.startapp.android.publish.slider.sliding.a.d$a:
    java.lang.Object a(com.startapp.android.publish.slider.sliding.a.d) -> a
com.startapp.android.publish.slider.sliding.a.d$b -> com.startapp.android.publish.slider.sliding.a.d$b:
    java.lang.Object a(com.startapp.android.publish.slider.sliding.a.d) -> a
com.startapp.android.publish.slider.sliding.a.d$b$1 -> com.startapp.android.publish.slider.sliding.a.d$b$1:
    com.startapp.android.publish.slider.sliding.a.d a -> a
    com.startapp.android.publish.slider.sliding.a.d$b b -> b
    boolean a(int,int,android.os.Bundle) -> a
    java.util.List a(java.lang.String,int) -> a
    java.lang.Object a(int) -> a
com.startapp.android.publish.slider.sliding.a.d$c -> com.startapp.android.publish.slider.sliding.a.d$c:
    java.lang.Object a(com.startapp.android.publish.slider.sliding.a.d) -> a
com.startapp.android.publish.slider.sliding.a.e -> com.startapp.android.publish.slider.sliding.a.e:
    java.lang.Object a(com.startapp.android.publish.slider.sliding.a.e$a) -> a
com.startapp.android.publish.slider.sliding.a.e$1 -> com.startapp.android.publish.slider.sliding.a.e$1:
    com.startapp.android.publish.slider.sliding.a.e$a a -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
com.startapp.android.publish.slider.sliding.a.e$a -> com.startapp.android.publish.slider.sliding.a.e$a:
    java.lang.Object a(int) -> a
    boolean a(int,int,android.os.Bundle) -> a
    java.util.List a(java.lang.String,int) -> a
com.startapp.android.publish.slider.sliding.b -> com.startapp.android.publish.slider.sliding.b:
    java.lang.Object a(android.content.Context,android.view.animation.Interpolator) -> a
    boolean a(java.lang.Object) -> a
    int b(java.lang.Object) -> b
    int c(java.lang.Object) -> c
    boolean d(java.lang.Object) -> d
    void a(java.lang.Object,int,int,int,int,int) -> a
    void e(java.lang.Object) -> e
    int f(java.lang.Object) -> f
    int g(java.lang.Object) -> g
com.startapp.android.publish.slider.sliding.b.a -> com.startapp.android.publish.slider.sliding.b.a:
    com.startapp.android.publish.slider.sliding.b.a$b a -> a
    java.lang.Object c -> c
    java.lang.Object b -> b
    java.lang.Object a() -> a
    void a(android.view.View,int) -> a
    void a(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean b(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void c(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void d(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void a(android.view.View,com.startapp.android.publish.slider.sliding.a.a) -> a
    boolean a(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    com.startapp.android.publish.slider.sliding.a.d b(android.view.View) -> b
    boolean a(android.view.View,int,android.os.Bundle) -> a
com.startapp.android.publish.slider.sliding.b.a$a -> com.startapp.android.publish.slider.sliding.b.a$a:
    java.lang.Object a() -> a
    java.lang.Object a(com.startapp.android.publish.slider.sliding.b.a) -> a
    boolean a(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void b(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void a(java.lang.Object,android.view.View,com.startapp.android.publish.slider.sliding.a.a) -> a
    void c(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean a(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void a(java.lang.Object,android.view.View,int) -> a
    void d(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
com.startapp.android.publish.slider.sliding.b.a$a$1 -> com.startapp.android.publish.slider.sliding.b.a$a$1:
    com.startapp.android.publish.slider.sliding.b.a a -> a
    com.startapp.android.publish.slider.sliding.b.a$a b -> b
    boolean a(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void b(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void a(android.view.View,java.lang.Object) -> a
    void c(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean a(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void a(android.view.View,int) -> a
    void d(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
com.startapp.android.publish.slider.sliding.b.a$b -> com.startapp.android.publish.slider.sliding.b.a$b:
    java.lang.Object a() -> a
    java.lang.Object a(com.startapp.android.publish.slider.sliding.b.a) -> a
    boolean a(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void b(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void a(java.lang.Object,android.view.View,com.startapp.android.publish.slider.sliding.a.a) -> a
    void c(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean a(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void a(java.lang.Object,android.view.View,int) -> a
    void d(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    com.startapp.android.publish.slider.sliding.a.d a(java.lang.Object,android.view.View) -> a
    boolean a(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
com.startapp.android.publish.slider.sliding.b.a$c -> com.startapp.android.publish.slider.sliding.b.a$c:
    java.lang.Object a(com.startapp.android.publish.slider.sliding.b.a) -> a
    com.startapp.android.publish.slider.sliding.a.d a(java.lang.Object,android.view.View) -> a
    boolean a(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
com.startapp.android.publish.slider.sliding.b.a$c$1 -> com.startapp.android.publish.slider.sliding.b.a$c$1:
    com.startapp.android.publish.slider.sliding.b.a a -> a
    com.startapp.android.publish.slider.sliding.b.a$c b -> b
    boolean a(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void b(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void a(android.view.View,java.lang.Object) -> a
    void c(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean a(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void a(android.view.View,int) -> a
    void d(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object a(android.view.View) -> a
    boolean a(android.view.View,int,android.os.Bundle) -> a
com.startapp.android.publish.slider.sliding.b.a$d -> com.startapp.android.publish.slider.sliding.b.a$d:
    java.lang.Object a() -> a
    java.lang.Object a(com.startapp.android.publish.slider.sliding.b.a) -> a
    boolean a(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void b(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void a(java.lang.Object,android.view.View,com.startapp.android.publish.slider.sliding.a.a) -> a
    void c(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean a(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void a(java.lang.Object,android.view.View,int) -> a
    void d(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    com.startapp.android.publish.slider.sliding.a.d a(java.lang.Object,android.view.View) -> a
    boolean a(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
com.startapp.android.publish.slider.sliding.b.b -> com.startapp.android.publish.slider.sliding.b.b:
    java.lang.Object a() -> a
    java.lang.Object a(com.startapp.android.publish.slider.sliding.b.b$a) -> a
    boolean a(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void b(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void a(java.lang.Object,android.view.View,java.lang.Object) -> a
    void c(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean a(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void a(java.lang.Object,android.view.View,int) -> a
    void d(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
com.startapp.android.publish.slider.sliding.b.b$1 -> com.startapp.android.publish.slider.sliding.b.b$1:
    com.startapp.android.publish.slider.sliding.b.b$a a -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.startapp.android.publish.slider.sliding.b.b$a -> com.startapp.android.publish.slider.sliding.b.b$a:
    boolean a(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void b(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void a(android.view.View,java.lang.Object) -> a
    void c(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean a(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void a(android.view.View,int) -> a
    void d(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
com.startapp.android.publish.slider.sliding.b.c -> com.startapp.android.publish.slider.sliding.b.c:
    java.lang.Object a(com.startapp.android.publish.slider.sliding.b.c$a) -> a
    java.lang.Object a(java.lang.Object,android.view.View) -> a
    boolean a(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
com.startapp.android.publish.slider.sliding.b.c$1 -> com.startapp.android.publish.slider.sliding.b.c$1:
    com.startapp.android.publish.slider.sliding.b.c$a a -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.startapp.android.publish.slider.sliding.b.c$a -> com.startapp.android.publish.slider.sliding.b.c$a:
    boolean a(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void b(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void a(android.view.View,java.lang.Object) -> a
    void c(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean a(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void a(android.view.View,int) -> a
    void d(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object a(android.view.View) -> a
    boolean a(android.view.View,int,android.os.Bundle) -> a
com.startapp.android.publish.slider.sliding.b.d -> com.startapp.android.publish.slider.sliding.b.d:
    com.startapp.android.publish.slider.sliding.b.d$a a -> a
    int a(int,int) -> a
com.startapp.android.publish.slider.sliding.b.d$a -> com.startapp.android.publish.slider.sliding.b.d$a:
    int a(int,int) -> a
com.startapp.android.publish.slider.sliding.b.d$b -> com.startapp.android.publish.slider.sliding.b.d$b:
    int a(int,int) -> a
com.startapp.android.publish.slider.sliding.b.d$c -> com.startapp.android.publish.slider.sliding.b.d$c:
    int a(int,int) -> a
com.startapp.android.publish.slider.sliding.b.e -> com.startapp.android.publish.slider.sliding.b.e:
    int a(int,int) -> a
com.startapp.android.publish.slider.sliding.b.f -> com.startapp.android.publish.slider.sliding.b.f:
    com.startapp.android.publish.slider.sliding.b.f$d a -> a
    void a(android.view.KeyEvent) -> a
com.startapp.android.publish.slider.sliding.b.f$a -> com.startapp.android.publish.slider.sliding.b.f$a:
    void a(android.view.KeyEvent) -> a
com.startapp.android.publish.slider.sliding.b.f$b -> com.startapp.android.publish.slider.sliding.b.f$b:
    void a(android.view.KeyEvent) -> a
com.startapp.android.publish.slider.sliding.b.f$c -> com.startapp.android.publish.slider.sliding.b.f$c:
com.startapp.android.publish.slider.sliding.b.f$d -> com.startapp.android.publish.slider.sliding.b.f$d:
    void a(android.view.KeyEvent) -> a
com.startapp.android.publish.slider.sliding.b.g -> com.startapp.android.publish.slider.sliding.b.g:
    void a(android.view.KeyEvent) -> a
com.startapp.android.publish.slider.sliding.b.h -> com.startapp.android.publish.slider.sliding.b.h:
    com.startapp.android.publish.slider.sliding.b.h$c a -> a
    int a(android.view.MotionEvent) -> a
    int b(android.view.MotionEvent) -> b
    int a(android.view.MotionEvent,int) -> a
    int b(android.view.MotionEvent,int) -> b
    float c(android.view.MotionEvent,int) -> c
    float d(android.view.MotionEvent,int) -> d
    int c(android.view.MotionEvent) -> c
com.startapp.android.publish.slider.sliding.b.h$a -> com.startapp.android.publish.slider.sliding.b.h$a:
    int a(android.view.MotionEvent,int) -> a
    int b(android.view.MotionEvent,int) -> b
    float c(android.view.MotionEvent,int) -> c
    float d(android.view.MotionEvent,int) -> d
    int a(android.view.MotionEvent) -> a
com.startapp.android.publish.slider.sliding.b.h$b -> com.startapp.android.publish.slider.sliding.b.h$b:
    int a(android.view.MotionEvent,int) -> a
    int b(android.view.MotionEvent,int) -> b
    float c(android.view.MotionEvent,int) -> c
    float d(android.view.MotionEvent,int) -> d
    int a(android.view.MotionEvent) -> a
com.startapp.android.publish.slider.sliding.b.h$c -> com.startapp.android.publish.slider.sliding.b.h$c:
    int a(android.view.MotionEvent,int) -> a
    int b(android.view.MotionEvent,int) -> b
    float c(android.view.MotionEvent,int) -> c
    float d(android.view.MotionEvent,int) -> d
    int a(android.view.MotionEvent) -> a
com.startapp.android.publish.slider.sliding.b.i -> com.startapp.android.publish.slider.sliding.b.i:
    int a(android.view.MotionEvent,int) -> a
    int b(android.view.MotionEvent,int) -> b
    float c(android.view.MotionEvent,int) -> c
    float d(android.view.MotionEvent,int) -> d
    int a(android.view.MotionEvent) -> a
com.startapp.android.publish.slider.sliding.b.j -> com.startapp.android.publish.slider.sliding.b.j:
    com.startapp.android.publish.slider.sliding.b.j$c a -> a
    float a(android.view.VelocityTracker,int) -> a
    float b(android.view.VelocityTracker,int) -> b
com.startapp.android.publish.slider.sliding.b.j$a -> com.startapp.android.publish.slider.sliding.b.j$a:
    float a(android.view.VelocityTracker,int) -> a
    float b(android.view.VelocityTracker,int) -> b
com.startapp.android.publish.slider.sliding.b.j$b -> com.startapp.android.publish.slider.sliding.b.j$b:
    float a(android.view.VelocityTracker,int) -> a
    float b(android.view.VelocityTracker,int) -> b
com.startapp.android.publish.slider.sliding.b.j$c -> com.startapp.android.publish.slider.sliding.b.j$c:
    float a(android.view.VelocityTracker,int) -> a
    float b(android.view.VelocityTracker,int) -> b
com.startapp.android.publish.slider.sliding.b.k -> com.startapp.android.publish.slider.sliding.b.k:
    float a(android.view.VelocityTracker,int) -> a
    float b(android.view.VelocityTracker,int) -> b
com.startapp.android.publish.slider.sliding.b.l -> com.startapp.android.publish.slider.sliding.b.l:
    com.startapp.android.publish.slider.sliding.b.l$g a -> a
    void a(android.view.View,com.startapp.android.publish.slider.sliding.b.a) -> a
    void a(android.view.View) -> a
    int b(android.view.View) -> b
    android.view.ViewParent c(android.view.View) -> c
com.startapp.android.publish.slider.sliding.b.l$a -> com.startapp.android.publish.slider.sliding.b.l$a:
    void a(android.view.View,com.startapp.android.publish.slider.sliding.b.a) -> a
    void a(android.view.View) -> a
    long a() -> a
    int b(android.view.View) -> b
    android.view.ViewParent c(android.view.View) -> c
com.startapp.android.publish.slider.sliding.b.l$b -> com.startapp.android.publish.slider.sliding.b.l$b:
com.startapp.android.publish.slider.sliding.b.l$c -> com.startapp.android.publish.slider.sliding.b.l$c:
    long a() -> a
com.startapp.android.publish.slider.sliding.b.l$d -> com.startapp.android.publish.slider.sliding.b.l$d:
    void a(android.view.View,com.startapp.android.publish.slider.sliding.b.a) -> a
com.startapp.android.publish.slider.sliding.b.l$e -> com.startapp.android.publish.slider.sliding.b.l$e:
    void a(android.view.View) -> a
    android.view.ViewParent c(android.view.View) -> c
com.startapp.android.publish.slider.sliding.b.l$f -> com.startapp.android.publish.slider.sliding.b.l$f:
    int b(android.view.View) -> b
com.startapp.android.publish.slider.sliding.b.l$g -> com.startapp.android.publish.slider.sliding.b.l$g:
    void a(android.view.View,com.startapp.android.publish.slider.sliding.b.a) -> a
    void a(android.view.View) -> a
    int b(android.view.View) -> b
    android.view.ViewParent c(android.view.View) -> c
com.startapp.android.publish.slider.sliding.b.m -> com.startapp.android.publish.slider.sliding.b.m:
    long a() -> a
com.startapp.android.publish.slider.sliding.b.n -> com.startapp.android.publish.slider.sliding.b.n:
    void a(android.view.View,java.lang.Object) -> a
com.startapp.android.publish.slider.sliding.b.o -> com.startapp.android.publish.slider.sliding.b.o:
    void a(android.view.View) -> a
    android.view.ViewParent b(android.view.View) -> b
com.startapp.android.publish.slider.sliding.b.p -> com.startapp.android.publish.slider.sliding.b.p:
    int a(android.view.View) -> a
com.startapp.android.publish.slider.sliding.b.q -> com.startapp.android.publish.slider.sliding.b.q:
    com.startapp.android.publish.slider.sliding.b.q$c a -> a
    void a(android.view.ViewGroup,boolean) -> a
com.startapp.android.publish.slider.sliding.b.q$a -> com.startapp.android.publish.slider.sliding.b.q$a:
    void a(android.view.ViewGroup,boolean) -> a
com.startapp.android.publish.slider.sliding.b.q$b -> com.startapp.android.publish.slider.sliding.b.q$b:
com.startapp.android.publish.slider.sliding.b.q$c -> com.startapp.android.publish.slider.sliding.b.q$c:
    void a(android.view.ViewGroup,boolean) -> a
com.startapp.android.publish.slider.sliding.b.q$d -> com.startapp.android.publish.slider.sliding.b.q$d:
    void a(android.view.ViewGroup,boolean) -> a
com.startapp.android.publish.slider.sliding.b.r -> com.startapp.android.publish.slider.sliding.b.r:
    void a(android.view.ViewGroup,boolean) -> a
com.startapp.android.publish.slider.sliding.c -> com.startapp.android.publish.slider.sliding.c:
    int a -> a
    int b -> b
    int c -> c
    float[] d -> d
    float[] e -> e
    float[] f -> f
    float[] g -> g
    int[] h -> h
    int[] i -> i
    int[] j -> j
    int k -> k
    android.view.VelocityTracker l -> l
    float m -> m
    float n -> n
    int o -> o
    int p -> p
    com.startapp.android.publish.slider.sliding.a q -> q
    com.startapp.android.publish.slider.sliding.c$a r -> r
    android.view.View s -> s
    boolean t -> t
    android.view.ViewGroup u -> u
    android.view.animation.Interpolator v -> v
    java.lang.Runnable w -> w
    com.startapp.android.publish.slider.sliding.c a(android.view.ViewGroup,com.startapp.android.publish.slider.sliding.c$a) -> a
    com.startapp.android.publish.slider.sliding.c a(android.view.ViewGroup,float,com.startapp.android.publish.slider.sliding.c$a) -> a
    void a(float) -> a
    int a() -> a
    void a(int) -> a
    int b() -> b
    void a(android.view.View,int) -> a
    android.view.View c() -> c
    int d() -> d
    void e() -> e
    boolean a(android.view.View,int,int) -> a
    boolean a(int,int) -> a
    boolean a(int,int,int,int) -> a
    int a(android.view.View,int,int,int,int) -> a
    int a(int,int,int) -> a
    int b(int,int,int) -> b
    float a(float,float,float) -> a
    float b(float) -> b
    boolean a(boolean) -> a
    void a(float,float) -> a
    void f() -> f
    void f(int) -> f
    void g(int) -> g
    void a(float,float,int) -> a
    void c(android.view.MotionEvent) -> c
    boolean b(int) -> b
    void c(int) -> c
    boolean b(android.view.View,int) -> b
    boolean a(android.view.MotionEvent) -> a
    void b(android.view.MotionEvent) -> b
    void b(float,float,int) -> b
    boolean a(float,float,int,int) -> a
    boolean a(android.view.View,float,float) -> a
    boolean d(int) -> d
    boolean b(int,int) -> b
    boolean e(int) -> e
    boolean c(int,int) -> c
    void g() -> g
    void b(int,int,int,int) -> b
    boolean d(int,int) -> d
    boolean b(android.view.View,int,int) -> b
    android.view.View e(int,int) -> e
    int f(int,int) -> f
com.startapp.android.publish.slider.sliding.c$1 -> com.startapp.android.publish.slider.sliding.c$1:
    float getInterpolation(float) -> getInterpolation
com.startapp.android.publish.slider.sliding.c$2 -> com.startapp.android.publish.slider.sliding.c$2:
    com.startapp.android.publish.slider.sliding.c a -> a
    void run() -> run
com.startapp.android.publish.slider.sliding.c$a -> com.startapp.android.publish.slider.sliding.c$a:
    void a(int) -> a
    void a(android.view.View,int,int,int,int) -> a
    void b(android.view.View,int) -> b
    void a(android.view.View,float,float) -> a
    void a(int,int) -> a
    boolean b(int) -> b
    void b(int,int) -> b
    int c(int) -> c
    int a(android.view.View) -> a
    int b(android.view.View) -> b
    boolean a(android.view.View,int) -> a
    int a(android.view.View,int,int) -> a
    int b(android.view.View,int,int) -> b
com.startapp.android.publish.splash.SplashConfig -> com.startapp.android.publish.splash.SplashConfig:
    long serialVersionUID -> serialVersionUID
    long DEFAULT_MAX_LOAD -> DEFAULT_MAX_LOAD
    int INT_EMPTY_VALUE -> INT_EMPTY_VALUE
    java.lang.String STRING_EMPTY_VALUE -> STRING_EMPTY_VALUE
    com.startapp.android.publish.splash.SplashConfig$Theme VALUE_DEFAULT_THEME -> VALUE_DEFAULT_THEME
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime VALUE_DEFAULT_MINSPLASHTIME -> VALUE_DEFAULT_MINSPLASHTIME
    long VALUE_DEFAULT_MAXLOAD -> VALUE_DEFAULT_MAXLOAD
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime VALUE_DEFAULT_MAXADDISPLAY -> VALUE_DEFAULT_MAXADDISPLAY
    com.startapp.android.publish.splash.SplashConfig$Orientation VALUE_DEFAULT_ORIENTATION -> VALUE_DEFAULT_ORIENTATION
    int customScreen -> customScreen
    java.lang.String appName -> appName
    android.graphics.drawable.Drawable logo -> logo
    int logoRes -> logoRes
    com.startapp.android.publish.splash.SplashConfig$Theme defaultTheme -> defaultTheme
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime defaultMinSplashTime -> defaultMinSplashTime
    java.lang.Long defaultMaxLoadTime -> defaultMaxLoadTime
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime defaultMaxAdDisplayTime -> defaultMaxAdDisplayTime
    com.startapp.android.publish.splash.SplashConfig$Orientation defaultOrientation -> defaultOrientation
    java.lang.String errMsg -> errMsg
    com.startapp.android.publish.splash.SplashConfig getDefaultSplashConfig() -> getDefaultSplashConfig
    void applyDefaultSplashConfig(com.startapp.android.publish.splash.SplashConfig) -> applyDefaultSplashConfig
    com.startapp.android.publish.splash.SplashConfig setTheme(com.startapp.android.publish.splash.SplashConfig$Theme) -> setTheme
    com.startapp.android.publish.splash.SplashConfig setCustomScreen(int) -> setCustomScreen
    com.startapp.android.publish.splash.SplashConfig setAppName(java.lang.String) -> setAppName
    com.startapp.android.publish.splash.SplashConfig setLogo(int) -> setLogo
    com.startapp.android.publish.splash.SplashConfig setLogo(android.graphics.drawable.Drawable) -> setLogo
    com.startapp.android.publish.splash.SplashConfig setMaxLoadAdTimeout(long) -> setMaxLoadAdTimeout
    com.startapp.android.publish.splash.SplashConfig setOrientation(com.startapp.android.publish.splash.SplashConfig$Orientation) -> setOrientation
    com.startapp.android.publish.splash.SplashConfig setMinSplashTime(com.startapp.android.publish.splash.SplashConfig$MinSplashTime) -> setMinSplashTime
    com.startapp.android.publish.splash.SplashConfig setMaxAdDisplayTime(com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime) -> setMaxAdDisplayTime
    void setErrorMsg(java.lang.String) -> setErrorMsg
    int getCustomScreen() -> getCustomScreen
    java.lang.String getAppName() -> getAppName
    android.graphics.drawable.Drawable getLogo() -> getLogo
    int getLogoResource() -> getLogoResource
    java.lang.Long getMaxLoadAdTimeout() -> getMaxLoadAdTimeout
    java.lang.String getErrorMessage() -> getErrorMessage
    com.startapp.android.publish.splash.SplashConfig$Theme getTheme() -> getTheme
    com.startapp.android.publish.splash.SplashConfig$Orientation getOrientation() -> getOrientation
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime getMinSplashTime() -> getMinSplashTime
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime getMaxAdDisplayTime() -> getMaxAdDisplayTime
    boolean validate(android.content.Context) -> validate
    android.view.View getLayout(android.content.Context) -> getLayout
    void setDefaults(android.content.Context) -> setDefaults
com.startapp.android.publish.splash.SplashConfig$1 -> com.startapp.android.publish.splash.SplashConfig$1:
    int[] $SwitchMap$com$startapp$android$publish$splash$SplashConfig$Theme -> $SwitchMap$com$startapp$android$publish$splash$SplashConfig$Theme
com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime -> com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime:
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime SHORT -> SHORT
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime LONG -> LONG
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime FOR_EVER -> FOR_EVER
    long index -> index
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime[] $VALUES -> $VALUES
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime[] values() -> values
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime valueOf(java.lang.String) -> valueOf
    long getIndex() -> getIndex
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime getByIndex(long) -> getByIndex
    com.startapp.android.publish.splash.SplashConfig$MaxAdDisplayTime getByName(java.lang.String) -> getByName
com.startapp.android.publish.splash.SplashConfig$MinSplashTime -> com.startapp.android.publish.splash.SplashConfig$MinSplashTime:
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime REGULAR -> REGULAR
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime SHORT -> SHORT
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime LONG -> LONG
    long index -> index
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime[] $VALUES -> $VALUES
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime[] values() -> values
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime valueOf(java.lang.String) -> valueOf
    long getIndex() -> getIndex
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime getByIndex(long) -> getByIndex
    com.startapp.android.publish.splash.SplashConfig$MinSplashTime getByName(java.lang.String) -> getByName
com.startapp.android.publish.splash.SplashConfig$Orientation -> com.startapp.android.publish.splash.SplashConfig$Orientation:
    com.startapp.android.publish.splash.SplashConfig$Orientation PORTRAIT -> PORTRAIT
    com.startapp.android.publish.splash.SplashConfig$Orientation LANDSCAPE -> LANDSCAPE
    com.startapp.android.publish.splash.SplashConfig$Orientation AUTO -> AUTO
    int index -> index
    com.startapp.android.publish.splash.SplashConfig$Orientation[] $VALUES -> $VALUES
    com.startapp.android.publish.splash.SplashConfig$Orientation[] values() -> values
    com.startapp.android.publish.splash.SplashConfig$Orientation valueOf(java.lang.String) -> valueOf
    int getIndex() -> getIndex
    com.startapp.android.publish.splash.SplashConfig$Orientation getByIndex(int) -> getByIndex
    com.startapp.android.publish.splash.SplashConfig$Orientation getByName(java.lang.String) -> getByName
com.startapp.android.publish.splash.SplashConfig$Theme -> com.startapp.android.publish.splash.SplashConfig$Theme:
    com.startapp.android.publish.splash.SplashConfig$Theme DEEP_BLUE -> DEEP_BLUE
    com.startapp.android.publish.splash.SplashConfig$Theme SKY -> SKY
    com.startapp.android.publish.splash.SplashConfig$Theme ASHEN_SKY -> ASHEN_SKY
    com.startapp.android.publish.splash.SplashConfig$Theme BLAZE -> BLAZE
    com.startapp.android.publish.splash.SplashConfig$Theme GLOOMY -> GLOOMY
    com.startapp.android.publish.splash.SplashConfig$Theme OCEAN -> OCEAN
    com.startapp.android.publish.splash.SplashConfig$Theme USER_DEFINED -> USER_DEFINED
    int index -> index
    com.startapp.android.publish.splash.SplashConfig$Theme[] $VALUES -> $VALUES
    com.startapp.android.publish.splash.SplashConfig$Theme[] values() -> values
    com.startapp.android.publish.splash.SplashConfig$Theme valueOf(java.lang.String) -> valueOf
    int getIndex() -> getIndex
    com.startapp.android.publish.splash.SplashConfig$Theme getByIndex(int) -> getByIndex
    com.startapp.android.publish.splash.SplashConfig$Theme getByName(java.lang.String) -> getByName
com.startapp.android.publish.splash.SplashHideListener -> com.startapp.android.publish.splash.SplashHideListener:
    void splashHidden() -> splashHidden
com.startapp.android.publish.splash.a -> com.startapp.android.publish.splash.a:
    android.app.Activity a -> a
    com.startapp.android.publish.splash.SplashConfig b -> b
    android.os.Handler c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    long j -> j
    long k -> k
    boolean l -> l
    com.startapp.android.publish.StartAppAd m -> m
    com.startapp.android.publish.model.AdPreferences n -> n
    java.lang.Runnable o -> o
    com.startapp.android.publish.AdDisplayListener p -> p
    com.startapp.android.publish.AdEventListener q -> q
    void a() -> a
    boolean d() -> d
    boolean e() -> e
    void a(java.lang.Runnable) -> a
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void b() -> b
    void k() -> k
    void a(android.os.Bundle) -> a
    void c() -> c
    boolean a(com.startapp.android.publish.splash.a) -> a
    void b(com.startapp.android.publish.splash.a) -> b
    void c(com.startapp.android.publish.splash.a) -> c
    boolean a(com.startapp.android.publish.splash.a,boolean) -> a
    void d(com.startapp.android.publish.splash.a) -> d
    boolean e(com.startapp.android.publish.splash.a) -> e
    com.startapp.android.publish.StartAppAd f(com.startapp.android.publish.splash.a) -> f
    boolean b(com.startapp.android.publish.splash.a,boolean) -> b
    com.startapp.android.publish.AdDisplayListener g(com.startapp.android.publish.splash.a) -> g
    void h(com.startapp.android.publish.splash.a) -> h
    android.app.Activity i(com.startapp.android.publish.splash.a) -> i
    void a(com.startapp.android.publish.splash.a,java.lang.Runnable) -> a
    boolean c(com.startapp.android.publish.splash.a,boolean) -> c
    boolean j(com.startapp.android.publish.splash.a) -> j
    boolean d(com.startapp.android.publish.splash.a,boolean) -> d
    boolean k(com.startapp.android.publish.splash.a) -> k
    boolean l(com.startapp.android.publish.splash.a) -> l
    com.startapp.android.publish.StartAppAd a(com.startapp.android.publish.splash.a,com.startapp.android.publish.StartAppAd) -> a
    boolean e(com.startapp.android.publish.splash.a,boolean) -> e
    boolean m(com.startapp.android.publish.splash.a) -> m
com.startapp.android.publish.splash.a$1 -> com.startapp.android.publish.splash.a$1:
    com.startapp.android.publish.splash.a a -> a
    void run() -> run
com.startapp.android.publish.splash.a$2 -> com.startapp.android.publish.splash.a$2:
    com.startapp.android.publish.splash.a a -> a
    void adHidden(com.startapp.android.publish.Ad) -> adHidden
    void adDisplayed(com.startapp.android.publish.Ad) -> adDisplayed
    void adClicked(com.startapp.android.publish.Ad) -> adClicked
com.startapp.android.publish.splash.a$3 -> com.startapp.android.publish.splash.a$3:
    com.startapp.android.publish.splash.a a -> a
    void onReceiveAd(com.startapp.android.publish.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.startapp.android.publish.Ad) -> onFailedToReceiveAd
com.startapp.android.publish.splash.a$3$1 -> com.startapp.android.publish.splash.a$3$1:
    com.startapp.android.publish.splash.a$3 a -> a
    void run() -> run
com.startapp.android.publish.splash.a$3$2 -> com.startapp.android.publish.splash.a$3$2:
    com.startapp.android.publish.splash.a$3 a -> a
    void run() -> run
com.startapp.android.publish.splash.a$4 -> com.startapp.android.publish.splash.a$4:
    java.lang.Runnable a -> a
    com.startapp.android.publish.splash.a b -> b
    void run() -> run
com.startapp.android.publish.splash.a$5 -> com.startapp.android.publish.splash.a$5:
    com.startapp.android.publish.splash.a a -> a
    void run() -> run
com.startapp.android.publish.splash.a$6 -> com.startapp.android.publish.splash.a$6:
    com.startapp.android.publish.splash.a a -> a
    void run() -> run
com.startapp.android.publish.splash.a$6$1 -> com.startapp.android.publish.splash.a$6$1:
    com.startapp.android.publish.splash.a$6 a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.startapp.android.publish.splash.a$7 -> com.startapp.android.publish.splash.a$7:
    int[] a -> a
com.startapp.android.publish.splash.b -> com.startapp.android.publish.splash.b:
    android.view.View a(android.content.Context,com.startapp.android.publish.splash.SplashConfig) -> a
    android.view.View b(android.content.Context,com.startapp.android.publish.splash.SplashConfig) -> b
    android.view.View c(android.content.Context,com.startapp.android.publish.splash.SplashConfig) -> c
    android.view.View d(android.content.Context,com.startapp.android.publish.splash.SplashConfig) -> d
    android.view.View e(android.content.Context,com.startapp.android.publish.splash.SplashConfig) -> e
    android.view.View f(android.content.Context,com.startapp.android.publish.splash.SplashConfig) -> f
    android.view.View g(android.content.Context,com.startapp.android.publish.splash.SplashConfig) -> g
    android.view.View h(android.content.Context,com.startapp.android.publish.splash.SplashConfig) -> h
com.startapp.android.publish.splash.b$1 -> com.startapp.android.publish.splash.b$1:
    int[] a -> a
com.stericson.RootTools.Executer -> com.c.a.a:
    66:93:java.util.List sendShell(java.lang.String[],int,com.stericson.RootTools.IResult,boolean,int) -> a
com.stericson.RootTools.Executer$Worker -> com.c.a.a$a:
    java.lang.String[] commands -> c
    int sleepTime -> d
    com.stericson.RootTools.IResult result -> e
    boolean useRoot -> f
    int exit -> a
    java.util.List finalResponse -> b
    116:236:void run() -> run
com.stericson.RootTools.IResult -> com.c.a.b:
    void process(java.lang.String) -> a
    void processError(java.lang.String) -> b
    void onFailure(java.lang.Exception) -> a
    void onComplete(int) -> a
    com.stericson.RootTools.IResult setProcess(java.lang.Process) -> a
com.stericson.RootTools.InternalMethods -> com.c.a.c:
    48:72:void doExec(java.lang.String[],int) -> a
    77:103:boolean returnPath() -> a
com.stericson.RootTools.InternalMethods$Worker -> com.c.a.c$a:
    java.lang.String[] commands -> b
    int exit -> a
    265:377:void run() -> run
com.stericson.RootTools.InternalVariables -> com.c.a.d:
    java.lang.String TAG -> a
    boolean accessGiven -> b
    boolean nativeToolsReady -> c
    java.lang.String[] space -> d
    java.lang.String busyboxVersion -> e
    java.lang.String pid -> f
    java.util.Set path -> g
    int timeout -> h
com.stericson.RootTools.RootTools -> com.c.a.e:
    boolean debugMode -> a
    java.util.List lastFoundBinaryPaths -> b
    int lastExitCode -> c
    int shellDelay -> d
    205:211:java.util.Set getPath() -> a
    353:353:boolean isRootAvailable() -> b
    375:423:boolean findBinary(java.lang.String) -> a
    572:581:boolean isAccessGiven() -> c
    718:735:boolean killProcess(java.lang.String) -> killProcess
    794:794:java.util.List sendShell(java.lang.String[],int,com.stericson.RootTools.RootTools$Result,int) -> a
    823:823:java.util.List sendShell(java.lang.String[],int,com.stericson.RootTools.RootTools$Result,boolean,int) -> a
    879:879:java.util.List sendShell(java.lang.String,com.stericson.RootTools.RootTools$Result,int) -> a
    904:904:java.util.List sendShell(java.lang.String,int) -> a
    979:980:void log(java.lang.String) -> b
    983:992:void log(java.lang.String,java.lang.String) -> a
com.stericson.RootTools.RootTools$Result -> com.c.a.e$a:
    java.lang.Process process -> a
    1008:1009:com.stericson.RootTools.RootTools$Result setProcess(java.lang.Process) -> b
    1:1:com.stericson.RootTools.IResult setProcess(java.lang.Process) -> a
com.stericson.RootTools.RootToolsException -> com.c.a.f:
